import React from 'react';
import Container, { ContainerLoading } from '../../components/Container';
import { Breadcrumb,Icon,Typography, Button, Divider, Col, Row, message } from 'antd';
import { ApplySectionPrompt, ApplySectionRecordStep } from '../../components/ApplyHeader';
import { ApplyStep, ApplyStatus, UrlParameter,PageError500 } from '../../app/Model';
import { withRouter, RouteComponentProps } from 'react-router';
import { HttpResponse, HttpRequest } from '../../app/Request';
import InteractionUtils from '../../utils/InteractionUtils';
import { Link } from 'react-router-dom';
import ApplyUtils from '../../utils/ApplyUtils';

/**
 * 备案流程：第四步，审核结果
 */
class RecordResult extends React.Component<RouteComponentProps<UrlParameter>>{
    readonly state:{
        /**申请单号 */
        serialNumber:string;
        /**申请状态数据 */
        data?:ApplyStatus;
    }={
        serialNumber:this.props.match.params.id,
    }

    /**
     * 页面布局
     */
    render(){
        //未载入数据时
        if(!this.state.data){
            return (
                <ContainerLoading />
            );
        }

        const {Title,Text}=Typography;
        const {status,orgName,createTime,refuse}=this.state.data;

        return (
            <Container needLogin={false}>
                {/* 标题 */}
                <Breadcrumb className="breadcrumb">
                    <Breadcrumb.Item>
                        <Link to="/public">
                            <Icon type="file-text"/>&nbsp;
                            <span>执业申请</span>
                        </Link>
                    </Breadcrumb.Item>
                    <Breadcrumb.Item><span>备案</span></Breadcrumb.Item>
                </Breadcrumb>
                <Title level={4} className="title-with-underline">备案申请</Title>

                {/* 顶部 */}
                <ApplySectionPrompt serialNumber={this.state.serialNumber} 
                    deadline={this.state.data.applyValidDate} />
                <ApplySectionRecordStep {...ApplyStep.RECORD_RESULT} />
                <Divider><span className="title-inner">审核结果</span></Divider>

                {/* 内容 */}
                {
                    // 审核通过
                    ApplyUtils.agree(status)
                    ?(
                        <section className="apply-result">
                            <Icon type="check-circle" theme="filled" className="success"/>
                            <Title level={4}>申请成功</Title>
                            <Text type="secondary">您的备案申请已通过！</Text>
                            <p className="button-group">
                                <Button type="primary" className="button" onClick={this.download}>下载电子证</Button>
                                <Button className="button" onClick={this.toLogin}>登录系统</Button>
                            </p>

                            <Col span={14} offset={5} className="instruction">
                                <p className="title"><Text type="secondary">关于登录系统</Text></p>
                                <p>
                                    <Text type="secondary">申请成功后系统已经为您生成了登录账号，请牢记你的账号。并通过短信发送的登录密码登录到系统，就可以对机构信息进行维护。</Text>
                                    <Text type="secondary">短信没收到？<Button type="link" onClick={this.reSend}>重新发送</Button>！</Text>
                                </p>
                                <p className="title"><Text type="secondary">关于现场领证</Text></p>
                                <p><Text type="secondary">请携带机构相关证件原件及人员的身份证...【未完】。</Text></p>
                            </Col>
                        </section>
                    )
                    // 被驳回
                    :(ApplyUtils.canEdit(status)?(
                        <section className="apply-result">
                            <Icon type="check-circle" theme="filled" className="failure"/>
                            <Title level={4}>申请失败</Title>
                            <p><Text type="secondary">对不起！您的备案申请被驳回！</Text></p>
                            <Row>
                                <Col span={8} offset={8} className="instruction">
                                    <p>机构名称：{orgName}</p>
                                    <p>申请日期：{createTime}</p>
                                    <p>处理状态：<span className="stress">审核未通过</span></p>
                                    <p>驳回理由：{refuse}</p>
                                </Col>
                            </Row>
                            <p className="button-group">
                                <Button type="primary" className="button" onClick={this.edit}>重新编辑</Button>
                            </p>
                        </section>
                    )
                    // 审核中
                    :(
                        <section className="apply-result">
                            <Icon type="clock-circle" theme="filled"/>
                            <Title level={4}>审核中</Title>
                            <p><Text type="secondary"></Text></p>
                            <Row>
                                <Col span={6} offset={9} className="instruction">
                                    <p>机构名称：{orgName}</p>
                                    <p>申请日期：{createTime}</p>
                                    <p>处理状态：<span className="stress">审核中</span></p>
                                </Col>
                            </Row>
                            <Row>
                                <Col span={12} offset={6} className="instruction">
                                    <p className="title"><Text type="secondary">跟踪审核情况</Text></p>
                                    <p>
                                        <Text type="secondary">当处理状态出现变动时，我们会随时短信通知您。也可以<Button type="link" onClick={this.attention}>关注高新公众号</Button>，随时查看办事进度。</Text>
                                    </p>
                                </Col>
                            </Row>
                        </section>
                    ))
                }
            </Container>
        );
    }

    /**
     * 组件载入后，载入数据信息
     */
    async componentDidMount(){
        //获取申请状态信息
        const applyStatusResponse:HttpResponse<ApplyStatus>=
            await ((new HttpRequest()).get<ApplyStatus>(
                `webapi/apply/queryStatus?applyNo=${this.state.serialNumber}`
            ));

        // 失败跳转500
        if(!applyStatusResponse.success||!applyStatusResponse.data){
            this.props.history.push(PageError500);
            return;
        }

        // 设置显示
        this.setState({
            ...this.state,
            data:applyStatusResponse.data
        });
    }

    /**
     * 重新编辑
     */
    edit=()=>{
        InteractionUtils.scrollToTop();
        this.props.history.push(ApplyStep.RECORD_COMMITMENT.routePath(this.state.serialNumber));
    }

    /**
     * 下载电子证
     */
    download=()=>{
        if(!this.state.data) return;
        window.open(this.state.data.eCert);
    }

    /**
     * 系统登录
     */
    toLogin=()=>{
        InteractionUtils.scrollToTop();
        this.props.history.push("/");
    }

    /**
     * 重新发送
     */
    reSend=()=>{
        message.warning("此功能正在开发中...");
    }

    /**
     * 关注公众号
     */
    attention=()=>{
        message.warning("此功能正在开发中...");
    }
}
export default withRouter(RecordResult);