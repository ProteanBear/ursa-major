{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input-number/style/css\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/auto-complete/style/css\";\nimport _AutoComplete from \"antd/es/auto-complete\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport _objectSpread from \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/components/ApplyFormEquipment.tsx\";\nimport React from 'react';\nimport { DictionaryLoader } from '../app/DictionaryLoader';\n\n/**\n  * 申请公用表单：设备管理\n  */\nclass ApplyFormEquipment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      equipmentNames: [],\n      equipments: this.props.equiptments\n      /**\n       * 页面布局\n       */\n\n    };\n\n    this.handleSearch = value => {\n      const dictionaryEquiptment = DictionaryLoader.instance.equipment();\n      let resultArray = [];\n      dictionaryEquiptment.map(dict => {\n        if (dict.label && String(dict.label).indexOf(value) !== -1) {\n          resultArray.push(dict);\n        }\n      });\n      this.setState(_objectSpread({}, this.state, {\n        equiptmentNames: resultArray\n      }));\n    };\n\n    this.addNewEquipment = () => {\n      const equipments = this.state.equipments;\n      equipments.push({\n        name: \"\",\n        type: 1,\n        num: 1\n      });\n      this.setState(_objectSpread({}, this.state, {\n        equipments: equipments\n      }));\n      this.props.onChange(equipments);\n    };\n\n    this.removeEquipment = index => {\n      const equipments = this.state.equipments;\n      equipments.splice(index, 1);\n      this.setState(_objectSpread({}, this.state, {\n        equipments: equipments\n      }));\n      this.props.onChange(equipments);\n    };\n\n    this.equipmentChange = (index, equipment) => {\n      const equipments = this.state.equipments;\n      equipments[index] = equipment;\n      this.setState(_objectSpread({}, this.state, {\n        equipments: equipments\n      }));\n      this.props.onChange(equipments);\n    };\n  }\n\n  render() {\n    const Option = _Select.Option;\n    const equipmentNames = this.state.equipmentNames;\n    const autoCompleteChildren = equipmentNames.map(data => React.createElement(Option, {\n      key: data.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, data.label));\n    return React.createElement(_Form, {\n      className: \"form-ul-group\",\n      layout: \"inline\",\n      labelCol: {\n        span: 0\n      },\n      wrapperCol: {\n        span: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.equiptments.map((equipment, index) => React.createElement(_Row, {\n      key: \"equipment-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(_Select, {\n      value: equipment.type,\n      defaultValue: 1,\n      onChange: value => {\n        equipment.type = value;\n        this.equipmentChange(index, equipment);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u5927\\u578B\\u8BBE\\u5907\"), React.createElement(Option, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\u666E\\u901A\\u8BBE\\u5907\")))), React.createElement(_Col, {\n      span: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"--\")), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(_AutoComplete, {\n      value: equipment.name,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u8BBE\\u5907\\u540D\\u79F0\",\n      onSearch: this.handleSearch,\n      onSelect: () => {},\n      onChange: value => {\n        equipment.name = value;\n        this.equipmentChange(index, equipment);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, autoCompleteChildren))), React.createElement(_Col, {\n      span: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"--\")), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(_InputNumber, {\n      min: 1,\n      step: 1,\n      defaultValue: 1,\n      value: equipment.num,\n      formatter: value => \"\".concat(value, \"\\u53F0\"),\n      parser: value => value ? value.replace('台', '') : \"\",\n      onChange: value => {\n        if (!value) return;\n        equipment.num = value;\n        this.equipmentChange(index, equipment);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(_Col, {\n      span: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"link\",\n      onClick: () => this.removeEquipment(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      className: \"dynamic-delete-button\",\n      type: \"minus-circle-o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))))), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"dashed\",\n      onClick: this.addNewEquipment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \" \\u6DFB\\u52A0\\u8BBE\\u5907\")))));\n  }\n  /**\n   * 过滤提示大设备名称\n   */\n\n\n}\n\nexport default ApplyFormEquipment;","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/components/ApplyFormEquipment.tsx"],"names":["React","DictionaryLoader","ApplyFormEquipment","Component","state","equipmentNames","equipments","props","equiptments","handleSearch","value","dictionaryEquiptment","instance","equipment","resultArray","map","dict","label","String","indexOf","push","setState","equiptmentNames","addNewEquipment","name","type","num","onChange","removeEquipment","index","splice","equipmentChange","render","Option","autoCompleteChildren","data","span","replace"],"mappings":"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","sourcesContent":["import React, {ChangeEvent } from 'react';\nimport {Col,Form,Button,Icon, Select,InputNumber, AutoComplete, Row} from 'antd';\n\nimport { DictionaryData,DictionaryLoader } from '../app/DictionaryLoader';\nimport { ApplyContentEquipment } from '../app/Model';\nimport { SelectValue } from 'antd/lib/select';\n\ntype ApplyFormEquipmentProps={\n    equiptments:Array<ApplyContentEquipment>,\n    onChange(equipments:Array<ApplyContentEquipment>):void\n}\n\n/**\n  * 申请公用表单：设备管理\n  */\nclass ApplyFormEquipment extends React.Component<ApplyFormEquipmentProps>{\n    readonly state:{\n        equipmentNames:Array<DictionaryData>,\n        equipments:Array<ApplyContentEquipment>\n    }={\n        equipmentNames:[],\n        equipments:this.props.equiptments\n    }\n\n    /**\n     * 页面布局\n     */\n    render(){\n        const {Option}=Select;\n        const {equipmentNames}=this.state;\n\n        const autoCompleteChildren=equipmentNames.map(\n            data=><Option key={data.value}>{data.label}</Option>\n        );\n\n        return (\n            <Form className=\"form-ul-group\" layout=\"inline\" labelCol={{span:0}} wrapperCol={{span:24}}>\n                {this.props.equiptments.map((equipment,index)=>(\n                    <Row key={`equipment-${index}`}>\n                        <Col span={4}>\n                        <Form.Item>\n                            <Select value={equipment.type} defaultValue={1}\n                                onChange={(value:number)=>{\n                                    equipment.type=value;\n                                    this.equipmentChange(index,equipment);\n                                }}\n                            >\n                                <Option value={0}>大型设备</Option>\n                                <Option value={1}>普通设备</Option>\n                            </Select>\n                        </Form.Item>\n                        </Col>\n                        <Col span={1}><span className=\"divider\">--</span></Col>\n                        <Col span={8}>\n                        <Form.Item>\n                            <AutoComplete value={equipment.name}\n                                    placeholder=\"请输入设备名称\"\n                                    onSearch={this.handleSearch}\n                                    onSelect={()=>{}}\n                                    onChange={(value:SelectValue)=>{\n                                        equipment.name=(value as string);\n                                        this.equipmentChange(index,equipment);\n                                    }}\n                            >\n                                {autoCompleteChildren}\n                            </AutoComplete>\n                        </Form.Item>\n                        </Col>\n                        <Col span={1}><span className=\"divider\">--</span></Col>\n                        <Col span={4}>\n                        <Form.Item>\n                            <InputNumber min={1} step={1} defaultValue={1}\n                                value={equipment.num} \n                                formatter={value => `${value}台`}\n                                parser={value => value?value.replace('台', ''):\"\"}\n                                onChange={(value:number|undefined)=>{\n                                    if(!value) return;\n                                    equipment.num=value;\n                                    this.equipmentChange(index,equipment);\n                                }}\n                            />\n                        </Form.Item>\n                        </Col>\n                        <Col span={6}>\n                        <Button type=\"link\" onClick={()=>this.removeEquipment(index)}>\n                            <Icon\n                                className=\"dynamic-delete-button\"\n                                type=\"minus-circle-o\"\n                            />\n                        </Button>\n                        </Col>\n                    </Row>\n                ))}\n                <Row>\n                    <Col span={18}>\n                        <Form.Item>\n                            <Button type=\"dashed\" onClick={this.addNewEquipment}>\n                                <Icon type=\"plus\" /> 添加设备\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        );\n    }\n\n    /**\n     * 过滤提示大设备名称\n     */\n    handleSearch = (value:string) => {\n        const dictionaryEquiptment=DictionaryLoader.instance.equipment();\n        let resultArray:Array<DictionaryData>=[];\n        dictionaryEquiptment.map((dict:DictionaryData)=>{\n            if(dict.label&&(String(dict.label).indexOf(value)!==-1)){\n                resultArray.push(dict);\n            }\n        });\n        this.setState({\n            ...this.state,\n            equiptmentNames:resultArray\n        });\n    }\n\n    /**\n     * 添加一条新的设备信息\n     */\n    addNewEquipment=()=>{\n        const {equipments}=this.state;\n        equipments.push({\n            name:\"\",\n            type:1,\n            num:1\n        });\n        this.setState({...this.state,equipments:equipments});\n\n        this.props.onChange(equipments);\n    }\n\n    /**\n     * 删除一个新添加的设备\n     */\n    removeEquipment=(index:number)=>{\n        const {equipments}=this.state;\n        equipments.splice(index,1);\n        this.setState({...this.state,equipments:equipments});\n\n        this.props.onChange(equipments);\n    }\n\n    /**\n     * 设备信息修改\n     */\n    equipmentChange=(index:number,equipment:ApplyContentEquipment)=>{\n        const {equipments}=this.state;\n        equipments[index]=equipment;\n        this.setState({...this.state,equipments:equipments});\n\n        this.props.onChange(equipments);\n    }\n}\nexport default ApplyFormEquipment;"]},"metadata":{},"sourceType":"module"}