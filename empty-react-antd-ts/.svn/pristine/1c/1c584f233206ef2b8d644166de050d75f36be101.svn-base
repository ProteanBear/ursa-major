{"ast":null,"code":"import \"antd/es/tabs/style/css\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/pages/Login.tsx\";\nimport './login.css';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { DataCache } from '../app/DataCache';\nimport { LoginChecker } from '../app/LoginChecker';\nimport LoginForAccount from '../components/LoginForAccount';\nimport LoginForPhone from '../components/LoginForPhone';\n/**\n * 登录页面：\n * 进入页面通过本地存储Token及接口判断是否已经登录，已经登录则跳转到机构首页；\n * 未登录的情况下，获取本地存储的上次编辑情况，跳转到上次编辑申请位置；\n * 上述情况都没有，则停留在本页。\n */\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageLoadError: false,\n      requesting: false,\n      autoLogin: true,\n      smsLoading: false,\n      smsNextTime: 60,\n      data: {\n        username: \"\",\n        password: \"\",\n        imgToken: \"\",\n        imgCode: \"\",\n        phone: \"\",\n        code: \"\",\n        codeToken: \"\"\n      },\n      error: {\n        username: null,\n        password: null,\n        imgCode: null,\n        phone: null,\n        code: null\n      }\n      /**\n       * 登录检查器\n       */\n\n    };\n    this.loginChecker = new LoginChecker();\n  }\n\n  /**\n   * 页面布局\n   */\n  render() {\n    const Title = _Typography.Title;\n    const TabPane = _Tabs.TabPane;\n    const iconStyle = {\n      color: 'rgba(0,0,0,.25)'\n    };\n    return React.createElement(\"div\", {\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, process.env.REACT_APP_NAME), React.createElement(_Tabs, {\n      defaultActiveKey: \"accountLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"\\u8D26\\u6237\\u5BC6\\u7801\\u767B\\u5F55\",\n      key: \"accountLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(LoginForAccount, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(TabPane, {\n      tab: \"\\u624B\\u673A\\u53F7\\u767B\\u5F55\",\n      key: \"phoneLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(LoginForPhone, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))));\n  }\n  /**\n   * 组件载入前检查是否已经登陆，以及上次编辑的状态\n   */\n\n\n  async componentWillMount() {\n    const _ref = await this.loginChecker.loginUser(),\n          isLogin = _ref.isLogin; //已登录：跳转到机构首页\n\n\n    if (isLogin) {\n      this.props.history.replace(\"/protected/organization\");\n      return;\n    } //未登录：检查是否有编辑申请\n\n\n    const editInfor = DataCache.instance.edit();\n\n    if (editInfor) {\n      const serialNumber = editInfor.serialNumber,\n            step = editInfor.step;\n\n      if (serialNumber) {\n        this.props.history.push(step.routePath(serialNumber));\n        return;\n      }\n    }\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/pages/Login.tsx"],"names":["React","withRouter","DataCache","LoginChecker","LoginForAccount","LoginForPhone","Login","Component","state","imageLoadError","requesting","autoLogin","smsLoading","smsNextTime","data","username","password","imgToken","imgCode","phone","code","codeToken","error","loginChecker","render","Title","TabPane","iconStyle","color","process","env","REACT_APP_NAME","componentWillMount","loginUser","isLogin","props","history","replace","editInfor","instance","edit","serialNumber","step","push","routePath"],"mappings":"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","sourcesContent":["import './login.css';\nimport React, { ChangeEvent,KeyboardEvent } from 'react';\nimport {Link, RouteComponentProps, withRouter} from 'react-router-dom';\n\nimport { Typography,Tabs, Form, Input,Icon,Checkbox, Button } from 'antd';\nimport { DataCache, CacheMode } from '../app/DataCache';\nimport { LoginChecker } from '../app/LoginChecker';\nimport { HttpRequest } from '../app/Request';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\nimport { LoginUser } from '../app/Model';\nimport LoginForAccount from '../components/LoginForAccount';\nimport LoginForPhone from '../components/LoginForPhone';\n\n/**\n * 登录页面：\n * 进入页面通过本地存储Token及接口判断是否已经登录，已经登录则跳转到机构首页；\n * 未登录的情况下，获取本地存储的上次编辑情况，跳转到上次编辑申请位置；\n * 上述情况都没有，则停留在本页。\n */\nclass Login extends React.Component<RouteComponentProps>{\n    readonly state:{\n        /**图形验证码Base64编码 */\n        imageBase64?:string|undefined;\n        /**图片载入错误 */\n        imageLoadError:boolean;\n        /**请求中 */\n        requesting:boolean;\n        /**是否自动登录 */\n        autoLogin:boolean;\n        /**短信验证码获取中 */\n        smsLoading:boolean;\n        /**短信验证码下次可获取时间 */\n        smsNextTime:number;\n        /**提交数据 */\n        data:{\n            [key:string]:string\n        }\n        /**错误状态 */\n        error:{\n            [key:string]:string|null\n        }\n    }={\n        imageLoadError:false,\n        requesting:false,\n        autoLogin:true,\n        smsLoading:false,\n        smsNextTime:60,\n        data:{\n            username:\"\",\n            password:\"\",\n            imgToken:\"\",\n            imgCode:\"\",\n            phone:\"\",\n            code:\"\",\n            codeToken:\"\"\n        },\n        error:{\n            username:null,\n            password:null,\n            imgCode:null,\n            phone:null,\n            code:null,\n        }\n    }\n\n    /**\n     * 登录检查器\n     */\n    private loginChecker=new LoginChecker();\n\n    /**\n     * 页面布局\n     */\n    render(){\n        const {Title}=Typography;\n        const {TabPane}=Tabs;\n        const iconStyle={ color: 'rgba(0,0,0,.25)' }\n        return (\n            <div className=\"background\">\n                <section className=\"login-container\">\n                    <Title>{process.env.REACT_APP_NAME}</Title>\n                    <Tabs defaultActiveKey=\"accountLogin\" >\n                        <TabPane tab=\"账户密码登录\" key=\"accountLogin\">\n                            <LoginForAccount />\n                        </TabPane>\n                        <TabPane tab=\"手机号登录\" key=\"phoneLogin\">\n                            <LoginForPhone />\n                        </TabPane>\n                    </Tabs>\n                </section>\n            </div>\n        );\n    }\n\n    /**\n     * 组件载入前检查是否已经登陆，以及上次编辑的状态\n     */\n    async componentWillMount(){\n        const {isLogin}=await this.loginChecker.loginUser();\n        //已登录：跳转到机构首页\n        if(isLogin){\n            this.props.history.replace(\"/protected/organization\");\n            return;\n        }\n\n        //未登录：检查是否有编辑申请\n        const editInfor=DataCache.instance.edit();\n        if(editInfor){\n            const {serialNumber,step}=editInfor;\n            if(serialNumber){\n                this.props.history.push(step.routePath(serialNumber));\n                return;\n            }\n        }\n    }\n}\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}