{"ast":null,"code":"import \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/tooltip/style/css\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport _objectSpread from \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/components/LoginForPhone.tsx\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { LoginChecker } from '../app/LoginChecker';\nimport { DataCache, CacheMode } from '../app/DataCache';\nimport { HttpRequest } from '../app/Request';\n\n/**\n * 用户登录：使用机构账号登录表单\n */\nclass LoginForPhone extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      requesting: false,\n      imageBase64: undefined,\n      imageToken: undefined,\n      imageCode: \"\",\n      data: {\n        phone: \"\",\n        code: \"\",\n        codeToken: \"\"\n      },\n      loadError: false,\n      requestError: false,\n      autoLogin: true,\n      remainTime: 0,\n      sending: false,\n      sendError: false\n      /**\n       * 登录检查器\n       */\n\n    };\n    this.loginChecker = new LoginChecker();\n\n    this.loadVerifyCodeImage = async () => {\n      this.setState(_objectSpread({}, this.state, {\n        imageBase64: undefined,\n        loading: true\n      }));\n      const verifyCodeResponse = await new HttpRequest().get(\"webapi/login/getVerCodeImg\");\n\n      if (!verifyCodeResponse.success || !verifyCodeResponse.data) {\n        this.setState(_objectSpread({}, this.state, {\n          loadError: true,\n          loading: false\n        }));\n        return;\n      }\n\n      this.setState(_objectSpread({}, this.state, {\n        loadError: false,\n        loading: false,\n        imageBase64: verifyCodeResponse.data.img,\n        data: _objectSpread({}, this.state.data, {\n          imgToken: verifyCodeResponse.data.imgToken\n        })\n      }));\n    };\n\n    this.sendMessageCode = async () => {\n      this.setState(_objectSpread({}, this.state, {\n        sendError: false,\n        sending: true\n      }));\n      const sendResponse = await new HttpRequest().post(\"webapi/login/sendMessageCode\", {\n        phone: this.state.data.phone,\n        imgCode: this.state.imageCode,\n        imgToken: this.state.imageToken\n      });\n\n      if (!sendResponse.success || !sendResponse.data) {\n        this.setState(_objectSpread({}, this.state, {\n          sendError: true,\n          sending: false\n        }));\n        return;\n      }\n\n      this.setState(_objectSpread({}, this.state, {\n        sendError: false,\n        sending: false\n      }));\n      this.countdown(60);\n    };\n\n    this.countdown = time => {\n      if (time === 0) return;\n      this.setState(_objectSpread({}, this.state, {\n        remainTime: --time\n      }));\n      setTimeout(() => this.countdown(time), 1000);\n    };\n\n    this.inputOnChange = (value, key) => {\n      const data = this.state.data;\n      data[key] = value;\n      this.setState(_objectSpread({}, this.state, {\n        data: data\n      }));\n    };\n\n    this.inputOnFocus = () => {\n      this.setState(_objectSpread({}, this.state, {\n        requestError: false\n      }));\n    };\n\n    this.autoLoginOnChange = event => {\n      this.setState(_objectSpread({}, this.state, {\n        autoLogin: event.target.checked\n      }));\n    };\n\n    this.keyDownLogin = event => {\n      if (event.key === \"Enter\") {\n        this.login();\n      }\n    };\n\n    this.login = async () => {\n      // 验证输入\n      const data = this.state.data;\n\n      if (data.username === \"\" || data.password === \"\" || data.imgCode === \"\") {\n        return;\n      } // 登录请求\n\n\n      this.setState(_objectSpread({}, this.state, {\n        requesting: true\n      }));\n      const loginResponse = await new HttpRequest().post(\"webapi/login/loginByAccount\", process.env.REACT_APP_USE_MOCK === \"true\" ? _objectSpread({}, data, {\n        token: \"sdjlksdjfkdlsfksdjflksdjfjlsdflksdflk\",\n        userId: 0,\n        userName: \"人员姓名\",\n        roleName: \"窗口人员\"\n      }) : data); // 登录失败\n\n      if (!loginResponse.success || !loginResponse.data) {\n        this.setState(_objectSpread({}, this.state, {\n          requesting: false,\n          requestError: true\n        }));\n        return;\n      } // 记录当前Token\n      // 勾选自动登录记录到LocalStorage中，未勾选记录到SessionStorage中\n\n\n      DataCache.instance.token(loginResponse.data.token, {\n        isLogin: true,\n        data: loginResponse.data\n      }, this.state.autoLogin ? CacheMode.LOCAL : CacheMode.SESSION); // 成功后进入主页\n\n      this.props.history.replace(\"/protected/organization\");\n    };\n  }\n\n  /**\n   * 页面布局\n   */\n  render() {\n    const iconStyle = {\n      color: 'rgba(0,0,0,.25)'\n    };\n    const _this$state$data = this.state.data,\n          phone = _this$state$data.phone,\n          code = _this$state$data.code;\n    return React.createElement(_Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      hasFeedback: true,\n      validateStatus: this.state.requestError ? \"error\" : undefined,\n      help: this.state.requestError ? \"登录失败！手机号或验证码错误！\" : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      disabled: this.state.requesting,\n      prefix: React.createElement(_Icon, {\n        type: \"phone\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      placeholder: \"\\u624B\\u673A\\u53F7\\u7801\",\n      value: phone,\n      onChange: event => this.inputOnChange(event.target.value, \"phone\"),\n      onFocus: this.inputOnFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      disabled: this.state.requesting,\n      style: {\n        width: 220,\n        marginRight: 10\n      },\n      prefix: React.createElement(_Icon, {\n        type: \"credit-card\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      placeholder: \"\\u8F93\\u5165\\u53F3\\u4FA7\\u7684\\u56FE\\u5F62\\u9A8C\\u8BC1\\u7801\",\n      value: this.state.imageCode,\n      onChange: event => this.setState(_objectSpread({}, this.state, {\n        imageCode: event.target.value\n      })),\n      onFocus: this.inputOnFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.state.imageBase64 ? React.createElement(_Tooltip, {\n      placement: \"right\",\n      title: \"\\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6362\\u4E00\\u5F20\\uFF01\",\n      style: {\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.imageBase64,\n      width: \"110\",\n      height: \"32\",\n      onClick: this.loadVerifyCodeImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })) : this.state.loadError ? React.createElement(_Button, {\n      type: \"link\",\n      style: {\n        width: 110\n      },\n      onClick: this.loadVerifyCodeImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\u91CD\\u65B0\\u8F7D\\u5165\") : React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\",\n        width: 110\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), \"\\xA0\\u8F7D\\u5165\\u4E2D\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      className: \"input-verify-code\",\n      disabled: this.state.requesting,\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }),\n      placeholder: \"\\u9A8C\\u8BC1\\u7801\",\n      value: code,\n      onChange: event => this.inputOnChange(event.target.value, \"code\"),\n      onFocus: this.inputOnFocus,\n      onKeyDown: this.keyDownLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      disabled: phone === \"\" || this.state.imageCode === \"\" || this.state.remainTime !== 0,\n      htmlType: \"button\",\n      className: \"container-verify\",\n      loading: this.state.sending,\n      onClick: this.sendMessageCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.remainTime || \"获取验证码\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      className: \"auto-login\",\n      checked: this.state.autoLogin,\n      disabled: this.state.requesting,\n      onChange: this.autoLoginOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\u81EA\\u52A8\\u767B\\u5F55\"), React.createElement(Link, {\n      className: \"apply\",\n      to: \"/public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"\\u6267\\u4E1A\\u7533\\u8BF7\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      disabled: phone === \"\" || code === \"\" || this.state.sending,\n      type: \"primary\",\n      onClick: this.login,\n      htmlType: \"button\",\n      className: \"button-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"\\u767B \\u5F55\")));\n  }\n  /**\n   * 组件载入前检查是否已经登陆，以及上次编辑的状态\n   */\n\n\n  async componentWillMount() {\n    const _ref = await this.loginChecker.loginUser(),\n          isLogin = _ref.isLogin; //已登录：跳转到机构首页\n\n\n    if (isLogin) {\n      this.props.history.replace(\"/protected/organization\");\n      return;\n    } //未登录：检查是否有编辑申请\n\n\n    const editInfor = DataCache.instance.edit();\n\n    if (editInfor) {\n      const serialNumber = editInfor.serialNumber,\n            step = editInfor.step;\n\n      if (serialNumber) {\n        this.props.history.push(step.routePath(serialNumber));\n        return;\n      }\n    } // 未登录载入图形验证码\n\n\n    this.loadVerifyCodeImage();\n  }\n  /**\n   * 载入图形验证码\n   */\n\n\n}\n\nexport default withRouter(LoginForPhone);","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/components/LoginForPhone.tsx"],"names":["React","Link","withRouter","LoginChecker","DataCache","CacheMode","HttpRequest","LoginForPhone","Component","state","loading","requesting","imageBase64","undefined","imageToken","imageCode","data","phone","code","codeToken","loadError","requestError","autoLogin","remainTime","sending","sendError","loginChecker","loadVerifyCodeImage","setState","verifyCodeResponse","get","success","img","imgToken","sendMessageCode","sendResponse","post","imgCode","countdown","time","setTimeout","inputOnChange","value","key","inputOnFocus","autoLoginOnChange","event","target","checked","keyDownLogin","login","username","password","loginResponse","process","env","REACT_APP_USE_MOCK","token","userId","userName","roleName","instance","isLogin","LOCAL","SESSION","props","history","replace","render","iconStyle","color","width","marginRight","cursor","display","componentWillMount","loginUser","editInfor","edit","serialNumber","step","push","routePath"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, KeyboardEvent } from 'react';\nimport { RouteComponentProps,Link, withRouter } from 'react-router-dom';\nimport { UrlParameter, LoginUser } from '../app/Model';\nimport { Form, Input, Checkbox, Button, Icon, Tooltip } from 'antd';\nimport { LoginChecker } from '../app/LoginChecker';\nimport { DataCache, CacheMode } from '../app/DataCache';\nimport { HttpRequest } from '../app/Request';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\ntype LoginForPhoneProps=RouteComponentProps<UrlParameter>&{\n\n}\n\n/**\n * 用户登录：使用机构账号登录表单\n */\nclass LoginForPhone extends React.Component<LoginForPhoneProps>{\n    readonly state:{\n        /**图片信息载入中 */\n        loading:boolean;\n        /**登录请求中 */\n        requesting:boolean;\n        /**图形验证码内容 */\n        imageBase64:string|undefined;\n        /**图形验证码Token */\n        imageToken:string|undefined;\n        /**输入的图形验证码内容 */\n        imageCode:string;\n        /**登录请求数据 */\n        data:{\n            [key:string]:string,\n        };\n        /**验证码图片载入错误 */\n        loadError:boolean;\n        /**请求出错 */\n        requestError:boolean;\n        /**是否自动登录 */\n        autoLogin:boolean;\n        /**再次请求验证码剩余时间 */\n        remainTime:number;\n        /**验证码请求中 */\n        sending:boolean;\n        /**验证码发送错误 */\n        sendError:boolean;\n    }={\n        loading:true,\n        requesting:false,\n        imageBase64:undefined,\n        imageToken:undefined,\n        imageCode:\"\",\n        data:{\n            phone:\"\",\n            code:\"\",\n            codeToken:\"\",\n        },\n        loadError:false,\n        requestError:false,\n        autoLogin:true,\n        remainTime:0,\n        sending:false,\n        sendError:false,\n    }\n\n    /**\n     * 登录检查器\n     */\n    private loginChecker=new LoginChecker();\n\n    /**\n     * 页面布局\n     */\n    render(){\n        const iconStyle={ color: 'rgba(0,0,0,.25)' }\n        const {phone,code}=this.state.data;\n\n        return (\n            <Form>\n                <Form.Item hasFeedback\n                    validateStatus={this.state.requestError?\"error\":undefined}\n                    help={this.state.requestError?\"登录失败！手机号或验证码错误！\":undefined}\n                >\n                    <Input disabled={this.state.requesting}\n                        prefix={<Icon type=\"phone\" style={iconStyle} />}\n                        placeholder=\"手机号码\" \n                        value={phone}\n                        onChange={(event:ChangeEvent<HTMLInputElement>)=>\n                            this.inputOnChange(event.target.value,\"phone\")}\n                        onFocus={this.inputOnFocus}\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Input disabled={this.state.requesting}\n                        style={{width:220,marginRight:10}}\n                        prefix={<Icon type=\"credit-card\" style={iconStyle} />}\n                        placeholder=\"输入右侧的图形验证码\" \n                        value={this.state.imageCode}\n                        onChange={(event:ChangeEvent<HTMLInputElement>)=>\n                            this.setState({...this.state,imageCode:event.target.value})}\n                        onFocus={this.inputOnFocus}\n                    />\n                    {this.state.imageBase64\n                    ?(\n                        <Tooltip placement=\"right\" title=\"看不清？点击换一张！\" style={{cursor:\"pointer\"}}>\n                            <img src={this.state.imageBase64} width=\"110\" height=\"32\"\n                                onClick={this.loadVerifyCodeImage}\n                            />\n                        </Tooltip>\n                    )\n                    :(\n                        this.state.loadError\n                        ?(\n                            <Button type=\"link\" style={{width:110}}\n                                onClick={this.loadVerifyCodeImage}\n                            >\n                                重新载入\n                            </Button>\n                        )\n                        :(\n                            <span style={{display:\"inline-block\",width:110}}><Icon type=\"loading\"/>&nbsp;载入中</span>\n                        )\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    <Input className=\"input-verify-code\"\n                        disabled={this.state.requesting}\n                        prefix={<Icon type=\"lock\" style={iconStyle} />}\n                        placeholder=\"验证码\" \n                        value={code}\n                        onChange={(event:ChangeEvent<HTMLInputElement>)=>\n                            this.inputOnChange(event.target.value,\"code\")}\n                        onFocus={this.inputOnFocus}\n                        onKeyDown={this.keyDownLogin}\n                    />\n                    <Button disabled={phone===\"\"||this.state.imageCode===\"\"||this.state.remainTime!==0}\n                        htmlType=\"button\" className=\"container-verify\"\n                        loading={this.state.sending}\n                        onClick={this.sendMessageCode}\n                    >\n                        {this.state.remainTime||\"获取验证码\"}\n                    </Button>\n                </Form.Item>\n                <Form.Item>\n                    <Checkbox \n                        className=\"auto-login\" \n                        checked={this.state.autoLogin}\n                        disabled={this.state.requesting}\n                        onChange={this.autoLoginOnChange}\n                    >\n                        自动登录\n                    </Checkbox>\n                    <Link className=\"apply\" to=\"/public\">执业申请</Link>\n                </Form.Item>\n                <Form.Item>\n                    <Button\n                        disabled={phone===\"\"||code===\"\"||this.state.sending}\n                        type=\"primary\" onClick={this.login}\n                        htmlType=\"button\" className=\"button-submit\">\n                        登 录\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n\n    /**\n     * 组件载入前检查是否已经登陆，以及上次编辑的状态\n     */\n    async componentWillMount(){\n        const {isLogin}=await this.loginChecker.loginUser();\n        //已登录：跳转到机构首页\n        if(isLogin){\n            this.props.history.replace(\"/protected/organization\");\n            return;\n        }\n\n        //未登录：检查是否有编辑申请\n        const editInfor=DataCache.instance.edit();\n        if(editInfor){\n            const {serialNumber,step}=editInfor;\n            if(serialNumber){\n                this.props.history.push(step.routePath(serialNumber));\n                return;\n            }\n        }\n        \n        // 未登录载入图形验证码\n        this.loadVerifyCodeImage();\n    }\n\n    /**\n     * 载入图形验证码\n     */\n    loadVerifyCodeImage=async ()=>{\n        this.setState({...this.state,imageBase64:undefined,loading:true});\n        const verifyCodeResponse=await ((new HttpRequest())\n            .get<{img:string,imgToken:string}>(\"webapi/login/getVerCodeImg\"));\n\n        if(!verifyCodeResponse.success||!verifyCodeResponse.data){\n            this.setState({\n                ...this.state,\n                loadError:true,\n                loading:false,\n            });\n            return;\n        }\n\n        this.setState({\n            ...this.state,\n            loadError:false,\n            loading:false,\n            imageBase64:verifyCodeResponse.data.img,\n            data:{\n                ...this.state.data,\n                imgToken:verifyCodeResponse.data.imgToken\n            }\n        });\n    }\n\n    /**\n     * 获取短信验证码\n     */\n    sendMessageCode=async ()=>{\n        this.setState({...this.state,sendError:false,sending:true});\n        const sendResponse=await ((new HttpRequest())\n            .post<any>(\"webapi/login/sendMessageCode\",{\n                phone:this.state.data.phone,\n                imgCode:this.state.imageCode,\n                imgToken:this.state.imageToken\n            }));\n\n        if(!sendResponse.success||!sendResponse.data){\n            this.setState({\n                ...this.state,\n                sendError:true,\n                sending:false,\n            });\n            return;\n        }\n\n        this.setState({\n            ...this.state,\n            sendError:false,\n            sending:false,\n        });\n        this.countdown(60);\n    }\n\n    /**\n     * 短信再次发送倒计时\n     */\n    countdown=(time:number)=>{\n        if(time===0) return;\n        this.setState({\n            ...this.state,\n            remainTime:--time\n        });\n\n        setTimeout(()=>this.countdown(time),1000);\n    }\n\n    /**\n     * 输入修改\n     */\n    inputOnChange=(value:string,key:string)=>{\n        const {data}=this.state;\n        data[key]=value;\n        this.setState({\n            ...this.state,\n            data:data\n        });\n    }\n\n    /**\n     * 聚焦时取消错误信息\n     */\n    inputOnFocus=()=>{\n        this.setState({\n            ...this.state,\n            requestError:false\n        });\n    }\n\n    /**\n     * 自动登录勾选\n     */\n    autoLoginOnChange=(event:CheckboxChangeEvent)=>{\n        this.setState({\n            ...this.state,\n            autoLogin:event.target.checked\n        });\n    }\n\n    /**\n     * 回车登录\n     */\n    keyDownLogin=(event:KeyboardEvent)=>{\n        if(event.key===\"Enter\"){\n            this.login();\n        }\n    }\n\n    /**\n     * 用户登录处理\n     */\n    login=async ()=>{\n        // 验证输入\n        const {data}=this.state;\n        if(data.username===\"\"\n            ||data.password===\"\"\n            ||data.imgCode===\"\"){\n            return;\n        }\n        \n        // 登录请求\n        this.setState({...this.state,requesting:true});\n        const loginResponse=await (new HttpRequest())\n            .post<LoginUser>(\"webapi/login/loginByAccount\",\n                (process.env.REACT_APP_USE_MOCK===\"true\")\n                ?{\n                    ...data,\n                    token:\"sdjlksdjfkdlsfksdjflksdjfjlsdflksdflk\",\n                    userId:0,\n                    userName:\"人员姓名\",\n                    roleName:\"窗口人员\"\n                }\n                :data\n            );\n\n        // 登录失败\n        if(!loginResponse.success||!loginResponse.data){\n            this.setState({\n                ...this.state,\n                requesting:false,\n                requestError:true\n            });\n            return;\n        }\n\n        // 记录当前Token\n        // 勾选自动登录记录到LocalStorage中，未勾选记录到SessionStorage中\n        DataCache.instance.token(\n            loginResponse.data.token,\n            {\n                isLogin:true,\n                data:loginResponse.data\n            },\n            this.state.autoLogin?CacheMode.LOCAL:CacheMode.SESSION\n        );\n\n        // 成功后进入主页\n        this.props.history.replace(\"/protected/organization\");\n    }\n}\nexport default withRouter(LoginForPhone);"]},"metadata":{},"sourceType":"module"}