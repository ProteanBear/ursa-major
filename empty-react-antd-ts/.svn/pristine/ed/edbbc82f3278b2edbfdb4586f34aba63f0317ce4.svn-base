{"ast":null,"code":"/**\n * 申请相关的方法\n */\nexport default class ApplyUtils {}\n\nApplyUtils.canEdit = status => status === 0 || status === 4;\n\nApplyUtils.needLoadReject = status => status === 4;\n\nApplyUtils.inspectIsReject = status => status === 1;\n\nApplyUtils.medicalScopeToSet = scope => {\n  const scopeArray = scope.split(\",\");\n  const result = new Set();\n  scopeArray.map(value => result.add(value));\n  return result;\n};\n\nApplyUtils.medicalScopeToString = scope => {\n  let result = \"\",\n      i = 0;\n  scope.forEach(val => {\n    result += (i++ === 0 ? \"\" : \",\") + val;\n  });\n  return result;\n};\n\nApplyUtils.medicalScopeParentCode = code => {\n  const index = code.indexOf(\".\");\n  if (index === -1) return null;\n  return code.substring(0, index);\n};\n\nApplyUtils.urlStringToUploadArray = (array, urls) => {\n  const urlArray = urls.split(\",\");\n  urlArray.map((url, index) => {\n    array.push({\n      uid: String(index),\n      name: \"name-\".concat(index),\n      size: 0,\n      type: \"\",\n      url: url\n    });\n  });\n  return array;\n};\n\nApplyUtils.uploadArrayToUrlString = array => {\n  let result = \"\",\n      i = 0;\n  array.map(data => {\n    result += (i++ === 0 ? \"\" : \",\") + data.url;\n  });\n  return result;\n};","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/utils/ApplyUtils.ts"],"names":["ApplyUtils","canEdit","status","needLoadReject","inspectIsReject","medicalScopeToSet","scope","scopeArray","split","result","Set","map","value","add","medicalScopeToString","i","forEach","val","medicalScopeParentCode","code","index","indexOf","substring","urlStringToUploadArray","array","urls","urlArray","url","push","uid","String","name","size","type","uploadArrayToUrlString","data"],"mappings":"AAEA;;;AAGA,eAAe,MAAMA,UAAN,CAAgB;;AAAVA,U,CAKVC,O,GAASC,MAAD,IAAkBA,MAAM,KAAG,CAAT,IAAYA,MAAM,KAAG,C;;AALrCF,U,CAWVG,c,GAAgBD,MAAD,IAAkBA,MAAM,KAAG,C;;AAXhCF,U,CAgBVI,e,GAAiBF,MAAD,IAAkBA,MAAM,KAAG,C;;AAhBjCF,U,CAqBVK,iB,GAAmBC,KAAD,IAA4B;AACjD,QAAMC,UAAU,GAACD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAjB;AACA,QAAMC,MAAM,GAAC,IAAIC,GAAJ,EAAb;AACAH,EAAAA,UAAU,CAACI,GAAX,CAAeC,KAAK,IAAEH,MAAM,CAACI,GAAP,CAAWD,KAAX,CAAtB;AACA,SAAOH,MAAP;AACH,C;;AA1BgBT,U,CA+BVc,oB,GAAsBR,KAAD,IAA4B;AACpD,MAAIG,MAAM,GAAC,EAAX;AAAA,MAAcM,CAAC,GAAC,CAAhB;AACAT,EAAAA,KAAK,CAACU,OAAN,CAAcC,GAAG,IAAE;AACfR,IAAAA,MAAM,IAAG,CAACM,CAAC,OAAK,CAAN,GAAQ,EAAR,GAAW,GAAZ,IAAiBE,GAA1B;AACH,GAFD;AAGA,SAAOR,MAAP;AACH,C;;AArCgBT,U,CA0CVkB,sB,GAAwBC,IAAD,IAA2B;AACrD,QAAMC,KAAK,GAACD,IAAI,CAACE,OAAL,CAAa,GAAb,CAAZ;AACA,MAAGD,KAAK,KAAG,CAAC,CAAZ,EAAe,OAAO,IAAP;AACf,SAAOD,IAAI,CAACG,SAAL,CAAe,CAAf,EAAiBF,KAAjB,CAAP;AACH,C;;AA9CgBpB,U,CAmDVuB,sB,GAAuB,CAACC,KAAD,EAAyBC,IAAzB,KACN;AACpB,QAAMC,QAAQ,GAACD,IAAI,CAACjB,KAAL,CAAW,GAAX,CAAf;AACAkB,EAAAA,QAAQ,CAACf,GAAT,CAAa,CAACgB,GAAD,EAAKP,KAAL,KAAa;AACtBI,IAAAA,KAAK,CAACI,IAAN,CAAW;AACPC,MAAAA,GAAG,EAACC,MAAM,CAACV,KAAD,CADH;AAEPW,MAAAA,IAAI,iBAASX,KAAT,CAFG;AAGPY,MAAAA,IAAI,EAAC,CAHE;AAIPC,MAAAA,IAAI,EAAC,EAJE;AAKPN,MAAAA,GAAG,EAACA;AALG,KAAX;AAOH,GARD;AASA,SAAOH,KAAP;AACH,C;;AAhEgBxB,U,CAqEVkC,sB,GAAwBV,KAAD,IAAkC;AAC5D,MAAIf,MAAM,GAAC,EAAX;AAAA,MAAcM,CAAC,GAAC,CAAhB;AACAS,EAAAA,KAAK,CAACb,GAAN,CAAWwB,IAAD,IAAQ;AACd1B,IAAAA,MAAM,IAAG,CAACM,CAAC,OAAK,CAAN,GAAQ,EAAR,GAAW,GAAZ,IAAiBoB,IAAI,CAACR,GAA/B;AACH,GAFD;AAGA,SAAOlB,MAAP;AACH,C","sourcesContent":["import { UploadFile } from \"antd/lib/upload/interface\";\n\n/**\n * 申请相关的方法\n */\nexport default class ApplyUtils{\n    /**\n     * 申请的当前状态是否可编辑\n     * @param status 状态值\n     */\n    static canEdit=(status:number)=>(status===0||status===4);\n\n    /**\n     * 申请的当前状态是否需要获取驳回理由\n     * @param status 状态值\n     */\n    static needLoadReject=(status:number)=>(status===4);\n\n    /**\n     * 审核结果是否为驳回\n     */\n    static inspectIsReject=(status:number)=>(status===1);\n\n    /**\n     * 将字符串形式的已选择诊疗范围转换为Set\n     */\n    static medicalScopeToSet=(scope:string):Set<string>=>{\n        const scopeArray=scope.split(\",\");\n        const result=new Set<string>();\n        scopeArray.map(value=>result.add(value));\n        return result;\n    }\n\n    /**\n     * 将Set形式的已选择诊疗范围转换为字符串\n     */\n    static medicalScopeToString=(scope:Set<string>):string=>{\n        let result=\"\",i=0;\n        scope.forEach(val=>{\n            result+=((i++===0?\"\":\",\")+val);\n        });\n        return result;\n    };\n\n    /**\n     * 获取诊疗范围编码子级的父级编码\n     */\n    static medicalScopeParentCode=(code:string):string|null=>{\n        const index=code.indexOf(\".\")\n        if(index===-1) return null;\n        return code.substring(0,index);\n    }\n\n    /**\n     * 将路径（多个间逗号分隔）转换为上传文件对象列表\n     */\n    static urlStringToUploadArray=(array:Array<UploadFile>,urls:string)\n        :Array<UploadFile>=>{\n        const urlArray=urls.split(\",\");\n        urlArray.map((url,index)=>{\n            array.push({\n                uid:String(index),\n                name:`name-${index}`,\n                size:0,\n                type:\"\",\n                url:url\n            });\n        });\n        return array;\n    }\n\n    /**\n     * 将上传文件列表转换为url字符串（多个之间逗号分隔）\n     */\n    static uploadArrayToUrlString=(array:Array<UploadFile>):string=>{\n        let result=\"\",i=0;\n        array.map((data)=>{\n            result+=((i++===0?\"\":\",\")+data.url);\n        });\n        return result;\n    }\n}"]},"metadata":{},"sourceType":"module"}