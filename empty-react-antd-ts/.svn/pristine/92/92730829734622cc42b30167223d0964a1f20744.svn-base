{"ast":null,"code":"import \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/components/ApplyFormMedical.tsx\";\nimport React from 'react';\nimport { DictionaryLoader } from '../app/DictionaryLoader';\n/**\n * 诊疗范围类型（全部、简略）\n */\n\nexport let ApplyFormMedicalType;\n/**\n * 诊疗范围环境变量\n */\n\n(function (ApplyFormMedicalType) {\n  ApplyFormMedicalType[\"FULL\"] = \"full\";\n  ApplyFormMedicalType[\"SIMPLE\"] = \"simple\";\n})(ApplyFormMedicalType || (ApplyFormMedicalType = {}));\n\nexport const ApplyFormMedicalTypeContext = React.createContext({\n  type: ApplyFormMedicalType.SIMPLE\n});\n/**\n * 申请公用表单：诊疗范围\n */\n\nexport class ApplyFormMedical extends React.Component {\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(ApplyFormMedicalTypeContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, ({\n      type\n    }) => {\n      const medical = type === ApplyFormMedicalType.SIMPLE ? DictionaryLoader.instance.medicalSimple() : DictionaryLoader.instance.medical();\n      return medical.map(dict => React.createElement(_Col, {\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(_Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, dict.value)));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/components/ApplyFormMedical.tsx"],"names":["React","DictionaryLoader","ApplyFormMedicalType","ApplyFormMedicalTypeContext","createContext","type","SIMPLE","ApplyFormMedical","Component","render","medical","instance","medicalSimple","map","dict","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAAyBC,gBAAzB,QAAiD,yBAAjD;AAEA;;;;AAGA,WAAYC,oBAAZ;AAIA;;;;WAJYA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;GAAAA,oB,KAAAA,oB;;AAOZ,OAAO,MAAMC,2BAA2B,GAACH,KAAK,CAACI,aAAN,CAAiD;AACtFC,EAAAA,IAAI,EAACH,oBAAoB,CAACI;AAD4D,CAAjD,CAAlC;AAIP;;;;AAGC,OAAO,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA2D;AAC/DC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,2BAAD,CAA6B,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAACJ,MAAAA;AAAD,KAAD,KAAU;AACP,YAAMK,OAA6B,GAC/BL,IAAI,KAAGH,oBAAoB,CAACI,MAA5B,GACKL,gBAAgB,CAACU,QAAjB,CAA0BC,aAA1B,EADL,GAEKX,gBAAgB,CAACU,QAAjB,CAA0BD,OAA1B,EAHT;AAKA,aAAOA,OAAO,CAACG,GAAR,CAAaC,IAAD,IACf;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKA,IAAI,CAACC,KAHV,CADJ,CADG,CAAP;AASH,KAhBL,CADJ,CADJ;AAsBF;;AAxB6D","sourcesContent":["import React from 'react';\nimport {Col,Typography,Form,Upload,Button,Icon, Checkbox} from 'antd';\n\nimport { RecordApply } from '../models/Record';\nimport { DictionaryData, DictionaryLoader } from '../app/DictionaryLoader';\n\n/**\n * 诊疗范围类型（全部、简略）\n */\nexport enum ApplyFormMedicalType{\n    FULL=\"full\",SIMPLE=\"simple\"\n}\n\n/**\n * 诊疗范围环境变量\n */\nexport const ApplyFormMedicalTypeContext=React.createContext<{type:ApplyFormMedicalType}>({\n    type:ApplyFormMedicalType.SIMPLE\n})\n\n/**\n * 申请公用表单：诊疗范围\n */\n export class ApplyFormMedical extends React.Component<RecordApply>{\n    render(){\n        return (\n            <section>\n                <ApplyFormMedicalTypeContext.Consumer>\n                    {({type})=>{\n                        const medical:Array<DictionaryData>=(\n                            type===ApplyFormMedicalType.SIMPLE\n                                ?DictionaryLoader.instance.medicalSimple()\n                                :DictionaryLoader.instance.medical()\n                        );\n                        return medical.map((dict:DictionaryData)=>(\n                            <Col span={4}>\n                                <Checkbox\n                                    \n                                >\n                                    {dict.value}\n                                </Checkbox>\n                            </Col>\n                        ));\n                    }}\n                </ApplyFormMedicalTypeContext.Consumer>\n            </section>\n        );\n     }\n }"]},"metadata":{},"sourceType":"module"}