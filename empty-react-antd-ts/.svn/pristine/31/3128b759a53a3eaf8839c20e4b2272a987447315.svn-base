{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/tabs/style/css\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/pages/Login.tsx\";\nimport './login.css';\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { DataCache } from '../app/DataCache';\nimport { LoginChecker } from '../app/LoginChecker';\n\n/**\n * 登录页面：\n * 进入页面通过本地存储Token及接口判断是否已经登录，已经登录则跳转到机构首页；\n * 未登录的情况下，获取本地存储的上次编辑情况，跳转到上次编辑申请位置；\n * 上述情况都没有，则停留在本页。\n */\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageToken: \"\"\n      /**\n       * 登录检查器\n       */\n\n    };\n    this.loginChecker = new LoginChecker();\n\n    this.toUrlOrganizationIndex = () => {\n      this.props.history.replace(\"/protected/organization\");\n    };\n\n    this.loadVerifyCodeImage = async () => {} // this.setState({...this.state,imageBase64:undefined});\n    // const verifyCodeResponse=await ((new HttpRequest())\n    //     .get<{img:string,imgToken:string}>(\"webapi/login/checkToken\"));\n\n    /**\n     * 用户登录处理\n     */\n    ;\n\n    this.login = () => {};\n  }\n\n  /**\n   * 页面布局\n   */\n  render() {\n    const Title = _Typography.Title;\n    const TabPane = _Tabs.TabPane;\n    const iconStyle = {\n      color: 'rgba(0,0,0,.25)'\n    };\n    return React.createElement(\"div\", {\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, process.env.REACT_APP_NAME), React.createElement(_Tabs, {\n      defaultActiveKey: \"accountLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"\\u8D26\\u6237\\u5BC6\\u7801\\u767B\\u5F55\",\n      key: \"accountLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }),\n      placeholder: \"\\u673A\\u6784\\u8D26\\u6237\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(_Input.Password, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }),\n      placeholder: \"\\u767B\\u5F55\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      style: {\n        width: 220,\n        marginRight: 10\n      },\n      prefix: React.createElement(_Icon, {\n        type: \"credit-card\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      placeholder: \"\\u8F93\\u5165\\u53F3\\u4FA7\\u7684\\u56FE\\u5F62\\u9A8C\\u8BC1\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), this.state.imageBase64 ? React.createElement(\"img\", {\n      src: this.state.imageBase64,\n      width: \"110\",\n      height: \"32\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\",\n        width: 110\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \"\\xA0\\u8F7D\\u5165\\u4E2D\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      className: \"auto-login\",\n      checked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\u81EA\\u52A8\\u767B\\u5F55\"), React.createElement(Link, {\n      className: \"apply\",\n      to: \"/public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\u6267\\u4E1A\\u7533\\u8BF7\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.login,\n      htmlType: \"button\",\n      className: \"button-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\u767B \\u5F55\")))), React.createElement(TabPane, {\n      tab: \"\\u624B\\u673A\\u53F7\\u767B\\u5F55\",\n      key: \"phoneLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      placeholder: \"\\u624B\\u673A\\u53F7\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      className: \"form-item-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      className: \"input-verify-code\",\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      placeholder: \"\\u9A8C\\u8BC1\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      disabled: true,\n      htmlType: \"button\",\n      className: \"container-verify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\\u83B7\\u53D6\\u9A8C\\u8BC1\\u7801\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      className: \"auto-login\",\n      checked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\u81EA\\u52A8\\u767B\\u5F55\"), React.createElement(Link, {\n      className: \"apply\",\n      to: \"/public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\u6267\\u4E1A\\u7533\\u8BF7\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.login,\n      htmlType: \"button\",\n      className: \"button-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\u767B \\u5F55\")))))));\n  }\n  /**\n   * 组件载入前检查是否已经登陆，以及上次编辑的状态\n   */\n\n\n  async componentWillMount() {\n    // this.props.history.push(\"/public\");\n    const _ref = await this.loginChecker.loginUser(),\n          isLogin = _ref.isLogin; //已登录：跳转到机构首页\n\n\n    if (isLogin) {\n      this.toUrlOrganizationIndex();\n      return;\n    } //未登录：检查是否有编辑申请\n\n\n    const editInfor = DataCache.instance.edit();\n\n    if (editInfor) {\n      const serialNumber = editInfor.serialNumber,\n            step = editInfor.step;\n\n      if (serialNumber) {\n        this.props.history.push(step.routePath(serialNumber));\n        return;\n      }\n    } // 未登录载入图形验证码\n\n\n    this.loadVerifyCodeImage();\n  }\n  /**\n   * 进入机构首页\n   */\n\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/pages/Login.tsx"],"names":["React","Link","withRouter","DataCache","LoginChecker","Login","Component","state","imageToken","loginChecker","toUrlOrganizationIndex","props","history","replace","loadVerifyCodeImage","login","render","Title","TabPane","iconStyle","color","process","env","REACT_APP_NAME","width","marginRight","imageBase64","display","componentWillMount","loginUser","isLogin","editInfor","instance","edit","serialNumber","step","push","routePath"],"mappings":"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","sourcesContent":["import './login.css';\nimport React from 'react';\nimport {Link, RouteComponentProps, withRouter} from 'react-router-dom';\n\nimport { Typography,Tabs, Form, Input,Icon,Checkbox, Button } from 'antd';\nimport { DataCache } from '../app/DataCache';\nimport { LoginChecker } from '../app/LoginChecker';\nimport { HttpRequest } from '../app/Request';\n\n/**\n * 登录页面：\n * 进入页面通过本地存储Token及接口判断是否已经登录，已经登录则跳转到机构首页；\n * 未登录的情况下，获取本地存储的上次编辑情况，跳转到上次编辑申请位置；\n * 上述情况都没有，则停留在本页。\n */\nclass Login extends React.Component<RouteComponentProps>{\n    readonly state:{\n        /**图形验证码Base64编码 */\n        imageBase64?:string|undefined;\n        /**图片验证码的Token */\n        imageToken:string;\n    }={\n        imageToken:\"\",\n    }\n\n    /**\n     * 登录检查器\n     */\n    private loginChecker=new LoginChecker();\n\n    /**\n     * 页面布局\n     */\n    render(){\n        const {Title}=Typography;\n        const {TabPane}=Tabs;\n        const iconStyle={ color: 'rgba(0,0,0,.25)' }\n        return (\n            <div className=\"background\">\n                <section className=\"login-container\">\n                    <Title>{process.env.REACT_APP_NAME}</Title>\n                    <Tabs defaultActiveKey=\"accountLogin\" >\n                        <TabPane tab=\"账户密码登录\" key=\"accountLogin\">\n                            <Form>\n                                <Form.Item>\n                                    <Input \n                                        prefix={<Icon type=\"user\" style={iconStyle} />}\n                                        placeholder=\"机构账户\" \n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Input.Password \n                                        prefix={<Icon type=\"lock\" style={iconStyle} />}\n                                        placeholder=\"登录密码\" \n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Input style={{width:220,marginRight:10}}\n                                        prefix={<Icon type=\"credit-card\" style={iconStyle} />}\n                                        placeholder=\"输入右侧的图形验证码\" \n                                    />\n                                    {this.state.imageBase64\n                                    ?(\n                                        <img src={this.state.imageBase64} width=\"110\" height=\"32\" />\n                                    )\n                                    :(\n                                        <span style={{display:\"inline-block\",width:110}}><Icon type=\"loading\"/>&nbsp;载入中</span>\n                                    )}\n                                </Form.Item>\n                                <Form.Item>\n                                    <Checkbox className=\"auto-login\" checked>自动登录</Checkbox>\n                                    <Link className=\"apply\" to=\"/public\">执业申请</Link>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        type=\"primary\" onClick={this.login}\n                                        htmlType=\"button\" className=\"button-submit\">\n                                        登 录\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </TabPane>\n                        <TabPane tab=\"手机号登录\" key=\"phoneLogin\">\n                            <Form>\n                                <Form.Item>\n                                    <Input \n                                        prefix={<Icon type=\"user\" style={iconStyle} />}\n                                        placeholder=\"手机号码\" \n                                    />\n                                </Form.Item>\n                                <Form.Item className=\"form-item-inline\">\n                                    <Input className=\"input-verify-code\"\n                                        prefix={<Icon type=\"lock\" style={iconStyle} />}\n                                        placeholder=\"验证码\" \n                                    />\n                                    <Button disabled\n                                        htmlType=\"button\" className=\"container-verify\">\n                                        获取验证码</Button>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Checkbox className=\"auto-login\" checked>自动登录</Checkbox>\n                                    <Link className=\"apply\" to=\"/public\">执业申请</Link>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        type=\"primary\" onClick={this.login}\n                                        htmlType=\"button\" className=\"button-submit\">\n                                        登 录\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </TabPane>\n                    </Tabs>\n                </section>\n            </div>\n        );\n    }\n\n    /**\n     * 组件载入前检查是否已经登陆，以及上次编辑的状态\n     */\n    async componentWillMount(){\n        // this.props.history.push(\"/public\");\n\n        const {isLogin}=await this.loginChecker.loginUser();\n        //已登录：跳转到机构首页\n        if(isLogin){\n            this.toUrlOrganizationIndex();\n            return;\n        }\n\n        //未登录：检查是否有编辑申请\n        const editInfor=DataCache.instance.edit();\n        if(editInfor){\n            const {serialNumber,step}=editInfor;\n            if(serialNumber){\n                this.props.history.push(step.routePath(serialNumber));\n                return;\n            }\n        }\n        \n        // 未登录载入图形验证码\n        this.loadVerifyCodeImage();\n    }\n\n    /**\n     * 进入机构首页\n     */\n    private toUrlOrganizationIndex=()=>{\n        this.props.history.replace(\"/protected/organization\");\n    }\n\n    /**\n     * 载入图形验证码\n     */\n    loadVerifyCodeImage=async ()=>{\n        // this.setState({...this.state,imageBase64:undefined});\n        // const verifyCodeResponse=await ((new HttpRequest())\n        //     .get<{img:string,imgToken:string}>(\"webapi/login/checkToken\"));\n    }\n\n    /**\n     * 用户登录处理\n     */\n    login=()=>{\n    }\n}\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}