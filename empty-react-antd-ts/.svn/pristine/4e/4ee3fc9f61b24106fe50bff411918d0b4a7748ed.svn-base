{"ast":null,"code":"import \"antd/es/notification/style/css\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/radio/style/css\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/divider/style/css\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/breadcrumb/style/css\";\nimport _Breadcrumb from \"antd/es/breadcrumb\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nimport _objectSpread from \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/pages/public/RecordOrganization.tsx\";\nimport React from 'react';\nimport Container, { ContainerLoading } from '../../components/Container';\nimport { ApplySectionPrompt, ApplySectionRecordStep } from '../../components/ApplyHeader';\nimport ApplyFormEquipment from '../../components/ApplyFormEquipment';\nimport { DictionaryLoader } from '../../app/DictionaryLoader';\nimport { ApplyFormMedical, ApplyFormMedicalTypeContext, ApplyFormMedicalType } from '../../components/ApplyFormMedical';\nimport { ApplyStep, PageError500 } from '../../app/Model';\nimport { HttpRequest } from '../../app/Request';\nimport InteractionUtils from '../../utils/InteractionUtils';\nimport ApplyUtils from '../../utils/ApplyUtils';\nconst addressPrefix = \"四川省成都市高新区\";\n/**\n * 备案流程：第二步，机构信息\n */\n\nclass RecordOrganization extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serialNumber: this.props.match.params.id,\n      loading: false,\n      saved: true,\n      fileList: {\n        \"waste\": [],\n        \"regulation\": [],\n        \"license\": [],\n        \"building\": []\n      },\n      uploadSuccess: {\n        \"waste\": true,\n        \"regulation\": true,\n        \"license\": true,\n        \"building\": true\n      }\n      /**\n       * 上传组件配置：图片\n       */\n\n    };\n    this.uploadPhotoConfig = {\n      accept: \".jpg,.png\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: true\n      /**\n       * 上传组件配置：文档\n       */\n\n    };\n    this.uploadFileConfig = {\n      accept: \".doc,.docx,.pdf\",\n      multiple: true\n      /**\n       * 页面布局\n       */\n\n    };\n\n    this.equipmentChangeHandler = equipments => {\n      if (!this.state.data) return;\n      this.setState(_objectSpread({}, this.state, {\n        data: _objectSpread({}, this.state.data, {\n          equipments: equipments\n        })\n      }));\n    };\n\n    this.scopeChangeHandler = scope => {\n      if (!this.state.data) return;\n      this.setState(_objectSpread({}, this.state, {\n        data: _objectSpread({}, this.state.data, {\n          diagnosisSubjectCode: scope\n        })\n      }));\n    };\n\n    this.uploadFileOrPhoto = async (fileObject, key) => {\n      const option = fileObject;\n      const uploadResponse = await new HttpRequest().upload(\"webapi/comm/uploadFile\", option.file, \"file\", {\n        applyNo: this.state.serialNumber\n      });\n\n      if (!uploadResponse.success || !uploadResponse.data) {\n        this.setState(_objectSpread({}, this.state, {\n          uploadSuccess: false\n        }));\n        return;\n      }\n\n      const fileList = this.state.fileList;\n      fileList.push({\n        uid: \"1\",\n        name: \"commitment.jpg\",\n        size: 0,\n        type: \"\",\n        url: uploadResponse.data.url\n      });\n      this.setState(_objectSpread({}, this.state, {\n        uploadSuccess: true,\n        fileList: fileList\n      }));\n      this.props.onUploadCompleted(uploadResponse.data.url);\n    };\n\n    this.prevStep = () => {\n      const toPrevStep = () => {\n        InteractionUtils.scrollToTop();\n        this.props.history.push(ApplyStep.RECORD_COMMITMENT.routePath(this.state.serialNumber));\n      };\n\n      if (!this.state.saved) {\n        _Modal.confirm({\n          title: \"确定要离开这里么?\",\n          content: \"未保存的信息将会丢失！\",\n          okText: \"继续离开\",\n          cancelText: \"取消\",\n\n          onOk() {\n            toPrevStep();\n          }\n\n        });\n\n        return;\n      }\n\n      toPrevStep();\n    };\n\n    this.saveCommitmentAndNext = () => {\n      if (!this.state.data) return;\n      console.table(this.state.data.equipments);\n      console.table(this.state.data.diagnosisSubjectCode); //输入检验\n\n      this.props.form.validateFieldsAndScroll(async (error, values) => {\n        if (!error) {\n          console.table(values); // \n          // this.setState({...this.state,loading:true});\n          // const saveResponse:HttpResponse<any>=\n          //     await ((new HttpRequest()).post<any,{applyNo:string,commitment:string}>(\n          //         \"webapi/apply/saveRecordInfo\",\n          //         {\n          //             applyNo:this.state.serialNumber,\n          //             commitment:this.state.data.commitment\n          //         }\n          //     ));\n          // if(!saveResponse.success){\n          //     this.props.history.push(PageError500);\n          // }\n          // this.setState({...this.state,loading:false});\n          // InteractionUtils.scrollToTop();\n          // this.props.history.push(ApplyStep.RECORD_ORGANIZATION.routePath(this.state.serialNumber));\n        }\n      });\n    };\n  }\n\n  render() {\n    //未载入数据时\n    if (!this.state.data) {\n      return React.createElement(ContainerLoading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n\n    const Title = _Typography.Title;\n    const Option = _Select.Option;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const recordApply = {\n      applyNo: \"337676\",\n      applyDeadline: \"2019年1月1日\"\n    };\n    const content = this.state.data;\n    const street = DictionaryLoader.instance.street();\n    const subjection = DictionaryLoader.instance.subjection();\n    const ownership = DictionaryLoader.instance.ownership();\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(_Breadcrumb, {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(_Breadcrumb.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"file-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"\\u6267\\u4E1A\\u7533\\u8BF7\")), React.createElement(_Breadcrumb.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"\\u5907\\u6848\"))), React.createElement(Title, {\n      level: 4,\n      className: \"title-with-underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\u5907\\u6848\\u7533\\u8BF7\"), React.createElement(ApplySectionPrompt, {\n      serialNumber: this.state.serialNumber,\n      deadline: content.effectiveTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(ApplySectionRecordStep, Object.assign({}, ApplyStep.RECORD_ORGANIZATION, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(_Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"title-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\u7B2C\\u4E8C\\u6B65\\uFF1A\\u673A\\u6784\\u4FE1\\u606F\")), React.createElement(_Col, {\n      span: 22,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"title-form-sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"\\u57FA\\u672C\\u4FE1\\u606F\"), React.createElement(_Form, {\n      layout: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u8BCA\\u6240\\u540D\\u79F0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, getFieldDecorator(\"name\", {\n      initialValue: content.name,\n      rules: [{\n        required: true,\n        message: \"诊所名称不能为空!\"\n      }]\n    })(React.createElement(_Input, {\n      name: \"name\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })))), React.createElement(_Col, {\n      span: 8,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u6240\\u5C5E\\u8857\\u9053\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, getFieldDecorator(\"street\", {\n      initialValue: \"\" === content.street ? undefined : content.street,\n      rules: [{\n        required: true,\n        message: \"必须选择所属的街道！\"\n      }]\n    })(React.createElement(_Select, {\n      showSearch: true,\n      placeholder: \"\\u9009\\u62E9\\u673A\\u6784\\u6240\\u5C5E\\u7684\\uFF08\\u9AD8\\u65B0\\u533A\\uFF09\\u8857\\u9053\",\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, street.map((data, index) => {\n      return React.createElement(Option, {\n        key: data.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, data.label);\n    }))))), React.createElement(_Col, {\n      span: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u673A\\u6784\\u5730\\u5740\",\n      help: \"\\u8BF7\\u8F93\\u5165\\u8BE6\\u7EC6\\u7684\\u5730\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      value: \"\\u56DB\\u5DDD\\u7701\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      value: \"\\u6210\\u90FD\\u5E02\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      value: \"\\u9AD8\\u65B0\\u533A\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(_Col, {\n      span: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, getFieldDecorator(\"address\", {\n      initialValue: content.address.replace(addressPrefix, \"\"),\n      rules: [{\n        required: true,\n        message: \"机构地址不能为空！\"\n      }]\n    })(React.createElement(_Input.TextArea, {\n      rows: 3,\n      style: {\n        maxHeight: 73\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })))))), React.createElement(_Col, {\n      span: 7,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u7EDF\\u4E00\\u793E\\u4F1A\\u4FE1\\u7528\\u4EE3\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, getFieldDecorator(\"onlyCode\", {\n      initialValue: content.onlyCode,\n      rules: [{\n        required: false\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u96B6\\u5C5E\\u5173\\u7CFB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, getFieldDecorator(\"subjection\", {\n      initialValue: \"\" === content.membership ? undefined : content.membership,\n      rules: [{\n        required: true,\n        message: \"必须选择隶属关系！\"\n      }]\n    })(React.createElement(_Select, {\n      showSearch: true,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\",\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, subjection.map((data, index) => {\n      return React.createElement(Option, {\n        key: data.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, data.label);\n    }))))), React.createElement(_Col, {\n      span: 8,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u6240\\u6709\\u5236\\u6027\\u8D28\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, getFieldDecorator(\"ownership\", {\n      initialValue: \"\" === content.ownership ? undefined : content.ownership,\n      rules: [{\n        required: true,\n        message: \"必须选择所有制性质\"\n      }]\n    })(React.createElement(_Select, {\n      showSearch: true,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\",\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, ownership.map((data, index) => {\n      return React.createElement(Option, {\n        key: data.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, data.label);\n    })))), React.createElement(_Form.Item, {\n      label: \"\\u7ECF\\u8425\\u6027\\u8D28\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, getFieldDecorator(\"natureOperation\", {\n      initialValue: \"\" === content.natureOperation ? \"营利性\" : content.natureOperation,\n      rules: [{\n        required: false\n      }]\n    })(React.createElement(_Radio.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(_Radio, {\n      value: \"\\u975E\\u8425\\u5229\\u6027\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"\\u975E\\u8425\\u5229\\u6027\"), React.createElement(_Radio, {\n      value: \"\\u8425\\u5229\\u6027\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"\\u8425\\u5229\\u6027\"))))), React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u4E2D\\u533B\\u8BCA\\u7597\\u6280\\u672F\\u548C\\u65B9\\u6848\",\n      help: \"\\u586B\\u5199\\u5185\\u5BB9\\u96501000\\u5B57\\u4EE5\\u5185\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, getFieldDecorator(\"medicineTechnology\", {\n      initialValue: content.medicineTechnology,\n      rules: [{\n        required: false\n      }]\n    })(React.createElement(_Input.TextArea, {\n      rows: 5,\n      style: {\n        maxHeight: 115\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })))), React.createElement(_Col, {\n      span: 11,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u4E2D\\u533B\\uFF08\\u4E13\\u573A\\uFF09\\u6267\\u4E1A\\u8303\\u56F4\",\n      help: \"\\u586B\\u5199\\u5185\\u5BB9\\u96501000\\u5B57\\u4EE5\\u5185\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, getFieldDecorator(\"medicineScope\", {\n      initialValue: content.medicineScope,\n      rules: [{\n        required: false\n      }]\n    })(React.createElement(_Input.TextArea, {\n      rows: 5,\n      style: {\n        maxHeight: 115\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })))))), React.createElement(_Col, {\n      span: 22,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"title-form-sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"\\u8BBE\\u5907\\u6E05\\u5355\"), React.createElement(ApplyFormEquipment, {\n      onChange: this.equipmentChangeHandler,\n      equiptments: this.state.data.equipments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(_Col, {\n      span: 22,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"title-form-sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"\\u8BCA\\u7597\\u8303\\u56F4\"), React.createElement(ApplyFormMedicalTypeContext.Provider, {\n      value: {\n        type: ApplyFormMedicalType.SIMPLE\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(ApplyFormMedical, {\n      scope: this.state.data.diagnosisSubjectCode,\n      onChange: this.scopeChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }))), React.createElement(_Col, {\n      span: 22,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"title-form-sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u5185\\u5BB9\"), React.createElement(_Form, {\n      labelCol: {\n        span: 7\n      },\n      wrapperCol: {\n        span: 17\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u533B\\u7597\\u5E9F\\u7269\\u670D\\u52A1\\u534F\\u8BAE\",\n      help: \"\\u652F\\u6301\\u6269\\u5C55\\u540D\\uFF1A.doc .docx .pdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, getFieldDecorator(\"waste\", {\n      rules: [{\n        required: true,\n        message: \"必须上传此内容！\"\n      }]\n    })(React.createElement(_Upload, Object.assign({}, this.uploadFileConfig, {\n      name: \"waste\",\n      customRequest: fileObject => {\n        this.uploadFileOrPhoto(fileObject, \"waste\");\n      },\n      fileList: this.state.fileList.waste,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), \"\\u4E0A\\u4F20\\u6587\\u4EF6\"))))), React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u673A\\u6784\\u5236\\u5EA6\",\n      help: \"\\u652F\\u6301\\u6269\\u5C55\\u540D\\uFF1A.doc .docx .pdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, getFieldDecorator(\"regulation\", {\n      rules: [{\n        required: true,\n        message: \"必须上传此内容！\"\n      }]\n    })(React.createElement(_Upload, Object.assign({}, this.uploadFileConfig, {\n      fileList: this.state.fileList.regulation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), \"\\u4E0A\\u4F20\\u6587\\u4EF6\")))))), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u8425\\u4E1A\\u6267\\u7167\",\n      help: \"\\u652F\\u6301\\u6269\\u5C55\\u540D\\uFF1A.jpg .png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, getFieldDecorator(\"businessLicense\", {\n      rules: [{\n        required: true,\n        message: \"必须上传此内容！\"\n      }]\n    })(React.createElement(_Upload, Object.assign({}, this.uploadPhotoConfig, {\n      fileList: this.state.fileList.license,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\")))))), React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u623F\\u5C4B\\u5E73\\u9762\\u5E03\\u5C40\\u56FE\",\n      help: \"\\u652F\\u6301\\u6269\\u5C55\\u540D\\uFF1A.jpg .png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, getFieldDecorator(\"orgFlatImg\", {\n      rules: [{\n        required: true,\n        message: \"必须上传此内容！\"\n      }]\n    })(React.createElement(_Upload, Object.assign({}, this.uploadPhotoConfig, {\n      fileList: this.state.fileList.building,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\"))))))))), React.createElement(_Col, {\n      span: 24,\n      className: \"section-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      onClick: this.prevStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"\\u4E0A\\u4E00\\u6B65\"), React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.saveCommitmentAndNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"\\u4FDD\\u5B58\\u5E76\\u8FDB\\u5165\\u4E0B\\u4E00\\u6B65\")));\n  }\n  /**\n   * 组件完成后请求获取申请信息\n   */\n\n\n  async componentDidMount() {\n    // 获取申请内容\n    const applyResponse = await new HttpRequest().get(\"webapi/apply/getRecordInfo?applyNo=\".concat(this.state.serialNumber)); // 失败跳转500\n\n    if (!applyResponse.success || !applyResponse.data) {\n      this.props.history.push(PageError500);\n      return;\n    } // 不可编辑跳转审核结果\n\n\n    const status = applyResponse.data.status;\n\n    if (!ApplyUtils.canEdit(status)) {\n      this.props.history.push(ApplyStep.RECORD_RESULT.routePath(this.state.serialNumber));\n      return;\n    } // 处理文件路径拆分\n\n\n    let _this$state$fileList = this.state.fileList,\n        waste = _this$state$fileList.waste,\n        regulation = _this$state$fileList.regulation,\n        license = _this$state$fileList.license,\n        building = _this$state$fileList.building;\n    waste = ApplyUtils.urlStringToUploadArray(waste, applyResponse.data.medicalWasteAgreement);\n    regulation = ApplyUtils.urlStringToUploadArray(regulation, applyResponse.data.managerment);\n    license = ApplyUtils.urlStringToUploadArray(license, applyResponse.data.businessLicense);\n    building = ApplyUtils.urlStringToUploadArray(building, applyResponse.data.orgFlatImg); // 设置显示\n\n    this.setState(_objectSpread({}, this.state, {\n      data: applyResponse.data,\n      fileList: {\n        waste: waste,\n        regulation: regulation,\n        license: license,\n        building: building\n      }\n    })); // 添加窗口关闭监听\n\n    InteractionUtils.addWindowCloseListener(event => {\n      if (this.state.saved) event.preventDefault();else event.returnValue = true;\n    }); // 审核被驳回，获取驳回理由\n\n    if (ApplyUtils.needLoadReject(status)) {\n      const rejectArrayResponse = await new HttpRequest().get(\"webapi/apply/auditOpinion?applyNo=\".concat(this.state.serialNumber)); // 失败\n\n      if (!rejectArrayResponse.success || !rejectArrayResponse.data) {\n        return;\n      } // 找到最新的拒绝内容\n\n\n      let rejectContent = null;\n\n      for (let l = rejectArrayResponse.data.length, i = l - 1; i > -1; i--) {\n        const current = rejectArrayResponse.data[i];\n\n        if (ApplyUtils.inspectIsReject(current.status)) {\n          rejectContent = current;\n          break;\n        }\n      } //通知显示拒绝理由\n\n\n      if (!rejectContent) return;\n\n      _notification[\"warning\"]({\n        message: \"申请被驳回！\",\n        description: rejectContent.opinion\n      });\n    }\n  }\n  /**\n   * 卸载时删除窗口关闭监听\n   */\n\n\n  componentWillUnmount() {\n    InteractionUtils.removeWindowCloseListener();\n  }\n  /**\n   * 提供给子组件进行调用，修改机构中的设备信息列表\n   */\n\n\n}\n\nexport default _Form.create({\n  name: \"recordOrganization\"\n})(RecordOrganization);","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/pages/public/RecordOrganization.tsx"],"names":["React","Container","ContainerLoading","ApplySectionPrompt","ApplySectionRecordStep","ApplyFormEquipment","DictionaryLoader","ApplyFormMedical","ApplyFormMedicalTypeContext","ApplyFormMedicalType","ApplyStep","PageError500","HttpRequest","InteractionUtils","ApplyUtils","addressPrefix","RecordOrganization","Component","state","serialNumber","props","match","params","id","loading","saved","fileList","uploadSuccess","uploadPhotoConfig","accept","listType","className","showUploadList","uploadFileConfig","multiple","equipmentChangeHandler","equipments","data","setState","scopeChangeHandler","scope","diagnosisSubjectCode","uploadFileOrPhoto","fileObject","key","option","uploadResponse","upload","file","applyNo","success","push","uid","name","size","type","url","onUploadCompleted","prevStep","toPrevStep","scrollToTop","history","RECORD_COMMITMENT","routePath","confirm","title","content","okText","cancelText","onOk","saveCommitmentAndNext","console","table","form","validateFieldsAndScroll","error","values","render","Title","Option","getFieldDecorator","recordApply","applyDeadline","street","instance","subjection","ownership","effectiveTime","RECORD_ORGANIZATION","initialValue","rules","required","message","undefined","input","children","toLowerCase","indexOf","map","index","value","label","address","replace","maxHeight","onlyCode","membership","natureOperation","medicineTechnology","medicineScope","SIMPLE","span","waste","regulation","license","building","componentDidMount","applyResponse","get","status","canEdit","RECORD_RESULT","urlStringToUploadArray","medicalWasteAgreement","managerment","businessLicense","orgFlatImg","addWindowCloseListener","event","preventDefault","returnValue","needLoadReject","rejectArrayResponse","rejectContent","l","length","i","current","inspectIsReject","description","opinion","componentWillUnmount","removeWindowCloseListener","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Breadcrumb,Icon,Typography, Button,Divider,Col, Form, Input, Select,Radio, Upload, Row, message, Modal, notification } from 'antd';\n\nimport Container, { ContainerLoading } from '../../components/Container';\nimport {ApplySectionPrompt,ApplySectionRecordStep} from '../../components/ApplyHeader';\nimport ApplyFormEquipment from '../../components/ApplyFormEquipment';\nimport {DictionaryData,DictionaryLoader} from '../../app/DictionaryLoader';\nimport {ApplyFormMedical,ApplyFormMedicalTypeContext,ApplyFormMedicalType } from '../../components/ApplyFormMedical';\nimport { ApplyContent, ApplyStep, AppComponentProps, ApplyContentOrganization, PageError500, ApplyContentEquipment, ApplyInspectContent } from '../../app/Model';\nimport { HttpResponse, HttpRequest } from '../../app/Request';\nimport InteractionUtils from '../../utils/InteractionUtils';\nimport ApplyUtils from '../../utils/ApplyUtils';\nimport { UploadProps } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\n\nconst addressPrefix=\"四川省成都市高新区\";\n\n/**\n * 备案流程：第二步，机构信息\n */\nclass RecordOrganization extends React.Component<AppComponentProps>{\n    readonly state:{\n        /**申请单号 */\n        serialNumber:string;\n        /**保存按钮是否请求中 */\n        loading:boolean;\n        /**是否已经保存 */\n        saved:boolean;\n        /**申请内容 */\n        data?:ApplyContentOrganization;\n        /**上传文件列表 */\n        fileList:{\n            /**上传的医疗废物文档列表 */\n            \"waste\":Array<UploadFile>,\n            /**上传的机构制度列表 */\n            \"regulation\":Array<UploadFile>,\n            /**营业执照图片列表 */\n            \"license\":Array<UploadFile>,\n            /**平面图图片列表 */\n            \"building\":Array<UploadFile>\n        };\n        /**上传是否成功 */\n        uploadSuccess:{\n            /**上传的医疗废物文档是否成功 */\n            \"waste\":boolean,\n            /**上传的机构制度是否成功 */\n            \"regulation\":boolean,\n            /**营业执照图片是否成功 */\n            \"license\":boolean,\n            /**平面图图片是否成功 */\n            \"building\":boolean\n        }\n    }={\n        serialNumber:this.props.match.params.id,\n        loading:false,\n        saved:true,\n        fileList:{\n            \"waste\":[],\n            \"regulation\":[],\n            \"license\":[],\n            \"building\":[]\n        },\n        uploadSuccess:{\n            \"waste\":true,\n            \"regulation\":true,\n            \"license\":true,\n            \"building\":true\n        }\n    }\n\n    /**\n     * 上传组件配置：图片\n     */\n    private readonly uploadPhotoConfig:UploadProps={\n        accept:\".jpg,.png\",\n        listType:\"picture-card\",\n        className:\"avatar-uploader\",\n        showUploadList:true,\n    }\n\n    /**\n     * 上传组件配置：文档\n     */\n    private readonly uploadFileConfig:UploadProps={\n        accept:\".doc,.docx,.pdf\",\n        multiple:true,\n    }\n\n    /**\n     * 页面布局\n     */\n    render(){\n        //未载入数据时\n        if(!this.state.data){\n            return (\n                <ContainerLoading />\n            );\n        }\n\n        const {Title}=Typography;\n        const {Option}=Select;\n        const {getFieldDecorator} = this.props.form;\n        const recordApply:ApplyContent={applyNo:\"337676\",applyDeadline:\"2019年1月1日\"};\n\n        const content=this.state.data;\n        const street:Array<DictionaryData>=DictionaryLoader.instance.street();\n        const subjection:Array<DictionaryData>=DictionaryLoader.instance.subjection();\n        const ownership:Array<DictionaryData>=DictionaryLoader.instance.ownership();\n\n        return (\n            <Container>\n                {/* 标题 */}\n                <Breadcrumb className=\"breadcrumb\">\n                    <Breadcrumb.Item><Icon type=\"file-text\"/><span>执业申请</span></Breadcrumb.Item>\n                    <Breadcrumb.Item><span>备案</span></Breadcrumb.Item>\n                </Breadcrumb>\n                <Title level={4} className=\"title-with-underline\">备案申请</Title>\n\n                {/* 顶部 */}\n                <ApplySectionPrompt serialNumber={this.state.serialNumber} \n                    deadline={content.effectiveTime} />\n                <ApplySectionRecordStep {...ApplyStep.RECORD_ORGANIZATION} />\n                <Divider><span className=\"title-inner\">第二步：机构信息</span></Divider>\n\n                {/* 表单：基本信息 */}\n                <Col span={22} offset={1}>\n                    <h4 className=\"title-form-sub\">基本信息</h4>\n                    <Form layout=\"vertical\">\n                        <Col span={15}>\n                            <Form.Item label=\"诊所名称\">{\n                                getFieldDecorator(\"name\",{\n                                    initialValue:content.name,\n                                    rules:[\n                                        {required:true,message:\"诊所名称不能为空!\"}\n                                    ]\n                                })(<Input name=\"name\" placeholder=\"请输入\" />)}\n                            </Form.Item>\n                        </Col>\n                        <Col span={8} offset={1}>\n                            <Form.Item label=\"所属街道\">{\n                                getFieldDecorator(\"street\",{\n                                    initialValue:(\"\"===content.street?undefined:content.street),\n                                    rules:[\n                                        {required:true,message:\"必须选择所属的街道！\"}\n                                    ]\n                                })(\n                                    <Select showSearch\n                                        placeholder=\"选择机构所属的（高新区）街道\"\n                                        optionFilterProp=\"children\"\n                                        filterOption={(input, option:React.ReactElement) =>\n                                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                        }\n                                    >\n                                        {street.map((data:DictionaryData,index:number)=>{\n                                            return (<Option key={data.value}>{data.label}</Option>);\n                                        })}\n                                    </Select>\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={7}>\n                            <Form.Item label=\"机构地址\" help=\"请输入详细的地址\">\n                                <div className=\"input-group\">\n                                    <Col span={8}><Input value=\"四川省\" disabled/></Col>\n                                    <Col span={8}><Input value=\"成都市\" disabled/></Col>\n                                    <Col span={8}><Input value=\"高新区\" disabled/></Col>\n                                    <Col span={24}>{\n                                        getFieldDecorator(\"address\",{\n                                            initialValue:content.address.replace(addressPrefix,\"\"),\n                                            rules:[\n                                                {required:true,message:\"机构地址不能为空！\"}\n                                            ]\n                                        })(\n                                            <Input.TextArea rows={3} style={{maxHeight:73}} />\n                                        )\n                                    } \n                                    </Col>\n                                </div>\n                            \n                            </Form.Item>\n                        </Col>\n                        <Col span={7} offset={1}>\n                            <Form.Item label=\"统一社会信用代码\">{\n                                getFieldDecorator(\"onlyCode\",{\n                                    initialValue:content.onlyCode,\n                                    rules:[\n                                        {required:false}\n                                    ]\n                                })(\n                                    <Input placeholder=\"请输入\"/>\n                                )}\n                            </Form.Item>\n                            <Form.Item label=\"隶属关系\">{\n                                getFieldDecorator(\"subjection\",{\n                                    initialValue:(\"\"===content.membership?undefined:content.membership),\n                                    rules:[\n                                        {required:true,message:\"必须选择隶属关系！\"}\n                                    ]\n                                })(\n                                    <Select showSearch\n                                        placeholder=\"请选择\"\n                                        optionFilterProp=\"children\"\n                                        filterOption={(input, option:React.ReactElement) =>\n                                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                        }\n                                    >\n                                        {subjection.map((data:DictionaryData,index:number)=>{\n                                            return (<Option key={data.value}>{data.label}</Option>);\n                                        })}\n                                    </Select>\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={8} offset={1}>\n                            <Form.Item label=\"所有制性质\">{\n                                getFieldDecorator(\"ownership\",{\n                                    initialValue:(\"\"===content.ownership?undefined:content.ownership),\n                                    rules:[\n                                        {required:true,message:\"必须选择所有制性质\"}\n                                    ]\n                                })(\n                                    <Select showSearch\n                                        placeholder=\"请选择\"\n                                        optionFilterProp=\"children\"\n                                        filterOption={(input, option:React.ReactElement) =>\n                                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                        }\n                                    >\n                                        {ownership.map((data:DictionaryData,index:number)=>{\n                                            return (<Option key={data.value}>{data.label}</Option>);\n                                        })}\n                                    </Select>\n                                )}\n                            </Form.Item>\n                            <Form.Item label=\"经营性质\">{\n                                getFieldDecorator(\"natureOperation\",{\n                                    initialValue:(\"\"===content.natureOperation?\"营利性\":content.natureOperation),\n                                    rules:[\n                                        {required:false}\n                                    ]\n                                })(\n                                    <Radio.Group>\n                                        <Radio value=\"非营利性\">非营利性</Radio>\n                                        <Radio value=\"营利性\">营利性</Radio>\n                                    </Radio.Group>\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item label=\"中医诊疗技术和方案\" help=\"填写内容限1000字以内\">{\n                                getFieldDecorator(\"medicineTechnology\",{\n                                    initialValue:content.medicineTechnology,\n                                    rules:[\n                                        {required:false}\n                                    ]\n                                })(\n                                    <Input.TextArea rows={5} style={{maxHeight:115}}></Input.TextArea>\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={11} offset={1}>\n                            <Form.Item label=\"中医（专场）执业范围\" help=\"填写内容限1000字以内\">{\n                                getFieldDecorator(\"medicineScope\",{\n                                    initialValue:content.medicineScope,\n                                    rules:[\n                                        {required:false}\n                                    ]\n                                })(\n                                    <Input.TextArea rows={5} style={{maxHeight:115}}></Input.TextArea>\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Form>\n                </Col>\n\n                {/* 表单：设备清单 */}\n                <Col span={22} offset={1}>\n                    <h4 className=\"title-form-sub\">设备清单</h4>\n                    <ApplyFormEquipment \n                        onChange={this.equipmentChangeHandler}\n                        equiptments={this.state.data.equipments} \n                    />\n                </Col>\n\n                {/* 表单：诊疗范围 */}\n                <Col span={22} offset={1}>\n                    <h4 className=\"title-form-sub\">诊疗范围</h4>\n                    <ApplyFormMedicalTypeContext.Provider value={{type:ApplyFormMedicalType.SIMPLE}}>\n                        <ApplyFormMedical \n                            scope={this.state.data.diagnosisSubjectCode} \n                            onChange={this.scopeChangeHandler}\n                        />\n                    </ApplyFormMedicalTypeContext.Provider>\n                </Col>\n\n                {/* 表单：上传内容 */}\n                <Col span={22} offset={1}>\n                    <h4 className=\"title-form-sub\">上传内容</h4>\n                    <Form labelCol={{span:7}} wrapperCol={{span:17}}>\n                        <Row>\n                            <Col span={12}>\n                                <Form.Item label=\"医疗废物服务协议\" help=\"支持扩展名：.doc .docx .pdf\">{\n                                    getFieldDecorator(\"waste\",{\n                                        rules:[\n                                            {required:true,message:\"必须上传此内容！\"}\n                                        ]\n                                    })(\n                                        <Upload {...this.uploadFileConfig}\n                                            name=\"waste\"\n                                            customRequest={(fileObject:object)=>{\n                                                this.uploadFileOrPhoto(fileObject,\"waste\");\n                                            }}\n                                            fileList={this.state.fileList.waste}\n                                        >\n                                            <Button><Icon type=\"upload\"/>上传文件</Button>\n                                        </Upload>\n                                    )}\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"机构制度\" help=\"支持扩展名：.doc .docx .pdf\">{\n                                    getFieldDecorator(\"regulation\",{\n                                        rules:[\n                                            {required:true,message:\"必须上传此内容！\"}\n                                        ]\n                                    })(\n                                        <Upload {...this.uploadFileConfig}\n                                            fileList={this.state.fileList.regulation}\n                                        >\n                                            <Button><Icon type=\"upload\"/>上传文件</Button>\n                                        </Upload>\n                                    )}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col span={12}>\n                                <Form.Item\n                                    label=\"营业执照\" help=\"支持扩展名：.jpg .png\">{\n                                        getFieldDecorator(\"businessLicense\",{\n                                            rules:[\n                                                {required:true,message:\"必须上传此内容！\"}\n                                            ]\n                                        })(\n                                            <Upload {...this.uploadPhotoConfig}\n                                                fileList={this.state.fileList.license}\n                                            >\n                                                <div>\n                                                    <Icon type=\"plus\" />\n                                                    <div className=\"ant-upload-text\">上传</div>\n                                                </div>\n                                            </Upload>\n                                        )}\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item\n                                    label=\"房屋平面布局图\" help=\"支持扩展名：.jpg .png\">{\n                                        getFieldDecorator(\"orgFlatImg\",{\n                                            rules:[\n                                                {required:true,message:\"必须上传此内容！\"}\n                                            ]\n                                        })(\n                                            <Upload {...this.uploadPhotoConfig}\n                                                fileList={this.state.fileList.building}\n                                            >\n                                                <div>\n                                                    <Icon type=\"plus\" />\n                                                    <div className=\"ant-upload-text\">上传</div>\n                                                </div>\n                                            </Upload>\n                                        )}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Col>\n            \n                {/* 按钮 */}\n                <Col span={24} className=\"section-buttons\">\n                    <Button onClick={this.prevStep}>上一步</Button>\n                    <Button type=\"primary\" onClick={this.saveCommitmentAndNext}>\n                        保存并进入下一步\n                    </Button>\n                </Col>\n            </Container>\n        );\n    }\n\n    /**\n     * 组件完成后请求获取申请信息\n     */\n    async componentDidMount(){\n        // 获取申请内容\n        const applyResponse:HttpResponse<ApplyContentOrganization>=\n            await ((new HttpRequest()).get<ApplyContentOrganization>(\n                `webapi/apply/getRecordInfo?applyNo=${this.state.serialNumber}`\n            ));\n\n        // 失败跳转500\n        if(!applyResponse.success||!applyResponse.data){\n            this.props.history.push(PageError500);\n            return;\n        }\n\n        // 不可编辑跳转审核结果\n        const {status}=applyResponse.data;\n        if(!ApplyUtils.canEdit(status)){\n            this.props.history.push(ApplyStep.RECORD_RESULT.routePath(this.state.serialNumber));\n            return;\n        }\n\n        // 处理文件路径拆分\n        let {waste,regulation,license,building}=this.state.fileList;\n        waste=ApplyUtils.urlStringToUploadArray(\n            waste,applyResponse.data.medicalWasteAgreement\n        );\n        regulation=ApplyUtils.urlStringToUploadArray(\n            regulation,applyResponse.data.managerment\n        );\n        license=ApplyUtils.urlStringToUploadArray(\n            license,applyResponse.data.businessLicense\n        );\n        building=ApplyUtils.urlStringToUploadArray(\n            building,applyResponse.data.orgFlatImg\n        );\n\n        // 设置显示\n        this.setState({\n            ...this.state,\n            data:applyResponse.data,\n            fileList:{\n                waste:waste,\n                regulation:regulation,\n                license:license,\n                building:building\n            }\n        });\n\n        // 添加窗口关闭监听\n        InteractionUtils.addWindowCloseListener((event:Event)=>{\n            if(this.state.saved)    event.preventDefault();\n            else                    event.returnValue=true;\n        });\n\n        // 审核被驳回，获取驳回理由\n        if(ApplyUtils.needLoadReject(status)){\n            const rejectArrayResponse:HttpResponse<Array<ApplyInspectContent>>=\n            await ((new HttpRequest()).get<Array<ApplyInspectContent>>(\n                `webapi/apply/auditOpinion?applyNo=${this.state.serialNumber}`\n            ));\n\n            // 失败\n            if(!rejectArrayResponse.success||!rejectArrayResponse.data){\n                return;\n            }\n\n            // 找到最新的拒绝内容\n            let rejectContent:ApplyInspectContent|null=null;\n            for(let l=rejectArrayResponse.data.length,i=l-1;i>-1;i--){\n                const current=rejectArrayResponse.data[i];\n                if(ApplyUtils.inspectIsReject(current.status)){\n                    rejectContent=current;\n                    break;\n                }\n            }\n\n            //通知显示拒绝理由\n            if(!rejectContent) return;\n            notification[\"warning\"]({\n                message:\"申请被驳回！\",\n                description:rejectContent.opinion\n            });\n        }\n    }\n\n    /**\n     * 卸载时删除窗口关闭监听\n     */\n    componentWillUnmount(){\n        InteractionUtils.removeWindowCloseListener();\n    }\n\n    /**\n     * 提供给子组件进行调用，修改机构中的设备信息列表\n     */\n    equipmentChangeHandler=(equipments:Array<ApplyContentEquipment>)=>{\n        if(!this.state.data) return;\n        \n        this.setState({\n            ...this.state,\n            data:{\n                ...this.state.data,\n                equipments:equipments\n            }\n        });\n    }\n\n    /**\n     * 提供给子组件进行调用，诊疗范围修改\n     */\n    scopeChangeHandler=(scope:string)=>{\n        if(!this.state.data) return;\n        \n        this.setState({\n            ...this.state,\n            data:{\n                ...this.state.data,\n                diagnosisSubjectCode:scope\n            }\n        });\n    }\n\n    /**\n     * 上传文件或者图片\n     */\n    uploadFileOrPhoto=async (fileObject:object,key:string)=>{\n        const option=fileObject as {file:File};\n        const uploadResponse=await (new HttpRequest)\n            .upload<{url:string},{applyNo:string}>\n            (\n                `webapi/comm/uploadFile`,\n                option.file,\n                \"file\",\n                {applyNo:this.state.serialNumber}\n            );\n        \n        if(!uploadResponse.success||!uploadResponse.data){\n            this.setState({\n                ...this.state,\n                uploadSuccess:false\n            });\n            return;\n        }\n\n        const {fileList}=this.state;\n        fileList.push({\n            uid:\"1\",\n            name:\"commitment.jpg\",\n            size:0,\n            type:\"\",\n            url:uploadResponse.data.url\n        });\n        this.setState({\n            ...this.state,\n            uploadSuccess:true,\n            fileList:fileList\n        });\n        this.props.onUploadCompleted(uploadResponse.data.url);\n    }\n\n    /**\n     * 上一步\n     */\n    prevStep=()=>{\n        const toPrevStep=()=>{\n            InteractionUtils.scrollToTop();\n            this.props.history.push(ApplyStep.RECORD_COMMITMENT.routePath(this.state.serialNumber));\n        };\n\n        if(!this.state.saved){\n            Modal.confirm({\n                title: \"确定要离开这里么?\",\n                content:\"未保存的信息将会丢失！\",\n                okText:\"继续离开\",\n                cancelText:\"取消\",\n                onOk() {toPrevStep()},\n            });\n            return;\n        }\n        \n        toPrevStep();\n    }\n\n    /**\n     * 保存后并进入下一步\n     */\n    saveCommitmentAndNext=()=>{\n        if(!this.state.data) return;\n        console.table(this.state.data.equipments);\n        console.table(this.state.data.diagnosisSubjectCode);\n\n        //输入检验\n        this.props.form.validateFieldsAndScroll(async (error,values)=>{\n            if(!error){\n                console.table(values);\n                \n\n                // \n                // this.setState({...this.state,loading:true});\n\n                // const saveResponse:HttpResponse<any>=\n                //     await ((new HttpRequest()).post<any,{applyNo:string,commitment:string}>(\n                //         \"webapi/apply/saveRecordInfo\",\n                //         {\n                //             applyNo:this.state.serialNumber,\n                //             commitment:this.state.data.commitment\n                //         }\n                //     ));\n\n                // if(!saveResponse.success){\n                //     this.props.history.push(PageError500);\n                // }\n\n                // this.setState({...this.state,loading:false});\n                // InteractionUtils.scrollToTop();\n                // this.props.history.push(ApplyStep.RECORD_ORGANIZATION.routePath(this.state.serialNumber));\n            }\n        });\n    }\n}\nexport default Form.create({name:\"recordOrganization\"})(RecordOrganization);"]},"metadata":{},"sourceType":"module"}