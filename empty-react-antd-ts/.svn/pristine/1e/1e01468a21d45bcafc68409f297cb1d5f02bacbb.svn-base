{"ast":null,"code":"import \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/tabs/style/css\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nimport _objectSpread from \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/pages/Login.tsx\";\nimport './login.css';\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { DataCache, CacheMode } from '../app/DataCache';\nimport { LoginChecker } from '../app/LoginChecker';\nimport { HttpRequest } from '../app/Request';\n\n/**\n * 登录页面：\n * 进入页面通过本地存储Token及接口判断是否已经登录，已经登录则跳转到机构首页；\n * 未登录的情况下，获取本地存储的上次编辑情况，跳转到上次编辑申请位置；\n * 上述情况都没有，则停留在本页。\n */\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageLoadError: false,\n      requesting: false,\n      autoLogin: true,\n      data: {\n        username: \"\",\n        password: \"\",\n        imgToken: \"\",\n        imgCode: \"\",\n        phone: \"\",\n        code: \"\",\n        codeToken: \"\"\n      },\n      error: {\n        username: null,\n        password: null,\n        imgCode: null,\n        phone: null,\n        code: null\n      }\n      /**\n       * 登录检查器\n       */\n\n    };\n    this.loginChecker = new LoginChecker();\n\n    this.toUrlOrganizationIndex = () => {\n      this.props.history.replace(\"/protected/organization\");\n    };\n\n    this.loadVerifyCodeImage = async () => {\n      this.setState(_objectSpread({}, this.state, {\n        imageBase64: undefined\n      }));\n      const verifyCodeResponse = await new HttpRequest().get(\"webapi/login/getVerCodeImg\");\n\n      if (!verifyCodeResponse.success || !verifyCodeResponse.data) {\n        this.setState(_objectSpread({}, this.state, {\n          imageLoadError: true\n        }));\n        return;\n      }\n\n      this.setState(_objectSpread({}, this.state, {\n        imageLoadError: false,\n        imageBase64: verifyCodeResponse.data.img,\n        imageToken: verifyCodeResponse.data.imgToken\n      }));\n    };\n\n    this.autoLoginOnChange = event => {\n      this.setState(_objectSpread({}, this.state, {\n        autoLogin: event.target.checked\n      }));\n    };\n\n    this.inputOnChange = (value, key) => {\n      const data = this.state.data;\n      data[key] = value;\n      this.setState(_objectSpread({}, this.state, {\n        data: data\n      }));\n    };\n\n    this.inputOnFocus = () => {\n      this.setState(_objectSpread({}, this.state, {\n        error: {\n          username: null,\n          password: null,\n          imgCode: null,\n          phone: null,\n          code: null\n        }\n      }));\n    };\n\n    this.keyDownAccountLogin = event => {\n      if (event.key === \"Enter\") {\n        this.accountLogin();\n      }\n    };\n\n    this.keyDownPhoneLogin = event => {\n      if (event.key === \"Enter\") {\n        this.accountLogin();\n      }\n    };\n\n    this.accountLogin = async () => {\n      // 验证输入\n      const _this$state = this.state,\n            data = _this$state.data,\n            error = _this$state.error;\n\n      if (data.username === \"\") {\n        error.username = \"登录账号不能为空！\";\n        this.setState(_objectSpread({}, this.state, {\n          error: error\n        }));\n        return;\n      }\n\n      if (data.password === \"\") {\n        error.password = \"登录密码不能为空！\";\n        this.setState(_objectSpread({}, this.state, {\n          error: error\n        }));\n        return;\n      }\n\n      if (data.imgCode === \"\") {\n        error.password = \"验证码不能为空！\";\n        this.setState(_objectSpread({}, this.state, {\n          error: error\n        }));\n        return;\n      } // 登录请求\n\n\n      this.setState(_objectSpread({}, this.state, {\n        requesting: true\n      }));\n      const loginResponse = await new HttpRequest().post(\"webapi/login/loginByAccount\", process.env.REACT_APP_USE_MOCK === \"true\" ? _objectSpread({}, data, {\n        token: \"sdjlksdjfkdlsfksdjflksdjfjlsdflksdflk\",\n        userId: 0,\n        userName: \"人员姓名\",\n        roleName: \"窗口人员\"\n      }) : data); // 登录失败\n\n      if (!loginResponse.success || !loginResponse.data) {\n        error.username = \"登录失败！账号或密码错误！\";\n        this.setState(_objectSpread({}, this.state, {\n          requesting: false,\n          error: error\n        }));\n        return;\n      } // 记录当前Token\n      // 勾选自动登录记录到LocalStorage中，未勾选记录到SessionStorage中\n\n\n      DataCache.instance.token(loginResponse.data.token, {\n        isLogin: true,\n        data: loginResponse.data\n      }, this.state.autoLogin ? CacheMode.LOCAL : CacheMode.SESSION); // 成功后进入主页\n\n      this.props.history.push(\"/index\");\n    };\n  }\n\n  /**\n   * 页面布局\n   */\n  render() {\n    const Title = _Typography.Title;\n    const TabPane = _Tabs.TabPane;\n    const iconStyle = {\n      color: 'rgba(0,0,0,.25)'\n    };\n    return React.createElement(\"div\", {\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, process.env.REACT_APP_NAME), React.createElement(_Tabs, {\n      defaultActiveKey: \"accountLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"\\u8D26\\u6237\\u5BC6\\u7801\\u767B\\u5F55\",\n      key: \"accountLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      disabled: this.state.requesting,\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      placeholder: \"\\u673A\\u6784\\u8D26\\u6237\",\n      value: this.state.data.username,\n      onChange: event => this.inputOnChange(event.target.value, \"username\"),\n      onFocus: this.inputOnFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(_Input.Password, {\n      disabled: this.state.requesting,\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }),\n      placeholder: \"\\u767B\\u5F55\\u5BC6\\u7801\",\n      value: this.state.data.password,\n      onChange: event => this.inputOnChange(event.target.value, \"password\"),\n      onFocus: this.inputOnFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      disabled: this.state.requesting,\n      style: {\n        width: 220,\n        marginRight: 10\n      },\n      prefix: React.createElement(_Icon, {\n        type: \"credit-card\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }),\n      placeholder: \"\\u8F93\\u5165\\u53F3\\u4FA7\\u7684\\u56FE\\u5F62\\u9A8C\\u8BC1\\u7801\",\n      value: this.state.data.imgCode,\n      onChange: event => this.inputOnChange(event.target.value, \"imgCode\"),\n      onFocus: this.inputOnFocus,\n      onKeyDown: this.keyDownLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.state.imageBase64 ? React.createElement(\"img\", {\n      src: this.state.imageBase64,\n      width: \"110\",\n      height: \"32\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }) : this.state.imageLoadError ? React.createElement(_Button, {\n      type: \"link\",\n      style: {\n        width: 110\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"\\u91CD\\u65B0\\u8F7D\\u5165\") : React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\",\n        width: 110\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"\\xA0\\u8F7D\\u5165\\u4E2D\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      className: \"auto-login\",\n      checked: this.state.autoLogin,\n      disabled: this.state.requesting,\n      onChange: this.autoLoginOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\u81EA\\u52A8\\u767B\\u5F55\"), React.createElement(Link, {\n      className: \"apply\",\n      to: \"/public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"\\u6267\\u4E1A\\u7533\\u8BF7\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.login,\n      htmlType: \"button\",\n      className: \"button-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"\\u767B \\u5F55\")))), React.createElement(TabPane, {\n      tab: \"\\u624B\\u673A\\u53F7\\u767B\\u5F55\",\n      key: \"phoneLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      disabled: this.state.requesting,\n      prefix: React.createElement(_Icon, {\n        type: \"phone\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }),\n      placeholder: \"\\u624B\\u673A\\u53F7\\u7801\",\n      value: this.state.data.username,\n      onChange: event => this.inputOnChange(event.target.value, \"phone\"),\n      onFocus: this.inputOnFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      className: \"form-item-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      className: \"input-verify-code\",\n      disabled: this.state.requesting,\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }),\n      placeholder: \"\\u9A8C\\u8BC1\\u7801\",\n      value: this.state.data.username,\n      onChange: event => this.inputOnChange(event.target.value, \"code\"),\n      onFocus: this.inputOnFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      disabled: true,\n      htmlType: \"button\",\n      className: \"container-verify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"\\u83B7\\u53D6\\u9A8C\\u8BC1\\u7801\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      className: \"auto-login\",\n      checked: this.state.autoLogin,\n      disabled: this.state.requesting,\n      onChange: this.autoLoginOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"\\u81EA\\u52A8\\u767B\\u5F55\"), React.createElement(Link, {\n      className: \"apply\",\n      to: \"/public\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"\\u6267\\u4E1A\\u7533\\u8BF7\")), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.login,\n      htmlType: \"button\",\n      className: \"button-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"\\u767B \\u5F55\")))))));\n  }\n  /**\n   * 组件载入前检查是否已经登陆，以及上次编辑的状态\n   */\n\n\n  async componentWillMount() {\n    // this.props.history.push(\"/public\");\n    const _ref = await this.loginChecker.loginUser(),\n          isLogin = _ref.isLogin; //已登录：跳转到机构首页\n\n\n    if (isLogin) {\n      this.toUrlOrganizationIndex();\n      return;\n    } //未登录：检查是否有编辑申请\n\n\n    const editInfor = DataCache.instance.edit();\n\n    if (editInfor) {\n      const serialNumber = editInfor.serialNumber,\n            step = editInfor.step;\n\n      if (serialNumber) {\n        this.props.history.push(step.routePath(serialNumber));\n        return;\n      }\n    } // 未登录载入图形验证码\n\n\n    this.loadVerifyCodeImage();\n  }\n  /**\n   * 进入机构首页\n   */\n\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/pages/Login.tsx"],"names":["React","Link","withRouter","DataCache","CacheMode","LoginChecker","HttpRequest","Login","Component","state","imageLoadError","requesting","autoLogin","data","username","password","imgToken","imgCode","phone","code","codeToken","error","loginChecker","toUrlOrganizationIndex","props","history","replace","loadVerifyCodeImage","setState","imageBase64","undefined","verifyCodeResponse","get","success","img","imageToken","autoLoginOnChange","event","target","checked","inputOnChange","value","key","inputOnFocus","keyDownAccountLogin","accountLogin","keyDownPhoneLogin","loginResponse","post","process","env","REACT_APP_USE_MOCK","token","userId","userName","roleName","instance","isLogin","LOCAL","SESSION","push","render","Title","TabPane","iconStyle","color","REACT_APP_NAME","width","marginRight","keyDownLogin","display","login","componentWillMount","loginUser","editInfor","edit","serialNumber","step","routePath"],"mappings":"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","sourcesContent":["import './login.css';\nimport React, { ChangeEvent,KeyboardEvent } from 'react';\nimport {Link, RouteComponentProps, withRouter} from 'react-router-dom';\n\nimport { Typography,Tabs, Form, Input,Icon,Checkbox, Button } from 'antd';\nimport { DataCache, CacheMode } from '../app/DataCache';\nimport { LoginChecker } from '../app/LoginChecker';\nimport { HttpRequest } from '../app/Request';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\nimport { LoginUser } from '../app/Model';\n\n/**\n * 登录页面：\n * 进入页面通过本地存储Token及接口判断是否已经登录，已经登录则跳转到机构首页；\n * 未登录的情况下，获取本地存储的上次编辑情况，跳转到上次编辑申请位置；\n * 上述情况都没有，则停留在本页。\n */\nclass Login extends React.Component<RouteComponentProps>{\n    readonly state:{\n        /**图形验证码Base64编码 */\n        imageBase64?:string|undefined;\n        /**图片载入错误 */\n        imageLoadError:boolean;\n        /**请求中 */\n        requesting:boolean;\n        /**是否自动登录 */\n        autoLogin:boolean;\n        /**提交数据 */\n        data:{\n            [key:string]:string\n        }\n        /**错误状态 */\n        error:{\n            [key:string]:string|null\n        }\n    }={\n        imageLoadError:false,\n        requesting:false,\n        autoLogin:true,\n        data:{\n            username:\"\",\n            password:\"\",\n            imgToken:\"\",\n            imgCode:\"\",\n            phone:\"\",\n            code:\"\",\n            codeToken:\"\"\n        },\n        error:{\n            username:null,\n            password:null,\n            imgCode:null,\n            phone:null,\n            code:null,\n        }\n    }\n\n    /**\n     * 登录检查器\n     */\n    private loginChecker=new LoginChecker();\n\n    /**\n     * 页面布局\n     */\n    render(){\n        const {Title}=Typography;\n        const {TabPane}=Tabs;\n        const iconStyle={ color: 'rgba(0,0,0,.25)' }\n        return (\n            <div className=\"background\">\n                <section className=\"login-container\">\n                    <Title>{process.env.REACT_APP_NAME}</Title>\n                    <Tabs defaultActiveKey=\"accountLogin\" >\n                        <TabPane tab=\"账户密码登录\" key=\"accountLogin\">\n                            <Form>\n                                <Form.Item>\n                                    <Input disabled={this.state.requesting}\n                                        prefix={<Icon type=\"user\" style={iconStyle} />}\n                                        placeholder=\"机构账户\" \n                                        value={this.state.data.username}\n                                        onChange={(event:ChangeEvent<HTMLInputElement>)=>\n                                            this.inputOnChange(event.target.value,\"username\")}\n                                        onFocus={this.inputOnFocus}\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Input.Password disabled={this.state.requesting}\n                                        prefix={<Icon type=\"lock\" style={iconStyle} />}\n                                        placeholder=\"登录密码\" \n                                        value={this.state.data.password}\n                                        onChange={(event:ChangeEvent<HTMLInputElement>)=>\n                                            this.inputOnChange(event.target.value,\"password\")}\n                                        onFocus={this.inputOnFocus}\n                                    />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Input disabled={this.state.requesting}\n                                        style={{width:220,marginRight:10}}\n                                        prefix={<Icon type=\"credit-card\" style={iconStyle} />}\n                                        placeholder=\"输入右侧的图形验证码\" \n                                        value={this.state.data.imgCode}\n                                        onChange={(event:ChangeEvent<HTMLInputElement>)=>\n                                            this.inputOnChange(event.target.value,\"imgCode\")}\n                                        onFocus={this.inputOnFocus}\n                                        onKeyDown={this.keyDownLogin}\n                                    />\n                                    {this.state.imageBase64\n                                    ?(\n                                        <img src={this.state.imageBase64} width=\"110\" height=\"32\" />\n                                    )\n                                    :(\n                                        this.state.imageLoadError\n                                        ?(\n                                            <Button type=\"link\" style={{width:110}}>重新载入</Button>\n                                        )\n                                        :(\n                                            <span style={{display:\"inline-block\",width:110}}><Icon type=\"loading\"/>&nbsp;载入中</span>\n                                        )\n                                    )}\n                                </Form.Item>\n                                <Form.Item>\n                                    <Checkbox \n                                        className=\"auto-login\" \n                                        checked={this.state.autoLogin}\n                                        disabled={this.state.requesting}\n                                        onChange={this.autoLoginOnChange}\n                                    >\n                                        自动登录\n                                    </Checkbox>\n                                    <Link className=\"apply\" to=\"/public\">执业申请</Link>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        type=\"primary\" onClick={this.login}\n                                        htmlType=\"button\" className=\"button-submit\">\n                                        登 录\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </TabPane>\n                        <TabPane tab=\"手机号登录\" key=\"phoneLogin\">\n                            <Form>\n                                <Form.Item>\n                                    <Input disabled={this.state.requesting}\n                                        prefix={<Icon type=\"phone\" style={iconStyle} />}\n                                        placeholder=\"手机号码\" \n                                        value={this.state.data.username}\n                                        onChange={(event:ChangeEvent<HTMLInputElement>)=>\n                                            this.inputOnChange(event.target.value,\"phone\")}\n                                        onFocus={this.inputOnFocus}\n                                    />\n                                </Form.Item>\n                                <Form.Item className=\"form-item-inline\">\n                                    <Input className=\"input-verify-code\"\n                                        disabled={this.state.requesting}\n                                        prefix={<Icon type=\"lock\" style={iconStyle} />}\n                                        placeholder=\"验证码\" \n                                        value={this.state.data.username}\n                                        onChange={(event:ChangeEvent<HTMLInputElement>)=>\n                                            this.inputOnChange(event.target.value,\"code\")}\n                                        onFocus={this.inputOnFocus}\n                                    />\n                                    <Button disabled\n                                        htmlType=\"button\" className=\"container-verify\">\n                                        获取验证码</Button>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Checkbox \n                                        className=\"auto-login\" \n                                        checked={this.state.autoLogin}\n                                        disabled={this.state.requesting}\n                                        onChange={this.autoLoginOnChange}\n                                    >\n                                        自动登录\n                                    </Checkbox>\n                                    <Link className=\"apply\" to=\"/public\">执业申请</Link>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        type=\"primary\" onClick={this.login}\n                                        htmlType=\"button\" className=\"button-submit\">\n                                        登 录\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </TabPane>\n                    </Tabs>\n                </section>\n            </div>\n        );\n    }\n\n    /**\n     * 组件载入前检查是否已经登陆，以及上次编辑的状态\n     */\n    async componentWillMount(){\n        // this.props.history.push(\"/public\");\n\n        const {isLogin}=await this.loginChecker.loginUser();\n        //已登录：跳转到机构首页\n        if(isLogin){\n            this.toUrlOrganizationIndex();\n            return;\n        }\n\n        //未登录：检查是否有编辑申请\n        const editInfor=DataCache.instance.edit();\n        if(editInfor){\n            const {serialNumber,step}=editInfor;\n            if(serialNumber){\n                this.props.history.push(step.routePath(serialNumber));\n                return;\n            }\n        }\n        \n        // 未登录载入图形验证码\n        this.loadVerifyCodeImage();\n    }\n\n    /**\n     * 进入机构首页\n     */\n    private toUrlOrganizationIndex=()=>{\n        this.props.history.replace(\"/protected/organization\");\n    }\n\n    /**\n     * 载入图形验证码\n     */\n    loadVerifyCodeImage=async ()=>{\n        this.setState({...this.state,imageBase64:undefined});\n        const verifyCodeResponse=await ((new HttpRequest())\n            .get<{img:string,imgToken:string}>(\"webapi/login/getVerCodeImg\"));\n\n        if(!verifyCodeResponse.success||!verifyCodeResponse.data){\n            this.setState({\n                ...this.state,\n                imageLoadError:true,\n            });\n            return;\n        }\n\n        this.setState({\n            ...this.state,\n            imageLoadError:false,\n            imageBase64:verifyCodeResponse.data.img,\n            imageToken:verifyCodeResponse.data.imgToken\n        });\n    }\n\n    /**\n     * 自动登录勾选\n     */\n    autoLoginOnChange=(event:CheckboxChangeEvent)=>{\n        this.setState({\n            ...this.state,\n            autoLogin:event.target.checked\n        });\n    }\n\n    /**\n     * 输入修改\n     */\n    inputOnChange=(value:string,key:string)=>{\n        const {data}=this.state;\n        data[key]=value;\n        this.setState({\n            ...this.state,\n            data:data\n        });\n    }\n\n    /**\n     * 聚焦时取消错误信息\n     */\n    inputOnFocus=()=>{\n        this.setState({\n            ...this.state,\n            error:{\n                username:null,\n                password:null,\n                imgCode:null,\n                phone:null,\n                code:null,\n            }\n        });\n    }\n\n    /**\n     * 回车登录\n     */\n    keyDownAccountLogin=(event:KeyboardEvent)=>{\n        if(event.key===\"Enter\"){\n            this.accountLogin();\n        }\n    }\n\n    /**\n     * 回车登录\n     */\n    keyDownPhoneLogin=(event:KeyboardEvent)=>{\n        if(event.key===\"Enter\"){\n            this.accountLogin();\n        }\n    }\n\n    /**\n     * 用户登录处理\n     */\n    accountLogin=async ()=>{\n        // 验证输入\n        const {data,error}=this.state;\n        if(data.username===\"\"){\n            error.username=\"登录账号不能为空！\";\n            this.setState({\n                ...this.state,\n                error:error\n            });\n            return;\n        }\n        if(data.password===\"\"){\n            error.password=\"登录密码不能为空！\";\n            this.setState({\n                ...this.state,\n                error:error\n            });\n            return;\n        }\n        if(data.imgCode===\"\"){\n            error.password=\"验证码不能为空！\";\n            this.setState({\n                ...this.state,\n                error:error\n            });\n            return;\n        }\n        \n        // 登录请求\n        this.setState({...this.state,requesting:true});\n        const loginResponse=await (new HttpRequest())\n            .post<LoginUser>(\"webapi/login/loginByAccount\",\n                (process.env.REACT_APP_USE_MOCK===\"true\")\n                ?{\n                    ...data,\n                    token:\"sdjlksdjfkdlsfksdjflksdjfjlsdflksdflk\",\n                    userId:0,\n                    userName:\"人员姓名\",\n                    roleName:\"窗口人员\"\n                }\n                :data\n            );\n\n        // 登录失败\n        if(!loginResponse.success||!loginResponse.data){\n            error.username=\"登录失败！账号或密码错误！\";\n            this.setState({\n                ...this.state,\n                requesting:false,\n                error:error\n            });\n            return;\n        }\n\n        // 记录当前Token\n        // 勾选自动登录记录到LocalStorage中，未勾选记录到SessionStorage中\n        DataCache.instance.token(\n            loginResponse.data.token,\n            {\n                isLogin:true,\n                data:loginResponse.data\n            },\n            this.state.autoLogin?CacheMode.LOCAL:CacheMode.SESSION\n        );\n\n        // 成功后进入主页\n        this.props.history.push(\"/index\");\n    }\n}\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}