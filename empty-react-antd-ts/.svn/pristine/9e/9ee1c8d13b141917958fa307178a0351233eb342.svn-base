{"ast":null,"code":"import \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nimport _objectSpread from \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/components/ApplyFormCommitment.tsx\";\nimport React from 'react';\nimport ImageViewer from './ImageViewer';\nimport { HttpRequest } from '../app/Request';\nimport ApplyUtils from '../utils/ApplyUtils';\n\n/**\n * 申请公用表单：承诺书\n */\nexport default class ApplyFormCommitment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fileList: ApplyUtils.urlStringToUploadArray([], this.props.organization ? this.props.organization.commitment : \"\"),\n      uploadSuccess: true\n      /**\n       * 上传组件配置\n       */\n\n    };\n    this.uploadConfig = {\n      accept: \".jpg,.png\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: true\n      /**\n       * 页面布局\n       */\n\n    };\n\n    this.downloadTemplate = () => {\n      window.open(\"https://www.baidu.com/s?wd=告知通知书模板\");\n    };\n\n    this.uploadCommitment = async fileObject => {\n      const option = fileObject;\n      const file = document.querySelector(\"[type='file']\");\n      if (!file || !file.files) return;\n      const uploadResponse = await new HttpRequest().upload(\"webapi/comm/uploadFile\", file.files[0], \"file\", {\n        applyNo: this.props.serialNumber\n      });\n\n      if (!uploadResponse.success || !uploadResponse.data) {\n        this.setState(_objectSpread({}, this.state, {\n          uploadSuccess: false\n        }));\n        return;\n      }\n\n      const fileList = this.state.fileList;\n      fileList.push({\n        uid: \"1\",\n        name: \"commitment.jpg\",\n        size: 0,\n        type: \"\",\n        url: uploadResponse.data.url\n      });\n      this.setState(_objectSpread({}, this.state, {\n        uploadSuccess: true,\n        fileList: fileList\n      }));\n      this.props.onUploadCompleted(uploadResponse.data.url);\n    };\n\n    this.previewCommitment = uploadFile => {\n      const img = document.querySelector(\".ant-upload-list-item-image\");\n\n      if (img) {\n        ImageViewer.view([img], 0);\n      }\n    };\n\n    this.removeCommitment = file => {\n      const confirm = _Modal.confirm;\n      const fileList = this.state.fileList;\n      confirm({\n        title: '确定要删除当前上传的图片么？',\n        okText: '继续删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: () => {\n          fileList.splice(fileList.findIndex(item => item.uid === file.uid), 1);\n          this.setState(_objectSpread({}, this.state, {\n            fileList: fileList\n          }));\n        }\n      });\n    };\n  }\n\n  render() {\n    const fileList = this.state.fileList;\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\"));\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 10,\n      offset: 7,\n      className: \"section-prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(_Typography.Paragraph, {\n      ellipsis: {\n        rows: 3,\n        expandable: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\u8BF4\\u660E\"), \"\\uFF1A\\u4E0B\\u8F7D\\u300A\\u544A\\u77E5\\u901A\\u77E5\\u4E66\\u300B\\u6A21\\u677F\\uFF0C\\u586B\\u5199\\u627F\\u8BFA\\u4E66\\u5185\\u5BB9\\u540E\\u52A0\\u76D6\\u516C\\u7AE0\\u5E76\\u626B\\u63CF\\u4E3A\\u626B\\u63CF \\u4EF6\\uFF0C\\u70B9\\u51FB\\u4E0A\\u4F20\\u5C06\\u300A\\u544A\\u77E5\\u901A\\u77E5\\u4E66\\u300B\\u626B\\u63CF\\u4EF6\\u4E0A\\u4F20\\u5230\\u7CFB\\u7EDF\\u4E2D\\uFF0C\\u4E0A\\u4F20\\u6210\\u529F\\u540E\\uFF0C\\u4F1A\\u81EA\\u52A8\\u8FDB\\u5165\\u4E0B\\u4E00\\u6B65\\u3002\")), React.createElement(_Col, {\n      span: 10,\n      offset: 7,\n      className: \"section-prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u4E0B\\u8F7D\\u6A21\\u677F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      icon: \"download\",\n      onClick: this.downloadTemplate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\u4E0B\\u8F7D\\u300A\\u544A\\u77E5\\u901A\\u77E5\\u4E66\\u300B\\u6A21\\u677F\")), React.createElement(_Form.Item, {\n      label: \"\\u4E0A\\u4F20\\u626B\\u63CF\\u4EF6\",\n      validateStatus: this.state.uploadSuccess ? \"\" : \"error\",\n      help: this.state.uploadSuccess ? \"支持扩展名：.jpg .png\" : \"图片上传失败！\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(_Upload, Object.assign({}, this.uploadConfig, {\n      name: \"commitment\",\n      fileList: this.state.fileList,\n      onPreview: this.previewCommitment,\n      onRemove: this.removeCommitment,\n      customRequest: this.uploadCommitment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), fileList.length > 0 ? null : uploadButton)), React.createElement(_Col, {\n      span: 8,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"dashed\",\n      style: {\n        height: 102,\n        width: 102\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"file-image\",\n      style: {\n        fontSize: 32\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\u793A\\u4F8B\\u56FE\"), React.createElement(_Icon, {\n      type: \"zoom-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))))));\n  }\n  /**\n   * 下载《告知通知书模板》\n   */\n\n\n}","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/components/ApplyFormCommitment.tsx"],"names":["React","ImageViewer","HttpRequest","ApplyUtils","ApplyFormCommitment","Component","state","fileList","urlStringToUploadArray","props","organization","commitment","uploadSuccess","uploadConfig","accept","listType","className","showUploadList","downloadTemplate","window","open","uploadCommitment","fileObject","option","file","document","querySelector","files","uploadResponse","upload","applyNo","serialNumber","success","data","setState","push","uid","name","size","type","url","onUploadCompleted","previewCommitment","uploadFile","img","view","removeCommitment","confirm","title","okText","okType","cancelText","onOk","splice","findIndex","item","render","uploadButton","rows","expandable","span","length","height","width","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Col,Typography,Form,Upload,Button,Icon, Modal} from 'antd';\nimport {AppApplyContentProps } from '../app/Model';\nimport { UploadProps } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport ImageViewer from './ImageViewer';\nimport { HttpRequest } from '../app/Request';\nimport ApplyUtils from '../utils/ApplyUtils';\n\ntype CommitProps=AppApplyContentProps&{\n    serialNumber:string,\n    onUploadCompleted(url:string):void;\n};\n\n/**\n * 申请公用表单：承诺书\n */\nexport default class ApplyFormCommitment extends React.Component<CommitProps>{\n    state:{\n        fileList:Array<UploadFile>,\n        uploadSuccess:boolean\n    }={\n        fileList:ApplyUtils.urlStringToUploadArray(\n            [],this.props.organization?this.props.organization.commitment:\"\"\n        ),\n        uploadSuccess:true,\n    }\n\n    /**\n     * 上传组件配置\n     */\n    private readonly uploadConfig:UploadProps={\n        accept:\".jpg,.png\",\n        listType:\"picture-card\",\n        className:\"avatar-uploader\",\n        showUploadList:true,\n    }\n\n    /**\n     * 页面布局\n     */\n    render(){\n        const {fileList}=this.state;\n        const uploadButton=(\n            <div>\n                <Icon type=\"plus\" />\n                <div className=\"ant-upload-text\">上传</div>\n            </div>\n        );\n        return (\n            <section>\n                <Col span={10} offset={7} className=\"section-prompt\">\n                    <Typography.Paragraph ellipsis={{ rows: 3, expandable: true }}>\n                        <b>说明</b>：下载《告知通知书》模板，填写承诺书内容后加盖公章并扫描为扫描\n                        件，点击上传将《告知通知书》扫描件上传到系统中，上传成功后，会自动进入下一步。\n                    </Typography.Paragraph>\n                </Col>\n\n                <Col span={10} offset={7} className=\"section-prompt\">\n                    <Form labelCol={{span:8}} wrapperCol={{span:16}}>\n                        <Form.Item label=\"下载模板\">\n                            <Button icon=\"download\" onClick={this.downloadTemplate}>\n                                下载《告知通知书》模板\n                            </Button>\n                        </Form.Item>\n                        <Form.Item \n                            label=\"上传扫描件\" \n                            validateStatus={this.state.uploadSuccess?\"\":\"error\"}\n                            help={this.state.uploadSuccess?\"支持扩展名：.jpg .png\":\"图片上传失败！\"}\n                        >\n                            <Col span={8}>\n                                <Upload\n                                    {...this.uploadConfig}\n                                    name=\"commitment\"\n                                    fileList={this.state.fileList}\n                                    onPreview={this.previewCommitment}\n                                    onRemove={this.removeCommitment}\n                                    customRequest={this.uploadCommitment}\n                                >\n                                    {fileList.length>0?null:uploadButton}\n                                </Upload>\n                            </Col>\n                            <Col span={8} offset={1}>\n                                <Button type=\"dashed\" style={{height:102,width:102}}>\n                                    <Icon type=\"file-image\" style={{fontSize:32}} />\n                                    <br/>\n                                    <span>示例图</span><Icon type=\"zoom-in\" />\n                                </Button>\n                            </Col>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </section>\n        );\n    }\n\n    /**\n     * 下载《告知通知书模板》\n     */\n    downloadTemplate=()=>{\n        window.open(\"https://www.baidu.com/s?wd=告知通知书模板\");\n    }\n\n    /**\n     * 上传告知承诺书文件\n     */\n    uploadCommitment=async (fileObject:object)=>{\n        const option=fileObject as {file:File};\n        const file=document.querySelector<HTMLInputElement>(\"[type='file']\");\n        if(!file||!file.files) return;\n        const uploadResponse=await (new HttpRequest())\n            .upload<{url:string},{applyNo:string}>\n            (\n                `webapi/comm/uploadFile`,\n                file.files[0],\n                \"file\",\n                {applyNo:this.props.serialNumber}\n            );\n        \n        if(!uploadResponse.success||!uploadResponse.data){\n            this.setState({\n                ...this.state,\n                uploadSuccess:false\n            });\n            return;\n        }\n\n        const {fileList}=this.state;\n        fileList.push({\n            uid:\"1\",\n            name:\"commitment.jpg\",\n            size:0,\n            type:\"\",\n            url:uploadResponse.data.url\n        });\n        this.setState({\n            ...this.state,\n            uploadSuccess:true,\n            fileList:fileList\n        });\n        this.props.onUploadCompleted(uploadResponse.data.url);\n    }\n\n    /**\n     * 预览承诺书图片\n     */\n    previewCommitment=(uploadFile:UploadFile)=>{\n        const img=document.querySelector<HTMLImageElement>(\".ant-upload-list-item-image\");\n        if(img){\n            ImageViewer.view([img],0);\n        }\n    }\n\n    /**\n     * 删除上传的承诺书图片\n     */\n    removeCommitment=(file:UploadFile)=>{\n        const {confirm}=Modal;\n        const {fileList}=this.state;\n        confirm({\n            title: '确定要删除当前上传的图片么？',\n            okText: '继续删除',\n            okType: 'danger',\n            cancelText: '取消',\n            onOk:()=>{\n                fileList.splice(fileList.findIndex(item=>item.uid===file.uid),1);\n                this.setState({\n                    ...this.state,\n                    fileList:fileList\n                });\n            },\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}