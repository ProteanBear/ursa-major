{"ast":null,"code":"import \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/components/ApplyFormMedical.tsx\";\nimport React from 'react';\nimport { DictionaryLoader } from '../app/DictionaryLoader';\n/**\n * 诊疗范围类型（全部、简略）\n */\n\nexport let ApplyFormMedicalType;\n/**\n * 诊疗范围环境变量\n */\n\n(function (ApplyFormMedicalType) {\n  ApplyFormMedicalType[ApplyFormMedicalType[\"FULL\"] = 0] = \"FULL\";\n  ApplyFormMedicalType[ApplyFormMedicalType[\"SIMPLE\"] = 1] = \"SIMPLE\";\n})(ApplyFormMedicalType || (ApplyFormMedicalType = {}));\n\nexport const ApplyFormMedicalTypeContext = React.createContext({\n  type: ApplyFormMedicalType.SIMPLE\n});\n/**\n * 申请公用表单：诊疗范围\n */\n\nexport class ApplyFormMedical extends React.Component {\n  render() {\n    const firstTitleStyle = {\n      fontSize: 16,\n      fontWeight: \"bold\"\n    };\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(ApplyFormMedicalTypeContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, ({\n      type\n    }) => {\n      const medical = type === ApplyFormMedicalType.SIMPLE ? DictionaryLoader.instance.medicalSimple() : DictionaryLoader.instance.medical();\n      return React.createElement(\"ul\", {\n        className: \"form-ul-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, medical.map(dict => {\n        return dict.children && dict.children.length > 0 ? React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(_Col, {\n          span: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(_Checkbox, {\n          value: dict.key,\n          style: {\n            marginTop: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: firstTitleStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, dict.value))), React.createElement(_Col, {\n          span: 20,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, dict.children.map(childDict => React.createElement(_Col, {\n          span: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(_Checkbox, {\n          value: childDict.key,\n          style: {\n            marginTop: 11\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, childDict.value))))) : React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(_Col, {\n          span: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(_Checkbox, {\n          value: dict.key,\n          style: {\n            marginTop: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: firstTitleStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, dict.value))));\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/components/ApplyFormMedical.tsx"],"names":["React","DictionaryLoader","ApplyFormMedicalType","ApplyFormMedicalTypeContext","createContext","type","SIMPLE","ApplyFormMedical","Component","render","firstTitleStyle","fontSize","fontWeight","medical","instance","medicalSimple","map","dict","children","length","key","marginTop","value","childDict"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAIA,SAAyBC,gBAAzB,QAAiD,yBAAjD;AAEA;;;;AAGA,WAAYC,oBAAZ;AAIA;;;;WAJYA,oB;AAAAA,EAAAA,oB,CAAAA,oB;AAAAA,EAAAA,oB,CAAAA,oB;GAAAA,oB,KAAAA,oB;;AAOZ,OAAO,MAAMC,2BAA2B,GAACH,KAAK,CAACI,aAAN,CAAiD;AACtFC,EAAAA,IAAI,EAACH,oBAAoB,CAACI;AAD4D,CAAjD,CAAlC;AAIP;;;;AAGC,OAAO,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA2D;AAC/DC,EAAAA,MAAM,GAAE;AACJ,UAAMC,eAA6B,GAAC;AAACC,MAAAA,QAAQ,EAAC,EAAV;AAAaC,MAAAA,UAAU,EAAC;AAAxB,KAApC;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,2BAAD,CAA6B,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAACP,MAAAA;AAAD,KAAD,KAAU;AACP,YAAMQ,OAA6B,GAC/BR,IAAI,KAAGH,oBAAoB,CAACI,MAA5B,GACKL,gBAAgB,CAACa,QAAjB,CAA0BC,aAA1B,EADL,GAEKd,gBAAgB,CAACa,QAAjB,CAA0BD,OAA1B,EAHT;AAKA,aACI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQA,OAAO,CAACG,GAAR,CAAaC,IAAD,IAAuB;AAC/B,eAAOA,IAAI,CAACC,QAAL,IAAeD,IAAI,CAACC,QAAL,CAAcC,MAAd,GAAqB,CAApC,GAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,KAAK,EAAEF,IAAI,CAACG,GADhB;AAEI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAII;AAAM,UAAA,KAAK,EAAEX,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BO,IAAI,CAACK,KAApC,CAJJ,CADJ,CADJ,EASI;AAAK,UAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKL,IAAI,CAACC,QAAL,CAAcF,GAAd,CAAmBO,SAAD,IACf;AAAK,UAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,KAAK,EAAEA,SAAS,CAACH,GADrB;AAEI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKE,SAAS,CAACD,KAJf,CADJ,CADH,CADL,CATJ,CAFG,GAyBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,KAAK,EAAEL,IAAI,CAACG,GADhB;AAEI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAII;AAAM,UAAA,KAAK,EAAEX,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BO,IAAI,CAACK,KAApC,CAJJ,CADJ,CADJ,CAzBJ;AAoCH,OArCD,CAFR,CADJ;AA4CH,KAnDL,CADJ,CADJ;AAyDF;;AA7D6D","sourcesContent":["import React, { CSSProperties } from 'react';\nimport {Col,Typography,Form,Upload,Button,Icon, Checkbox} from 'antd';\n\nimport { RecordApply } from '../models/Record';\nimport { DictionaryData, DictionaryLoader } from '../app/DictionaryLoader';\n\n/**\n * 诊疗范围类型（全部、简略）\n */\nexport enum ApplyFormMedicalType{\n    FULL,SIMPLE\n}\n\n/**\n * 诊疗范围环境变量\n */\nexport const ApplyFormMedicalTypeContext=React.createContext<{type:ApplyFormMedicalType}>({\n    type:ApplyFormMedicalType.SIMPLE\n})\n\n/**\n * 申请公用表单：诊疗范围\n */\n export class ApplyFormMedical extends React.Component<RecordApply>{\n    render(){\n        const firstTitleStyle:CSSProperties={fontSize:16,fontWeight:\"bold\"};\n\n        return (\n            <section>\n                <ApplyFormMedicalTypeContext.Consumer>\n                    {({type})=>{\n                        const medical:Array<DictionaryData>=(\n                            type===ApplyFormMedicalType.SIMPLE\n                                ?DictionaryLoader.instance.medicalSimple()\n                                :DictionaryLoader.instance.medical()\n                        );\n                        return (\n                            <ul className=\"form-ul-group\">\n                               {\n                                    medical.map((dict:DictionaryData)=>{\n                                        return dict.children&&dict.children.length>0\n                                        ?(\n                                            <li>\n                                                <Col span={4}>\n                                                    <Checkbox\n                                                        value={dict.key}\n                                                        style={{marginTop:8}}\n                                                    >\n                                                        <span style={firstTitleStyle}>{dict.value}</span>\n                                                    </Checkbox>\n                                                </Col>\n                                                <Col span={20}>\n                                                    {dict.children.map((childDict:DictionaryData)=>(\n                                                        <Col span={6}>\n                                                            <Checkbox\n                                                                value={childDict.key}\n                                                                style={{marginTop:11}}\n                                                            >\n                                                                {childDict.value}\n                                                            </Checkbox>\n                                                        </Col>\n                                                    ))}\n                                                </Col>\n                                            </li>\n                                        ):(\n                                            <li>\n                                                <Col span={24}>\n                                                    <Checkbox\n                                                        value={dict.key}\n                                                        style={{marginTop:8}}\n                                                    >\n                                                        <span style={firstTitleStyle}>{dict.value}</span>\n                                                    </Checkbox>\n                                                </Col>\n                                            </li>\n                                        );\n                                    })\n                               } \n                            </ul>\n                        );\n                    }}\n                </ApplyFormMedicalTypeContext.Consumer>\n            </section>\n        );\n     }\n }"]},"metadata":{},"sourceType":"module"}