{"ast":null,"code":"import { HttpRequest } from \"../utils/Request\";\n\n/**\n * 登录校验器：通过读取本地存储中的Token记录，\n * 并通过访问服务端校验token是否过期，\n * 判断用户是否已经登录。\n */\nexport class LoginChecker {\n  /**\n   * 检查用户是否已经登录；\n   * 首先访问本地存储检查是否有token保存，\n   * 包含Token则向服务端请求，检查Token有效性，\n   * token有效返回本地存储的用户信息；无效，则返回null\n   */\n  loginUser() {\n    // const token=DataCache.Instance.token();\n    // if(!token) return {isLogin:false};\n    const checkLogin = new HttpRequest().get(\"connect\");\n    console.log(checkLogin); // let result={isLogin:checkLogin.success}\n\n    return {\n      isLogin: false\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/app/LoginChecker.ts"],"names":["HttpRequest","LoginChecker","loginUser","checkLogin","get","console","log","isLogin"],"mappings":"AACA,SAASA,WAAT,QAA0C,kBAA1C;;AAaA;;;;;AAKA,OAAO,MAAMC,YAAN,CAAkB;AACrB;;;;;;AAMAC,EAAAA,SAAS,GAAwB;AAC7B;AACA;AAEA,UAAMC,UAAU,GAAE,IAAIH,WAAJ,EAAD,CAAoBI,GAApB,CAA6B,SAA7B,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ,EAL6B,CAM7B;;AACA,WAAO;AAACI,MAAAA,OAAO,EAAC;AAAT,KAAP;AACH;;AAfoB","sourcesContent":["import { DataCache } from \"./DataCache\";\nimport { HttpRequest, HttpResponse } from \"../utils/Request\";\nimport { reject, async } from \"q\";\n\n/**\n * 登录用户\n */\nexport interface LoginStatus{\n    isLogin:boolean\n    data?:{\n\n    }\n}\n\n/**\n * 登录校验器：通过读取本地存储中的Token记录，\n * 并通过访问服务端校验token是否过期，\n * 判断用户是否已经登录。\n */\nexport class LoginChecker{\n    /**\n     * 检查用户是否已经登录；\n     * 首先访问本地存储检查是否有token保存，\n     * 包含Token则向服务端请求，检查Token有效性，\n     * token有效返回本地存储的用户信息；无效，则返回null\n     */\n    loginUser():LoginStatus|undefined{\n        // const token=DataCache.Instance.token();\n        // if(!token) return {isLogin:false};\n\n        const checkLogin=(new HttpRequest()).get<any>(\"connect\");\n        console.log(checkLogin);\n        // let result={isLogin:checkLogin.success}\n        return {isLogin:false};\n    }    \n}"]},"metadata":{},"sourceType":"module"}