import React from 'react';
import { Breadcrumb,Icon,Typography, Button,Divider,Col, Form, Input, Select,Radio, Upload, Row } from 'antd';
import { Link } from 'react-router-dom';

import Container from '../../components/Container';
import {ApplySectionPrompt,ApplySectionRecordStep} from '../../components/ApplyHeader';
import ApplyFormEquipment from '../../components/ApplyFormEquipment';
import {RecordApply} from '../../models/Record'
import { FormComponentProps } from 'antd/lib/form';
import {DictionaryData,DictionaryLoader} from '../../app/DictionaryLoader';
import { ApplyFormMedical, ApplyFormMedicalType,ApplyFormMedicalTypeContext } from '../../components/ApplyFormMedical';

/**
 * 备案流程：第二步，机构信息
 */
class RecordOrganization extends React.Component<FormComponentProps>{
    render(){
        const {Title}=Typography;
        const {Option}=Select;
        const {getFieldDecorator} = this.props.form;
        const recordApply:RecordApply={applyNo:"337676",applyDeadline:"2019年1月1日"};
        const street:Array<DictionaryData>=DictionaryLoader.instance.street();
        const subjection:Array<DictionaryData>=DictionaryLoader.instance.subjection();
        const ownership:Array<DictionaryData>=DictionaryLoader.instance.ownership();

        return (
            <Container>
                {/* 标题 */}
                <Breadcrumb className="breadcrumb">
                    <Breadcrumb.Item><Icon type="file-text"/><span>执业申请</span></Breadcrumb.Item>
                    <Breadcrumb.Item><span>备案</span></Breadcrumb.Item>
                </Breadcrumb>
                <Title level={4} className="title-with-underline">备案申请</Title>

                {/* 顶部 */}
                <ApplySectionPrompt {...recordApply}/>
                <ApplySectionRecordStep step={1} />
                <Divider><span className="title-inner">第二步：机构信息</span></Divider>

                {/* 表单：基本信息 */}
                <Col span={22} offset={1}>
                    <h4 className="title-form-sub">基本信息</h4>
                    <Form layout="vertical">
                        <Col span={15}>
                            <Form.Item label="诊所名称">{
                                getFieldDecorator("name",{
                                    rules:[
                                        {required:true}
                                    ]
                                })(<Input placeholder="请输入"/>)}
                            </Form.Item>
                        </Col>
                        <Col span={8} offset={1}>
                            <Form.Item label="所属街道">{
                                getFieldDecorator("street",{
                                    rules:[
                                        {required:true}
                                    ]
                                })(
                                    <Select showSearch
                                        placeholder="选择机构所属的（高新区）街道"
                                        optionFilterProp="children"
                                        filterOption={(input, option:React.ReactElement) =>
                                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0
                                        }
                                    >
                                        {street.map((data:DictionaryData,index:number)=>{
                                            return (<Option key={data.value}>{data.label}</Option>);
                                        })}
                                    </Select>
                                )}
                            </Form.Item>
                        </Col>
                        <Col span={7}>
                            <Form.Item label="机构地址" help="请输入详细的地址">{
                                getFieldDecorator("address",{
                                    rules:[
                                        {required:true}
                                    ]
                                })(
                                    <div className="input-group">
                                        <Col span={8}><Input value="四川省" disabled/></Col>
                                        <Col span={8}><Input value="成都市" disabled/></Col>
                                        <Col span={8}><Input value="高新区" disabled/></Col>
                                        <Col span={24}>
                                            <Input.TextArea rows={3} style={{maxHeight:73}} />
                                        </Col>
                                    </div>
                                )}
                            </Form.Item>
                        </Col>
                        <Col span={7} offset={1}>
                            <Form.Item label="统一社会信用代码">
                                <Input placeholder="请输入"/>
                            </Form.Item>
                            <Form.Item label="隶属关系">{
                                getFieldDecorator("subjection",{
                                    initialValue:"6",
                                    rules:[
                                        {required:true}
                                    ]
                                })(
                                    <Select showSearch
                                        placeholder="请选择"
                                        optionFilterProp="children"
                                        filterOption={(input, option:React.ReactElement) =>
                                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0
                                        }
                                    >
                                        {subjection.map((data:DictionaryData,index:number)=>{
                                            return (<Option key={data.value}>{data.label}</Option>);
                                        })}
                                    </Select>
                                )}
                            </Form.Item>
                        </Col>
                        <Col span={8} offset={1}>
                            <Form.Item label="所有制性质">{
                                getFieldDecorator("ownership",{
                                    rules:[
                                        {required:true}
                                    ]
                                })(
                                    <Select showSearch
                                        placeholder="请选择"
                                        optionFilterProp="children"
                                        filterOption={(input, option:React.ReactElement) =>
                                            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0
                                        }
                                    >
                                        {ownership.map((data:DictionaryData,index:number)=>{
                                            return (<Option key={data.value}>{data.label}</Option>);
                                        })}
                                    </Select>
                                )}
                            </Form.Item>
                            <Form.Item label="经营性质">
                                <Radio.Group value={2}>
                                    <Radio value={1}>非营利性</Radio>
                                    <Radio value={2}>营利性</Radio>
                                </Radio.Group>
                            </Form.Item>
                        </Col>
                        <Col span={12}>
                            <Form.Item label="中医诊疗技术和方案" help="填写内容限1000字以内">
                                <Input.TextArea rows={5} style={{maxHeight:115}}></Input.TextArea>
                            </Form.Item>
                        </Col>
                        <Col span={11} offset={1}>
                            <Form.Item label="中医（专场）执业范围" help="填写内容限1000字以内">
                                <Input.TextArea rows={5} style={{maxHeight:115}}></Input.TextArea>
                            </Form.Item>
                        </Col>
                    </Form>
                </Col>

                {/* 表单：设备清单 */}
                <Col span={22} offset={1}>
                    <h4 className="title-form-sub">设备清单</h4>
                    <ApplyFormEquipment {...recordApply} />
                </Col>

                {/* 表单：诊疗范围 */}
                <Col span={22} offset={1}>
                    <h4 className="title-form-sub">诊疗范围</h4>
                    <ApplyFormMedicalTypeContext.Provider value={{type:ApplyFormMedicalType.SIMPLE}}>
                        <ApplyFormMedical {...recordApply} />
                    </ApplyFormMedicalTypeContext.Provider>
                </Col>

                {/* 表单：上传内容 */}
                <Col span={22} offset={1}>
                    <h4 className="title-form-sub">上传内容</h4>
                    <Form labelCol={{span:7}} wrapperCol={{span:17}}>
                        <Row>
                            <Col span={12}>
                                <Form.Item label="医疗废物服务协议" help="支持扩展名：.doc .docx .pdf">{
                                    getFieldDecorator("waste",{
                                        rules:[
                                            {required:true}
                                        ]
                                    })(
                                        <Upload>
                                            <Button><Icon type="upload"/>上传文件</Button>
                                        </Upload>
                                    )}
                                </Form.Item>
                            </Col>
                            <Col span={12}>
                                <Form.Item label="机构制度" help="支持扩展名：.doc .docx .pdf">{
                                    getFieldDecorator("regulation",{
                                        rules:[
                                            {required:true}
                                        ]
                                    })(
                                        <Upload>
                                            <Button><Icon type="upload"/>上传文件</Button>
                                        </Upload>
                                    )}
                                </Form.Item>
                            </Col>
                        </Row>
                        <Row>
                            <Col span={12}>
                                <Form.Item
                                    label="营业执照" help="支持扩展名：.jpg .png">{
                                        getFieldDecorator("license",{
                                            rules:[
                                                {required:true}
                                            ]
                                        })(
                                            <Upload
                                                name="license"
                                                listType="picture-card"
                                                className="avatar-uploader"
                                                showUploadList={false}

                                            >
                                                <div>
                                                    <Icon type="plus" />
                                                    <div className="ant-upload-text">上传</div>
                                                </div>
                                            </Upload>
                                        )}
                                </Form.Item>
                            </Col>
                            <Col span={12}>
                                <Form.Item
                                    label="房屋平面布局图" help="支持扩展名：.jpg .png">{
                                        getFieldDecorator("license",{
                                            rules:[
                                                {required:true}
                                            ]
                                        })(
                                            <Upload
                                                name="license"
                                                listType="picture-card"
                                                className="avatar-uploader"
                                                showUploadList={false}

                                            >
                                                <div>
                                                    <Icon type="plus" />
                                                    <div className="ant-upload-text">上传</div>
                                                </div>
                                            </Upload>
                                        )}
                                </Form.Item>
                            </Col>
                        </Row>
                    </Form>
                </Col>
            
                {/* 按钮 */}
                <Col span={24} className="section-buttons">
                    <Button><Link to="/public/record/step-commitment/1">上一步</Link></Button>
                    <Button type="primary"><Link to="/public/record/step-staff/1">保存并进入下一步</Link></Button>
                </Col>
            </Container>
        );
    }
}
export default Form.create({name:"recordOrganization"})(RecordOrganization);