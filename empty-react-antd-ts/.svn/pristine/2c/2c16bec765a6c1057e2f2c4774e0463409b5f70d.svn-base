{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input-number/style/css\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/auto-complete/style/css\";\nimport _AutoComplete from \"antd/es/auto-complete\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/components/ApplyFormEquipment.tsx\";\nimport React from 'react';\nimport { DictionaryLoader } from '../app/DictionaryLoader';\n\n/**\n  * 申请公用表单：设备管理\n  */\nclass ApplyFormEquipment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      equiptmentNames: []\n      /**\n       * 页面布局\n       */\n\n    };\n\n    this.handleSearch = value => {\n      const dictionaryEquiptment = DictionaryLoader.instance.equipment();\n      let resultArray = [];\n      dictionaryEquiptment.map(dict => {\n        if (dict.label && String(dict.label).indexOf(value) !== -1) {\n          resultArray.push(String(dict.label));\n        }\n      });\n      this.setState({\n        equiptmentNames: resultArray\n      });\n    };\n  }\n\n  render() {\n    const Option = _Select.Option;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const equiptmentNames = this.state.equiptmentNames;\n    return React.createElement(_Form, {\n      layout: \"inline\",\n      labelCol: {\n        span: 0\n      },\n      wrapperCol: {\n        span: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"form-ul-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.equiptments.map((equipment, index) => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(_Select, {\n      defaultValue: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\u5927\\u578B\\u8BBE\\u5907\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\u666E\\u901A\\u8BBE\\u5907\")))), React.createElement(_Col, {\n      span: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"--\")), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(_AutoComplete, {\n      dataSource: equiptmentNames,\n      onSearch: this.handleSearch,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u8BBE\\u5907\\u540D\\u79F0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))), React.createElement(_Col, {\n      span: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"--\")), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(_InputNumber, {\n      min: 1,\n      step: 0,\n      defaultValue: 1,\n      formatter: value => \"\".concat(value, \"\\u53F0\"),\n      parser: value => value ? value.replace('台', '') : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(_Col, {\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      className: \"dynamic-delete-button\",\n      type: \"minus-circle-o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"dashed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \" \\u6DFB\\u52A0\\u8BBE\\u5907\"))))));\n  }\n  /**\n   * 过滤提示大设备名称\n   */\n\n\n}\n\nexport default ApplyFormEquipment;","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/components/ApplyFormEquipment.tsx"],"names":["React","DictionaryLoader","ApplyFormEquipment","Component","state","equiptmentNames","handleSearch","value","dictionaryEquiptment","instance","equipment","resultArray","map","dict","label","String","indexOf","push","setState","render","Option","getFieldDecorator","props","form","span","equiptments","index","replace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Col,Form,Button,Icon, Select,InputNumber, AutoComplete} from 'antd';\n\nimport { DictionaryData,DictionaryLoader } from '../app/DictionaryLoader';\nimport { ApplyContentEquipment } from '../app/Model';\nimport { FormComponentProps } from 'antd/lib/form';\n\ntype ApplyFormEquipmentProps={\n    equiptments:Array<ApplyContentEquipment>\n}\n\n/**\n  * 申请公用表单：设备管理\n  */\nclass ApplyFormEquipment extends React.Component<ApplyFormEquipmentProps>{\n    readonly state:{\n        equiptmentNames:Array<string>\n    }={\n        equiptmentNames:[]\n    }\n\n    /**\n     * 页面布局\n     */\n    render(){\n        const {Option}=Select;\n        const {getFieldDecorator}=this.props.form;\n        const {equiptmentNames}=this.state;\n\n        return (\n            <Form layout=\"inline\" labelCol={{span:0}} wrapperCol={{span:24}}>\n                <ul className=\"form-ul-group\">\n                    {this.props.equiptments.map((equipment,index)=>(\n                        <li>\n                            <Col span={4}>\n                            <Form.Item>\n                                <Select defaultValue=\"1\">\n                                    <Option value=\"1\">大型设备</Option>\n                                    <Option value=\"2\">普通设备</Option>\n                                </Select>\n                            </Form.Item>\n                            </Col>\n                            <Col span={1}><span className=\"divider\">--</span></Col>\n                            <Col span={8}>\n                            <Form.Item>\n                                <AutoComplete \n                                        dataSource={equiptmentNames}\n                                        onSearch={this.handleSearch}\n                                        placeholder=\"请输入设备名称\"\n                                />\n                            </Form.Item>\n                            </Col>\n                            <Col span={1}><span className=\"divider\">--</span></Col>\n                            <Col span={4}>\n                            <Form.Item>\n                                <InputNumber min={1} step={0} defaultValue={1} \n                                    formatter={value => `${value}台`}\n                                    parser={value => value?value.replace('台', ''):\"\"}\n                                />\n                            </Form.Item>\n                            </Col>\n                            <Col span={4}>\n                            <Icon\n                                className=\"dynamic-delete-button\"\n                                type=\"minus-circle-o\"\n                            />\n                            </Col>\n                        </li>\n                    ))}\n                    <li>\n                        <Col span={18}>\n                            <Form.Item>\n                               <Button type=\"dashed\">\n                                   <Icon type=\"plus\" /> 添加设备\n                               </Button>\n                            </Form.Item>\n                        </Col>\n                    </li>\n                </ul>\n            </Form>\n        );\n    }\n\n    /**\n     * 过滤提示大设备名称\n     */\n    handleSearch = (value:string) => {\n        const dictionaryEquiptment=DictionaryLoader.instance.equipment();\n        let resultArray:Array<string>=[];\n        dictionaryEquiptment.map((dict:DictionaryData)=>{\n            if(dict.label&&(String(dict.label).indexOf(value)!==-1)){\n                resultArray.push(String(dict.label));\n            }\n        });\n        this.setState({\n            equiptmentNames:resultArray\n        });\n    };\n}\nexport default ApplyFormEquipment;"]},"metadata":{},"sourceType":"module"}