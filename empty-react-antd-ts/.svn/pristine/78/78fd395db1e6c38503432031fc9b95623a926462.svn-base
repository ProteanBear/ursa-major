import React from 'react';
import { Form, Col, Input, Select, Row } from 'antd';
import { FormComponentProps } from 'antd/lib/form';
import { ApplyContentManager, FormValidateResult } from '../app/Model';

type ApplyFormContactProps=FormComponentProps&{
    /**当前的申请单号 */
    serialNumber:string;
    /**管理人员信息 */
    manager:ApplyContentManager;
    /**是否禁止输入 */
    disabled:boolean;
    /**内容修改时处理 */
    onChange():void;
}

/**
 * 申请公用表单：联系人相关信息
 */
class ApplyFormContact extends React.Component<ApplyFormContactProps>{
    readonly state:{
        /**记录当前的数据信息 */
        data:ApplyContentManager;
    }={
        data:this.props.manager
    }

    render(){
        const {getFieldDecorator} = this.props.form;
        const {Option}=Select;

        const {data}=this.state;
        const prefixSelector = getFieldDecorator('prefix', {
                initialValue: '028',
            })(
                <Select style={{ width: 70 }}>
                    <Option value="028">028</Option>
                </Select>
            );

        return (
            <Form layout="vertical">
                <Row>
                    <Col span={8}>
                        <Form.Item label="姓名">{
                            getFieldDecorator("name",{
                                initialValue:data.name,
                                rules:[
                                    {required:true,message:"姓名不能为空！"}
                                ]
                            })(
                                <Input placeholder="请输入"
                                    disabled={this.props.disabled}
                                    onChange={this.props.onChange}
                                />
                            )}
                        </Form.Item>
                    </Col>
                    <Col span={7} offset={1}>
                        <Form.Item label="手机号码">{
                            getFieldDecorator("phone",{
                                initialValue:data.phone,
                                rules:[
                                    {required:true,message:"手机号码不能为空！"}
                                ]
                            })(
                                <Input placeholder="请输入"
                                    disabled={this.props.disabled}
                                    onChange={this.props.onChange}
                                />
                            )}
                        </Form.Item>
                    </Col>
                    <Col span={7} offset={1}>
                        <Form.Item label="传真号码">{
                            getFieldDecorator("jobPhone",{
                                initialValue:data.jobPhone,
                                rules:[
                                    {required:true,message:"传真号码不能为空！"}
                                ]
                            })(
                                <Input addonBefore={prefixSelector} placeholder="请输入" 
                                    disabled={this.props.disabled}
                                    onChange={this.props.onChange}
                                />
                            )}
                        </Form.Item>
                    </Col>
                </Row>
                <Row>
                    <Col span={8}>
                        <Form.Item label="微信号">{
                            getFieldDecorator("wechat",{
                                initialValue:data.wechat,
                                rules:[
                                    {required:false}
                                ]
                            })(
                                <Input placeholder="请输入"
                                    disabled={this.props.disabled}
                                    onChange={this.props.onChange}
                                />
                            )}
                        </Form.Item>
                    </Col>
                    <Col span={7} offset={1}>
                        <Form.Item label="QQ号码">{
                            getFieldDecorator("qq",{
                                initialValue:data.qq,
                                rules:[
                                    {required:false}
                                ]
                            })(
                                <Input placeholder="请输入"
                                    disabled={this.props.disabled}
                                    onChange={this.props.onChange}
                                />
                            )}
                        </Form.Item>
                    </Col>
                    <Col span={7} offset={1}>
                        <Form.Item label="电子邮箱">{
                            getFieldDecorator("email",{
                                initialValue:data.email,
                                rules:[
                                    {required:false}
                                ]
                            })(
                                <Input placeholder="请输入" 
                                    disabled={this.props.disabled}
                                    onChange={this.props.onChange}
                                />
                            )}
                        </Form.Item>
                    </Col>
                </Row>
            </Form>
        );
    }

    /**
     * 校验表单并返回表单内容
     */
    validateFieldsAndScroll=():Promise<FormValidateResult<ApplyContentManager>>=>
        (new Promise<FormValidateResult<ApplyContentManager>>((resolve,reject)=>{
            this.props.form.validateFieldsAndScroll((errors,values)=>{
                //报错返回
                if(errors){
                    resolve({hasError:true,message:"",data:null});
                }

                // 返回完整的法人信息
                resolve({
                    ...this.state.data,
                    ...values
                });
            })
        })
    )
}
export default Form.create<ApplyFormContactProps>({name:"applyFormLegal"})(ApplyFormContact);