{"ast":null,"code":"import \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/divider/style/css\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/breadcrumb/style/css\";\nimport _Breadcrumb from \"antd/es/breadcrumb\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nimport _objectSpread from \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/pages/public/RecordCommitment.tsx\";\nimport React from 'react';\nimport Container from '../../components/Container';\nimport { withRouter } from 'react-router-dom';\nimport { ApplySectionPrompt, ApplySectionRecordStep } from '../../components/ApplyHeader';\nimport ApplyFormCommitment from '../../components/ApplyFormCommitment';\nimport { ApplyStep, PageError500 } from '../../app/Model';\nimport { HttpRequest } from '../../app/Request';\n/**\n * 备案流程：第一步，承诺书\n */\n\nclass RecordCommitment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serialNumber: this.props.match.params.id,\n      loading: false\n      /**\n       * 页面布局\n       */\n\n    };\n\n    this.uploadCompleted = url => {\n      this.setState(_objectSpread({}, this.state, {\n        data: _objectSpread({}, this.state.data, {\n          commitment: url\n        })\n      })); // 上传完成后自动保存进入下一步\n\n      this.saveCommitmentAndNext();\n    };\n\n    this.saveCommitmentAndNext = async () => {\n      if (!this.state.data) return;\n      this.setState(_objectSpread({}, this.state, {\n        loading: true\n      })); // const saveResponse:HttpResponse<any>=\n      //     await ((new HttpRequest()).post<any,{applyNo:string,commitment:string}>(\n      //         \"webapi/apply/saveCommitment\",\n      //         {\n      //             applyNo:this.state.serialNumber,\n      //             commitment:this.state.data.commitment\n      //         }\n      //     ));\n      // if(!saveResponse.success){\n      //     this.props.history.push(PageError500);\n      // }\n      // this.setState({...this.state,loading:false});\n      // this.props.history.push(ApplyStep.RECORD_ORGANIZATION.routePath(this.state.serialNumber));\n    };\n  }\n\n  render() {\n    const Title = _Typography.Title;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(_Breadcrumb, {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(_Breadcrumb.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"file-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\u6267\\u4E1A\\u7533\\u8BF7\")), React.createElement(_Breadcrumb.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"\\u5907\\u6848\"))), React.createElement(Title, {\n      level: 4,\n      className: \"title-with-underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\u5907\\u6848\\u7533\\u8BF7\"), React.createElement(ApplySectionPrompt, {\n      serialNumber: this.state.serialNumber,\n      deadline: this.state.data ? this.state.data.effectiveTime : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(ApplySectionRecordStep, Object.assign({}, ApplyStep.RECORD_COMMITMENT, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(_Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"title-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\u7B2C\\u4E00\\u6B65\\uFF1A\\u627F\\u8BFA\\u4E66\")), React.createElement(ApplyFormCommitment, {\n      serialNumber: this.state.serialNumber,\n      organization: this.state.data,\n      onUploadCompleted: this.uploadCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(_Col, {\n      span: 24,\n      className: \"section-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      loading: this.state.loading,\n      disabled: this.state.data ? \"\" === this.state.data.commitment : true,\n      onClick: this.saveCommitmentAndNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\u4FDD\\u5B58\\u5E76\\u8FDB\\u5165\\u4E0B\\u4E00\\u6B65\")));\n  }\n  /**\n   * 组件完成后请求获取申请信息\n   */\n\n\n  async componentDidMount() {\n    _message.loading(\"正在获取申请内容...\", 0);\n\n    const applyContent = await new HttpRequest().get(\"webapi/apply/getRecordInfo?applyNo=\".concat(this.state.serialNumber));\n\n    _message.destroy();\n\n    if (!applyContent.success) {\n      this.props.history.push(PageError500);\n    }\n\n    this.setState(_objectSpread({}, this.state, {\n      data: applyContent.data\n    }));\n  }\n  /**\n   * 告知承诺书上传完成\n   */\n\n\n}\n\nexport default withRouter(_Form.create({\n  name: \"pageRecordCommitment\"\n})(RecordCommitment));","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/pages/public/RecordCommitment.tsx"],"names":["React","Container","withRouter","ApplySectionPrompt","ApplySectionRecordStep","ApplyFormCommitment","ApplyStep","PageError500","HttpRequest","RecordCommitment","Component","state","serialNumber","props","match","params","id","loading","uploadCompleted","url","setState","data","commitment","saveCommitmentAndNext","render","Title","effectiveTime","RECORD_COMMITMENT","componentDidMount","applyContent","get","destroy","success","history","push","create","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Container from '../../components/Container';\nimport { Breadcrumb,Icon,Typography, Button, Divider,Col,Form,message} from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport { ApplySectionPrompt, ApplySectionRecordStep } from '../../components/ApplyHeader';\nimport ApplyFormCommitment  from '../../components/ApplyFormCommitment';\nimport { ApplyStep, AppComponentProps, ApplyContentOrganization, PageError500} from '../../app/Model';\nimport { HttpResponse, HttpRequest } from '../../app/Request';\n\n/**\n * 备案流程：第一步，承诺书\n */\nclass RecordCommitment extends React.Component<AppComponentProps>{\n    readonly state:{\n        /**申请单号 */\n        serialNumber:string;\n        /**保存按钮是否请求中 */\n        loading:boolean;\n        /**申请内容 */\n        data?:ApplyContentOrganization\n    }={\n        serialNumber:this.props.match.params.id,\n        loading:false\n    }\n\n    /**\n     * 页面布局\n     */\n    render(){\n        const {Title}=Typography;\n        return (\n            <Container>\n                {/* 标题 */}\n                <Breadcrumb className=\"breadcrumb\">\n                    <Breadcrumb.Item><Icon type=\"file-text\"/><span>执业申请</span></Breadcrumb.Item>\n                    <Breadcrumb.Item><span>备案</span></Breadcrumb.Item>\n                </Breadcrumb>\n                <Title level={4} className=\"title-with-underline\">备案申请</Title>\n\n                {/* 顶部 */}\n                <ApplySectionPrompt serialNumber={this.state.serialNumber} \n                    deadline={this.state.data?this.state.data.effectiveTime:\"\"} />\n                <ApplySectionRecordStep {...ApplyStep.RECORD_COMMITMENT} />\n                <Divider><span className=\"title-inner\">第一步：承诺书</span></Divider>\n\n                {/* 表单 */}\n                <ApplyFormCommitment \n                    serialNumber={this.state.serialNumber} \n                    organization={this.state.data} \n                    onUploadCompleted={this.uploadCompleted}\n                />\n\n                {/* 按钮 */}\n                <Col span={24} className=\"section-buttons\">\n                    <Button type=\"primary\" \n                        loading={this.state.loading}\n                        disabled={(this.state.data?(\"\"===this.state.data.commitment):true)}\n                        onClick={this.saveCommitmentAndNext}\n                        >\n                        保存并进入下一步\n                    </Button>\n                </Col>\n            </Container>\n        );\n    }\n\n    /**\n     * 组件完成后请求获取申请信息\n     */\n    async componentDidMount(){\n        message.loading(\"正在获取申请内容...\",0);\n\n        const applyContent:HttpResponse<ApplyContentOrganization>=\n            await ((new HttpRequest()).get<ApplyContentOrganization>(\n                `webapi/apply/getRecordInfo?applyNo=${this.state.serialNumber}`\n            ));\n        message.destroy();\n\n        if(!applyContent.success){\n            this.props.history.push(PageError500);\n        }\n\n        this.setState({\n            ...this.state,\n            data:applyContent.data\n        });\n    }\n\n    /**\n     * 告知承诺书上传完成\n     */\n    uploadCompleted=(url:string)=>{\n        this.setState({\n            ...this.state,\n            data:{\n                ...this.state.data,\n                commitment:url\n            }\n        });\n\n        // 上传完成后自动保存进入下一步\n        this.saveCommitmentAndNext();\n    }\n\n    /**\n     * 保存后并进入下一步\n     */\n    saveCommitmentAndNext=async ()=>{\n        if(!this.state.data) return;\n        this.setState({...this.state,loading:true});\n\n        // const saveResponse:HttpResponse<any>=\n        //     await ((new HttpRequest()).post<any,{applyNo:string,commitment:string}>(\n        //         \"webapi/apply/saveCommitment\",\n        //         {\n        //             applyNo:this.state.serialNumber,\n        //             commitment:this.state.data.commitment\n        //         }\n        //     ));\n\n        // if(!saveResponse.success){\n        //     this.props.history.push(PageError500);\n        // }\n\n        // this.setState({...this.state,loading:false});\n        // this.props.history.push(ApplyStep.RECORD_ORGANIZATION.routePath(this.state.serialNumber));\n    }\n}\nexport default withRouter((Form.create({name:\"pageRecordCommitment\"})(RecordCommitment) as any));"]},"metadata":{},"sourceType":"module"}