{"ast":null,"code":"import \"antd/es/list/style/css\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/descriptions/style/css\";\nimport _Descriptions from \"antd/es/descriptions\";\nimport \"antd/es/tag/style/css\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/carousel/style/css\";\nimport _Carousel from \"antd/es/carousel\";\nimport \"antd/es/empty/style/css\";\nimport _Empty from \"antd/es/empty\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nimport \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/result/style/css\";\nimport _Result from \"antd/es/result\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/components/ApplyDetailInforDoctorAndNurse.tsx\";\nimport React from 'react';\nimport { DictionaryLoader } from '../app/DictionaryLoader';\nimport ApplyUtils from '../utils/ApplyUtils';\nimport ImageViewer from './ImageViewer';\n\n/**\n * 申请详情中的申请资料中的医护人员列表\n */\nexport default class ApplyDetailInforDoctorAndNurse extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.currentKey = \"doctors\";\n\n    this.jsxErrorResult = (descrition, onClick) => React.createElement(_Result, {\n      status: \"error\",\n      title: \"\\u8F7D\\u5165\\u5931\\u8D25\",\n      subTitle: descrition,\n      extra: [React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"redo\",\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"\\u91CD\\u65B0\\u8F7D\\u5165\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    });\n\n    this.paginationConfig = page => {\n      return {\n        position: \"bottom\",\n        total: page.total,\n        current: page.index,\n        pageSize: page.size,\n        simple: true,\n        className: \"to-do-list-page\",\n        onChange: toPage => this.props.onPageChange(this.currentKey, toPage)\n      };\n    };\n\n    this.onPreviewImages = (event, index) => {\n      const target = event.target;\n      const container = document.querySelector(\"#apply-detail-doctor-\".concat(index));\n\n      if (container) {\n        const imgs = container.querySelectorAll(\".ant-list-item-meta img.image-to-view,.slick-slide:not(.slick-cloned) img.image-to-view\");\n        const imageList = [];\n        imgs.forEach(img => {\n          imageList.push(img);\n        });\n        const selectedIndex = Number(target.dataset[\"imageIndex\"] || \"0\");\n        ImageViewer.view(imageList, selectedIndex);\n      }\n    };\n  }\n\n  /**\n   * 页面布局\n   */\n  render() {\n    const Content = _Layout.Content;\n    const Paragraph = _Typography.Paragraph,\n          Title = _Typography.Title;\n    const _this$props = this.props,\n          loading = _this$props.loading,\n          loadedError = _this$props.loadedError,\n          data = _this$props.data;\n    const loadingProps = {\n      tip: \"载入中...\",\n      size: \"default\"\n    };\n    const empty = React.createElement(_Empty, {\n      image: _Empty.PRESENTED_IMAGE_SIMPLE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n    const dictionary = DictionaryLoader.instance;\n    let indexArray = new Array(this.props.page.size);\n\n    for (let i = 0; i < indexArray.length; i++) indexArray[i] = 1;\n\n    return React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(_List, {\n      itemLayout: \"vertical\",\n      loading: loading ? loadingProps : false,\n      locale: loadedError ? {\n        emptyText: this.jsxErrorResult(\"数据载入出现错误！\", () => {\n          this.props.onPageChange(this.currentKey);\n        })\n      } : {\n        emptyText: empty\n      },\n      dataSource: data,\n      renderItem: (item, index) => React.createElement(_List.Item, {\n        id: \"apply-detail-doctor-\".concat(index),\n        extra: React.createElement(\"div\", {\n          className: \"descriptions-carousel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(_Carousel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, ApplyUtils.concatStaffImages(item.idcardImg, item.practiceImg, item.qualificationCertImg, item.titleCertImg).split(\",\").map(src => React.createElement(\"img\", {\n          \"data-image-index\": indexArray[index]++,\n          onClick: event => {\n            this.onPreviewImages(event, index);\n          },\n          src: src,\n          className: \"image-to-view\",\n          alt: \"\\u4EBA\\u5458\\u59D3\\u540D\\uFF1A\".concat(item.name, \"\\uFF1B\\n                                                    \\u8EAB\\u4EFD\\u8BC1\\u53F7\\u7801\\uFF1A\").concat(item.idcard, \"\\uFF1B\\n                                                    \\u6267\\u4E1A\\u8BC1\\u53F7\\uFF1A\").concat(item.practiceCode || \"暂无\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(_List.Item.Meta, {\n        avatar: React.createElement(\"img\", {\n          \"data-image-index\": 0,\n          onClick: event => {\n            this.onPreviewImages(event, index);\n          },\n          src: item.img,\n          style: {\n            width: 64,\n            height: \"auto\",\n            maxHeight: 128\n          },\n          className: \"image-to-view\",\n          alt: \"\\u4EBA\\u5458\\u59D3\\u540D\\uFF1A\".concat(item.name, \"\\uFF1B\\n                                            \\u8EAB\\u4EFD\\u8BC1\\u53F7\\u7801\\uFF1A\").concat(item.idcard, \"\\uFF1B\\n                                            \\u6267\\u4E1A\\u8BC1\\u53F7\\uFF1A\").concat(item.practiceCode || \"暂无\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }),\n        title: React.createElement(Paragraph, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Title, {\n          level: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, item.name), React.createElement(_Tag, {\n          color: \"geekblue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, dictionary.jobLabel(item.position)), React.createElement(_Tag, {\n          color: \"volcano\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, dictionary.jobLabel(item.title))),\n        description: React.createElement(_Descriptions, {\n          className: \"description-list-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(_Descriptions.Item, {\n          label: \"\\u79D1\\u5BA4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, item.dept), React.createElement(_Descriptions.Item, {\n          label: \"\\u6027\\u522B\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, item.sex), React.createElement(_Descriptions.Item, {\n          label: \"\\u5B66\\u5386\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, dictionary.educationLabel(item.education) || \"暂无\"), React.createElement(_Descriptions.Item, {\n          label: \"\\u6BD5\\u4E1A\\u9662\\u6821\",\n          span: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, item.school), React.createElement(_Descriptions.Item, {\n          label: \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\",\n          span: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, item.idcard), React.createElement(_Descriptions.Item, {\n          label: \"\\u6267\\u4E1A\\u8BC1\\u53F7\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, item.practiceCode || \"暂无\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })),\n      pagination: this.paginationConfig(this.props.page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n  /**\n   * 返回错误显示信息\n   */\n\n\n}","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/components/ApplyDetailInforDoctorAndNurse.tsx"],"names":["React","DictionaryLoader","ApplyUtils","ImageViewer","ApplyDetailInforDoctorAndNurse","Component","state","currentKey","jsxErrorResult","descrition","onClick","paginationConfig","page","position","total","current","index","pageSize","size","simple","className","onChange","toPage","props","onPageChange","onPreviewImages","event","target","container","document","querySelector","imgs","querySelectorAll","imageList","forEach","img","push","selectedIndex","Number","dataset","view","render","Content","Paragraph","Title","loading","loadedError","data","loadingProps","tip","empty","PRESENTED_IMAGE_SIMPLE","dictionary","instance","indexArray","Array","i","length","emptyText","item","concatStaffImages","idcardImg","practiceImg","qualificationCertImg","titleCertImg","split","map","src","name","idcard","practiceCode","width","height","maxHeight","jobLabel","title","dept","sex","educationLabel","education","school"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ApplyContentDoctorOrNurse } from '../app/Model';\nimport { PageConfig } from '../app/Request';\nimport { SpinProps } from 'antd/lib/spin';\nimport { Empty, Layout, List, Result, Button, Descriptions, Typography, Tag, Carousel } from 'antd';\nimport { PaginationConfig } from 'antd/lib/table';\nimport { DictionaryLoader } from '../app/DictionaryLoader';\nimport ApplyUtils from '../utils/ApplyUtils';\nimport ImageViewer from './ImageViewer';\n\ntype ApplyDetailInforDoctorAndNurseProps={\n    /**数据 */\n    data?:Array<ApplyContentDoctorOrNurse>;\n    /**分页配置 */\n    page:PageConfig;\n    /**是否载入中 */\n    loading:boolean;\n    /**是否载入错误 */\n    loadedError:boolean;\n    /**换页处理 */\n    onPageChange(key:string,page?:number):void;\n}\n\n/**\n * 申请详情中的申请资料中的医护人员列表\n */\nexport default class ApplyDetailInforDoctorAndNurse extends React.Component<ApplyDetailInforDoctorAndNurseProps>{\n    readonly state:{}={}\n\n    private currentKey=\"doctors\";\n\n    /**\n     * 页面布局\n     */\n    render(){\n        const {Content}=Layout;\n        const {Paragraph,Title}=Typography;\n        const {loading,loadedError,data}=this.props;\n        const loadingProps:SpinProps={tip:\"载入中...\",size:\"default\"};\n        const empty=(<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />);\n        const dictionary=DictionaryLoader.instance;\n        let indexArray=new Array(this.props.page.size);\n        for(let i=0;i<indexArray.length;i++) indexArray[i]=1;\n\n        return (\n            <Content>\n                <List itemLayout=\"vertical\"\n                    loading={loading?loadingProps:false}\n                    locale={loadedError\n                        ?{emptyText:this.jsxErrorResult(\"数据载入出现错误！\",()=>{this.props.onPageChange(this.currentKey)})}\n                        :{emptyText:empty}\n                    }\n                    dataSource={data}\n                    renderItem={(item,index)=>(\n                        <List.Item id={`apply-detail-doctor-${index}`}\n                            extra={\n                                <div className=\"descriptions-carousel\">\n                                    <Carousel>\n                                    {\n                                        ApplyUtils.concatStaffImages(\n                                                item.idcardImg,item.practiceImg,\n                                                item.qualificationCertImg,item.titleCertImg\n                                            ).split(\",\").map((src)=>(\n                                            <img \n                                                data-image-index={indexArray[index]++}  \n                                                onClick={event=>{this.onPreviewImages(event,index)}}\n                                                src={src} className=\"image-to-view\"\n                                                alt={`人员姓名：${item.name}；\n                                                    身份证号码：${item.idcard}；\n                                                    执业证号：${item.practiceCode||\"暂无\"}`\n                                                }\n                                            />\n                                        ))\n                                    }\n                                    </Carousel>\n                                </div>\n                            }\n                        >\n                            <List.Item.Meta \n                                avatar={\n                                    <img data-image-index={0} \n                                        onClick={event=>{this.onPreviewImages(event,index)}} \n                                        src={item.img} style={{width:64,height:\"auto\",maxHeight:128}}\n                                        className=\"image-to-view\"\n                                        alt={`人员姓名：${item.name}；\n                                            身份证号码：${item.idcard}；\n                                            执业证号：${item.practiceCode||\"暂无\"}`\n                                        }\n                                    />\n                                }\n                                title={\n                                    <Paragraph>\n                                        <Title level={4}>{item.name}</Title>\n                                        <Tag color=\"geekblue\">\n                                            {dictionary.jobLabel(item.position)}\n                                        </Tag>\n                                        <Tag color=\"volcano\">\n                                            {dictionary.jobLabel(item.title)}\n                                        </Tag>\n                                    </Paragraph>\n                                }\n                                description={\n                                    <Descriptions className=\"description-list-item\">\n                                        <Descriptions.Item label=\"科室\">{item.dept}</Descriptions.Item>\n                                        <Descriptions.Item label=\"性别\">{item.sex}</Descriptions.Item>\n                                        <Descriptions.Item label=\"学历\">{dictionary.educationLabel(item.education)||\"暂无\"}</Descriptions.Item>\n                                        <Descriptions.Item label=\"毕业院校\" span={3}>{item.school}</Descriptions.Item>\n                                        <Descriptions.Item label=\"身份证号\" span={3}>{item.idcard}</Descriptions.Item>\n                                        <Descriptions.Item label=\"执业证号\">{item.practiceCode||\"暂无\"}</Descriptions.Item>\n                                    </Descriptions>\n                                }\n                            />\n                        </List.Item>\n                    )}\n                    pagination={this.paginationConfig(this.props.page)}\n                /> \n            </Content>\n        );\n    }\n\n    /**\n     * 返回错误显示信息\n     */\n    jsxErrorResult=(descrition:string,onClick:(()=>void))=>(\n        <Result\n            status=\"error\"\n            title=\"载入失败\"\n            subTitle={descrition}\n            extra={[\n                <Button type=\"primary\" icon=\"redo\" onClick={onClick}>\n                    重新载入\n                </Button>\n            ]}\n        />\n    )\n\n    /**\n     * 生成List使用的分页配置\n     */\n    paginationConfig=(page:PageConfig):PaginationConfig=>{\n        return {\n            position:\"bottom\",\n            total:page.total,\n            current:page.index,\n            pageSize:page.size,\n            simple:true,\n            className:\"to-do-list-page\",\n            onChange:toPage=>this.props.onPageChange(this.currentKey,toPage),\n        }\n    }\n\n    /**\n     * 预览相关图片\n     */\n    onPreviewImages=(event:React.MouseEvent<HTMLDivElement>,index:number)=>{\n        const target=event.target as HTMLDivElement;\n        const container=document.querySelector(`#apply-detail-doctor-${index}`);\n        if(container){\n            const imgs=container.querySelectorAll<HTMLImageElement>\n                (\".ant-list-item-meta img.image-to-view,.slick-slide:not(.slick-cloned) img.image-to-view\");\n            const imageList:Array<HTMLImageElement>=[];\n            imgs.forEach(img=>{\n                imageList.push(img)\n            });\n            const selectedIndex=Number(\n                target.dataset[\"imageIndex\"]||\"0\"\n            );\n            ImageViewer.view(imageList,selectedIndex);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}