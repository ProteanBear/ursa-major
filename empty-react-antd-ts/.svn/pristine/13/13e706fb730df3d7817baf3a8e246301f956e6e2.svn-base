{"ast":null,"code":"import \"antd/es/drawer/style/css\";\nimport _Drawer from \"antd/es/drawer\";\nimport \"antd/es/cascader/style/css\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/radio/style/css\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/spin/style/css\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport _objectSpread from \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/maqiang/\\u7F16\\u7A0B/yzwj-recorder-web/src/components/StaffDoctorsAndNurses.tsx\";\nimport React from 'react';\nimport { DictionaryLoader } from '../app/DictionaryLoader';\nimport { PageError500, ApplyContentDoctorOrNurseFactory, ApplyJobAndTitleTag } from '../app/Model';\nimport { HttpRequest } from '../app/Request';\nimport { withRouter } from 'react-router';\nimport ApplyUtils from '../utils/ApplyUtils';\nimport ImageViewer from './ImageViewer';\n\n/**\n * 医护人员管理组件\n */\nclass StaffDoctorsAndNurse extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      drawerVisible: false,\n      currentIndex: -1,\n      hasFileValidateError: false,\n      fileList: {\n        \"identityFront\": [],\n        \"identityBack\": [],\n        \"photo\": [],\n        \"practice\": [],\n        \"qualification\": [],\n        \"title\": []\n      },\n      uploadSuccess: {\n        \"identityFront\": true,\n        \"identityBack\": true,\n        \"photo\": true,\n        \"practice\": true,\n        \"qualification\": true,\n        \"title\": true\n      },\n      uploadLimit: {\n        \"identityFront\": 1,\n        \"identityBack\": 1,\n        \"photo\": 1,\n        \"practice\": 20,\n        \"qualification\": 20,\n        \"title\": 20\n      }\n    };\n    this.uploadPhotoConfig = {\n      accept: \".jpg,.png\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: true\n      /**\n       * 页面布局\n       */\n\n    };\n\n    this.componentDidMount = async () => {\n      // 获取医护人员信息\n      const staffResponse = await new HttpRequest().get(\"webapi/apply/doctorAndNurse?applyNo=\".concat(this.props.serialNumber)); // 失败跳转500\n\n      if (!staffResponse.success || !staffResponse.data) {\n        this.props.history.push(PageError500);\n        return;\n      } // 设置显示\n\n\n      this.setState(_objectSpread({}, this.state, {\n        data: staffResponse.data\n      }));\n    };\n\n    this.uploadJsxContent = (key, label, example) => React.createElement(_Form.Item, {\n      label: label,\n      className: \"\".concat(key, \"-photos must-upload\"),\n      labelCol: {\n        span: 24\n      },\n      wrapperCol: {\n        span: 24\n      },\n      validateStatus: !this.state.hasFileValidateError ? this.state.uploadSuccess[key] ? \"\" : \"error\" : this.state.fileList[key].length > 0 ? \"\" : \"error\",\n      help: !this.state.hasFileValidateError ? this.state.uploadSuccess[key] ? \"支持扩展名：.jpg .png\" : \"文件上传失败！\" : this.state.fileList[key].length > 0 ? \"支持扩展名：.jpg .png\" : \"必须上传此文件！\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(_Upload, Object.assign({}, this.uploadPhotoConfig, {\n      name: key,\n      customRequest: fileObject => {\n        this.uploadPhoto(fileObject, key);\n      },\n      onRemove: file => {\n        this.uploadPhotoRemove(file, key);\n      },\n      onPreview: file => {\n        this.uploadPhotoPreview(file, key);\n      },\n      fileList: this.state.fileList[key],\n      disabled: this.props.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), this.state.uploadLimit[key] > this.state.fileList[key].length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\")) : null)), example ? React.createElement(_Col, {\n      span: 8,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"dashed\",\n      style: {\n        height: 102,\n        width: 102\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"file-image\",\n      style: {\n        fontSize: 32\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, example), React.createElement(_Icon, {\n      type: \"zoom-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }))) : null));\n\n    this.showDrawer = index => {\n      // 获取数据\n      const data = index === -1 || !this.state.data ? ApplyContentDoctorOrNurseFactory.create(this.props.serialNumber) : this.state.data[index]; // 转换图片列表\n\n      let _this$state$fileList = this.state.fileList,\n          identityFront = _this$state$fileList.identityFront,\n          identityBack = _this$state$fileList.identityBack,\n          photo = _this$state$fileList.photo,\n          practice = _this$state$fileList.practice,\n          qualification = _this$state$fileList.qualification,\n          title = _this$state$fileList.title;\n      const identityArray = data.idcardImg.split(\",\");\n      const idFrontString = identityArray[0],\n            idBackString = identityArray.length > 1 ? identityArray[1] : \"\";\n      identityFront.splice(0, identityFront.length);\n      identityFront = ApplyUtils.urlStringToUploadArray(identityFront, idFrontString);\n      identityBack.splice(0, identityBack.length);\n      identityBack = ApplyUtils.urlStringToUploadArray(identityBack, idBackString);\n      photo.splice(0, photo.length);\n      photo = ApplyUtils.urlStringToUploadArray(photo, data.img);\n      practice.splice(0, practice.length);\n      practice = ApplyUtils.urlStringToUploadArray(practice, data.practiceImg);\n      qualification.splice(0, qualification.length);\n      qualification = ApplyUtils.urlStringToUploadArray(qualification, data.qualificationCertImg);\n      title.splice(0, title.length);\n      title = ApplyUtils.urlStringToUploadArray(title, data.titleCertImg); // 设置显示\n\n      this.setState(_objectSpread({}, this.state, {\n        drawerVisible: true,\n        editingData: data,\n        currentIndex: index,\n        fileList: {\n          identityFront: identityFront,\n          identityBack: identityBack,\n          photo: photo,\n          practice: practice,\n          qualification: qualification,\n          title: title\n        }\n      }));\n    };\n\n    this.onClose = () => {\n      this.setState({\n        drawerVisible: false\n      });\n    };\n\n    this.uploadPhoto = async (fileObject, key) => {\n      // 上传文件或图片\n      const option = fileObject;\n      const uploadResponse = await new HttpRequest().upload(\"webapi/comm/uploadFile\", option.file, \"file\", {\n        applyNo: this.props.serialNumber\n      });\n      const uploadSuccess = this.state.uploadSuccess;\n      uploadSuccess[key] = uploadResponse.success && uploadResponse.data !== null; //上传失败显示\n\n      if (!uploadSuccess[key] || !uploadResponse.data) {\n        this.setState(_objectSpread({}, this.state, {\n          uploadSuccess: uploadSuccess\n        }));\n        return;\n      } //上传成功，设置已上传列表\n\n\n      const fileList = this.state.fileList;\n      fileList[key].push({\n        uid: String(fileList[key].length),\n        name: option.file.name,\n        size: 0,\n        type: \"\",\n        url: uploadResponse.data.url\n      });\n      this.setState(_objectSpread({}, this.state, {\n        uploadSuccess: uploadSuccess,\n        fileList: fileList\n      }));\n      this.props.onChange();\n    };\n\n    this.uploadPhotoPreview = (uploadFile, key) => {\n      // 获取全部上传的图片元素\n      const row = document.querySelector(\".\".concat(key, \"-photos\"));\n      if (!row) return;\n      const imgArray = row.querySelectorAll(\".ant-upload-list-item-image\");\n      const imageList = [];\n      const fileList = this.state.fileList;\n      const viewImageNameSet = ApplyUtils.uploadArrayToNameSet(fileList[key]);\n      let currentIndex = 0;\n      imgArray.forEach((img, index) => {\n        if (viewImageNameSet.has(img.alt)) {\n          imageList.push(img);\n          currentIndex = img.alt === uploadFile.name ? index : currentIndex;\n        }\n      });\n      ImageViewer.view(imageList, currentIndex);\n    };\n\n    this.uploadPhotoRemove = (file, key) => {\n      const confirm = _Modal.confirm;\n      const fileList = this.state.fileList;\n      confirm({\n        title: '确定要删除当前上传的图片么？',\n        okText: '继续删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: () => {\n          fileList[key].splice(fileList[key].findIndex(item => item.uid === file.uid), 1);\n          this.setState(_objectSpread({}, this.state, {\n            fileList: fileList\n          }));\n        }\n      });\n      this.props.onChange();\n    };\n  }\n\n  render() {\n    if (!this.state.data) {\n      return React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(_Spin, {\n        className: \"card-loading\",\n        size: \"large\",\n        tip: \"\\u8F7D\\u5165\\u4E2D...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })));\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const Meta = _Card.Meta;\n    const Option = _Select.Option;\n    const _this$state = this.state,\n          data = _this$state.data,\n          editingData = _this$state.editingData;\n    const education = DictionaryLoader.instance.education();\n    const job = DictionaryLoader.instance.job(ApplyJobAndTitleTag.DOCTOR_AND_NURSE.tags);\n    const jobLabel = DictionaryLoader.instance.jobLabel;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, data.map((person, index) => React.createElement(_Col, {\n      span: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      bodyStyle: {\n        paddingBottom: 8\n      },\n      actions: [React.createElement(_Icon, {\n        type: \"edit\",\n        key: \"edit\",\n        onClick: () => this.showDrawer(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(_Icon, {\n        type: \"delete\",\n        key: \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      className: \"staff-meta\",\n      avatar: React.createElement(\"img\", {\n        src: person.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }),\n      title: person.name,\n      description: React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, jobLabel(person.position), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), jobLabel(person.title), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), person.dept),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })))), React.createElement(_Col, {\n      span: 5,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"dashed\",\n      style: {\n        width: \"100%\",\n        height: 183\n      },\n      onClick: () => this.showDrawer(-1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), \"\\u6DFB\\u52A0\"))), editingData ? React.createElement(_Drawer, {\n      title: this.state.currentIndex === -1 ? \"添加医护人员\" : \"\\u7F16\\u8F91\\u4EBA\\u5458\\uFF08\".concat(editingData.name, \"\\uFF09\"),\n      width: 560,\n      bodyStyle: {\n        paddingBottom: 54\n      },\n      onClose: this.onClose,\n      visible: this.state.drawerVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 18\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"title-form-sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\u4FE1\\u606F\\u586B\\u5199\"), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u4EBA\\u5458\\u59D3\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, getFieldDecorator(\"name\", {\n      initialValue: editingData.name,\n      rules: [{\n        required: true,\n        message: \"人员姓名不能为空！\"\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })))), React.createElement(_Col, {\n      span: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u6027\\u522B\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, getFieldDecorator(\"sex\", {\n      initialValue: \"\" === editingData.sex ? \"男\" : editingData.sex,\n      rules: [{\n        required: false\n      }]\n    })(React.createElement(_Radio.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(_Radio, {\n      value: \"\\u7537\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"\\u7537\"), React.createElement(_Radio, {\n      value: \"\\u5973\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"\\u5973\")))))), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, getFieldDecorator(\"idcard\", {\n      initialValue: editingData.idcard,\n      rules: [{\n        required: true,\n        message: \"身份证号码不能为空！\"\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })))), React.createElement(_Col, {\n      span: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u6BD5\\u4E1A\\u9662\\u6821\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, getFieldDecorator(\"school\", {\n      initialValue: editingData.school,\n      rules: [{\n        required: false\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })))), React.createElement(_Col, {\n      span: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u5B66\\u5386\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, getFieldDecorator(\"education\", {\n      initialValue: \"\" === editingData.education ? undefined : editingData.education,\n      rules: [{\n        required: false\n      }]\n    })(React.createElement(_Select, {\n      showSearch: true,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\",\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, education.map((data, index) => {\n      return React.createElement(Option, {\n        key: data.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, data.label);\n    })))))), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u804C\\u52A1\\u804C\\u79F0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, getFieldDecorator(\"positionAndTitle\", {\n      initialValue: \"\" === editingData.position && \"\" === editingData.title ? undefined : [editingData.position, editingData.title],\n      rules: [{\n        required: true,\n        message: \"职务职称不能为空！\"\n      }]\n    })(React.createElement(_Cascader, {\n      options: job,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })))), React.createElement(_Col, {\n      span: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u79D1\\u5BA4\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, getFieldDecorator(\"dept\", {\n      initialValue: editingData.dept,\n      rules: [{\n        required: true,\n        message: \"所属科室不能为空！\"\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }))))), React.createElement(\"h4\", {\n      className: \"title-form-sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u5185\\u5BB9\"), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, this.uploadJsxContent(\"identityFront\", \"身份证正面\", \"示例图\")), React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, this.uploadJsxContent(\"identityBack\", \"身份证背面\", \"示例图\"))), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.uploadJsxContent(\"photo\", \"二寸寸照\", \"示例图\"))), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, this.uploadJsxContent(\"practice\", \"执业证书\"))), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, this.uploadJsxContent(\"qualification\", \"资格证书\"))), React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, this.uploadJsxContent(\"title\", \"职称证书\")))), React.createElement(\"div\", {\n      className: \"bottom-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      onClick: this.onClose,\n      style: {\n        marginRight: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"\\u53D6\\u6D88\"), React.createElement(_Button, {\n      onClick: this.onClose,\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"\\u4FDD\\u5B58\"))) : null);\n  }\n  /**\n   * 组件载入后读取人员列表\n   */\n\n\n}\n\nexport default withRouter(_Form.create({\n  name: \"doctorsAndNurseForm\"\n})(StaffDoctorsAndNurse));","map":{"version":3,"sources":["/Users/maqiang/编程/yzwj-recorder-web/src/components/StaffDoctorsAndNurses.tsx"],"names":["React","DictionaryLoader","PageError500","ApplyContentDoctorOrNurseFactory","ApplyJobAndTitleTag","HttpRequest","withRouter","ApplyUtils","ImageViewer","StaffDoctorsAndNurse","Component","state","drawerVisible","currentIndex","hasFileValidateError","fileList","uploadSuccess","uploadLimit","uploadPhotoConfig","accept","listType","className","showUploadList","componentDidMount","staffResponse","get","props","serialNumber","success","data","history","push","setState","uploadJsxContent","key","label","example","span","length","fileObject","uploadPhoto","file","uploadPhotoRemove","uploadPhotoPreview","disabled","height","width","fontSize","showDrawer","index","create","identityFront","identityBack","photo","practice","qualification","title","identityArray","idcardImg","split","idFrontString","idBackString","splice","urlStringToUploadArray","img","practiceImg","qualificationCertImg","titleCertImg","editingData","onClose","option","uploadResponse","upload","applyNo","uid","String","name","size","type","url","onChange","uploadFile","row","document","querySelector","imgArray","querySelectorAll","imageList","viewImageNameSet","uploadArrayToNameSet","forEach","has","alt","view","confirm","okText","okType","cancelText","onOk","findIndex","item","render","getFieldDecorator","form","Meta","Option","education","instance","job","DOCTOR_AND_NURSE","tags","jobLabel","map","person","paddingBottom","position","dept","initialValue","rules","required","message","sex","idcard","school","undefined","input","children","toLowerCase","indexOf","value","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Button, Icon, Drawer, Form, Input, Radio, Select, Cascader, Upload, Avatar, Spin, Modal } from 'antd';\nimport { DictionaryLoader, DictionaryData } from '../app/DictionaryLoader';\nimport { ApplyContentDoctorOrNurse, AppComponentProps,PageError500, ApplyContentDoctorOrNurseFactory, ApplyJobAndTitleTag } from '../app/Model';\nimport { HttpResponse, HttpRequest } from '../app/Request';\nimport { withRouter } from 'react-router';\nimport { UploadFile, UploadProps } from 'antd/lib/upload/interface';\nimport ApplyUtils from '../utils/ApplyUtils';\nimport ImageViewer from './ImageViewer';\n\ntype StaffDoctorsAndNurseProps=AppComponentProps&{\n    /**当前的申请单号 */\n    serialNumber:string;\n    /**是否禁止输入 */\n    disabled:boolean;\n    /**内容修改时处理 */\n    onChange():void;\n}\n\n/**\n * 医护人员管理组件\n */\nclass StaffDoctorsAndNurse extends React.Component<StaffDoctorsAndNurseProps>{\n    state:{\n        /**编辑抽屉是否显示 */\n        drawerVisible:boolean;\n        /**当前列表数据 */\n        data?:Array<ApplyContentDoctorOrNurse>;\n        /**正在编辑的数据 */\n        editingData?:ApplyContentDoctorOrNurse;\n        /**正在编辑的数据在列表中的索引 */\n        currentIndex:number;\n        /**文件上传验证错误 */\n        hasFileValidateError:boolean;\n        /**上传文件列表 */\n        fileList:{\n            [key:string]:Array<UploadFile>\n        };\n        /**上传是否成功 */\n        uploadSuccess:{\n            [key:string]:boolean\n        };\n        /**上传的数量限制 */\n        uploadLimit:{\n            [key:string]:number\n        }\n    }= { \n        drawerVisible: false,\n        currentIndex:-1,\n        hasFileValidateError:false,\n        fileList:{\n            \"identityFront\":[],\n            \"identityBack\":[],\n            \"photo\":[],\n            \"practice\":[],\n            \"qualification\":[],\n            \"title\":[],\n        },\n        uploadSuccess:{\n            \"identityFront\":true,\n            \"identityBack\":true,\n            \"photo\":true,\n            \"practice\":true,\n            \"qualification\":true,\n            \"title\":true,\n        },\n        uploadLimit:{\n            \"identityFront\":1,\n            \"identityBack\":1,\n            \"photo\":1,\n            \"practice\":20,\n            \"qualification\":20,\n            \"title\":20,\n        },\n    };\n\n    /**\n     * 上传组件配置：图片\n     */\n    private readonly uploadPhotoConfig:UploadProps={\n        accept:\".jpg,.png\",\n        listType:\"picture-card\",\n        className:\"avatar-uploader\",\n        showUploadList:true,\n    }\n\n    /**\n     * 页面布局\n     */\n    render(){\n        if(!this.state.data){\n            return (<Row>\n                <Col span={24}>\n                    <Spin className=\"card-loading\" size=\"large\" tip=\"载入中...\" />\n                </Col>\n            </Row>);\n        }\n\n        const {getFieldDecorator} = this.props.form;\n        const {Meta}=Card;\n        const {Option}=Select;\n\n        const {data,editingData}=this.state;\n        const education=DictionaryLoader.instance.education();\n        const job=DictionaryLoader.instance.job(ApplyJobAndTitleTag.DOCTOR_AND_NURSE.tags);\n        const jobLabel=DictionaryLoader.instance.jobLabel;\n\n        return (\n            <div>\n                <Row>\n                    {data.map((person:ApplyContentDoctorOrNurse,index)=>(\n                        <Col span={5}>\n                            <Card bodyStyle={{paddingBottom:8}}\n                                actions={[\n                                    <Icon type=\"edit\" key=\"edit\" onClick={()=>this.showDrawer(index)} />,\n                                    <Icon type=\"delete\" key=\"delete\" />\n                                ]}\n                            >\n                                <Meta className=\"staff-meta\"\n                                    avatar={<img src={person.img}/>}\n                                    title={person.name}\n                                    description={\n                                        <p>\n                                            {jobLabel(person.position)}<br/>\n                                            {jobLabel(person.title)}<br/>\n                                            {person.dept}\n                                        </p>\n                                    }\n                                />\n                            </Card>\n                        </Col>\n                    ))}\n                    <Col span={5} offset={1}>\n                        <Button type=\"dashed\" \n                            style={{width:\"100%\",height:183}}\n                            onClick={()=>this.showDrawer(-1)}\n                        >\n                            <Icon type=\"plus\" /><br/>\n                            添加\n                        </Button>\n                    </Col>\n                </Row>\n                \n                {/* 医生和护士编辑抽屉 */}\n                {editingData?(\n                    <Drawer\n                        title={\n                            this.state.currentIndex===-1\n                                ?\"添加医护人员\"\n                                :`编辑人员（${editingData.name}）`\n                        } \n                        width={560}\n                        bodyStyle={{paddingBottom:54}}\n                        onClose={this.onClose}\n                        visible={this.state.drawerVisible}\n                    >\n                        <Form labelCol={{span:6}} wrapperCol={{span:18}}>\n                            <h4 className=\"title-form-sub\">信息填写</h4>\n                            <Row>\n                                <Col span={15}>\n                                    <Form.Item label=\"人员姓名\">{\n                                        getFieldDecorator(\"name\",{\n                                            initialValue:editingData.name,\n                                            rules:[\n                                                {required:true,message:\"人员姓名不能为空！\"}\n                                            ]\n                                        })(\n                                            <Input placeholder=\"请输入\" \n                                            />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={9}>\n                                    <Form.Item label=\"性别\" \n                                        labelCol={{span:8}} wrapperCol={{span:16}}\n                                    >{\n                                        getFieldDecorator(\"sex\",{\n                                            initialValue:(\"\"===editingData.sex?\"男\":editingData.sex),\n                                            rules:[\n                                                {required:false}\n                                            ]\n                                        })(\n                                            <Radio.Group\n                                            >\n                                                <Radio value=\"男\">男</Radio>\n                                                <Radio value=\"女\">女</Radio>\n                                            </Radio.Group>\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={15}>\n                                    <Form.Item label=\"身份证号\">{\n                                        getFieldDecorator(\"idcard\",{\n                                            initialValue:editingData.idcard,\n                                            rules:[\n                                                {required:true,message:\"身份证号码不能为空！\"}\n                                            ]\n                                        })(\n                                            <Input placeholder=\"请输入\" \n                                            />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={9}>&nbsp;</Col>\n                            </Row>\n                            <Row>\n                                <Col span={15}>\n                                    <Form.Item label=\"毕业院校\">{\n                                        getFieldDecorator(\"school\",{\n                                            initialValue:editingData.school,\n                                            rules:[\n                                                {required:false}\n                                            ]\n                                        })(\n                                            <Input placeholder=\"请输入\" \n                                            />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={9}>\n                                    <Form.Item label=\"学历\" \n                                        labelCol={{span:8}} wrapperCol={{span:16}}\n                                    >{\n                                        getFieldDecorator(\"education\",{\n                                            initialValue:(\"\"===editingData.education?undefined:editingData.education),\n                                            rules:[\n                                                {required:false}\n                                            ]\n                                        })(\n                                            <Select showSearch\n                                                placeholder=\"请选择\" \n                                                optionFilterProp=\"children\" \n                                                filterOption={(input, option:React.ReactElement) =>\n                                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                                }\n                                            >\n                                                {education.map((data:DictionaryData,index:number)=>{\n                                                    return (<Option key={data.value}>{data.label}</Option>);\n                                                })}\n                                            </Select>\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={15}>\n                                    <Form.Item label=\"职务职称\">{\n                                        getFieldDecorator(\"positionAndTitle\",{\n                                            initialValue:(\"\"===editingData.position&&\"\"===editingData.title?undefined:[editingData.position,editingData.title]),\n                                            rules:[\n                                                {required:true,message:\"职务职称不能为空！\"}\n                                            ]\n                                        })(\n                                            <Cascader \n                                                options={job} placeholder=\"请选择\" \n                                            />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={9}>\n                                    <Form.Item label=\"科室\"\n                                        labelCol={{span:8}} wrapperCol={{span:16}}\n                                    >{\n                                        getFieldDecorator(\"dept\",{\n                                            initialValue:editingData.dept,\n                                            rules:[\n                                                {required:true,message:\"所属科室不能为空！\"}\n                                            ]\n                                        })(\n                                            <Input placeholder=\"请输入\" \n                                            />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <h4 className=\"title-form-sub\">上传内容</h4>\n                            <Row>\n                                <Col span={12}>\n                                    {this.uploadJsxContent(\"identityFront\",\"身份证正面\",\"示例图\")}\n                                </Col>\n                                <Col span={12}>\n                                    {this.uploadJsxContent(\"identityBack\",\"身份证背面\",\"示例图\")}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={12}>\n                                    {this.uploadJsxContent(\"photo\",\"二寸寸照\",\"示例图\")}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={24}>\n                                    {this.uploadJsxContent(\"practice\",\"执业证书\")}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={24}>\n                                    {this.uploadJsxContent(\"qualification\",\"资格证书\")}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={24}>\n                                    {this.uploadJsxContent(\"title\",\"职称证书\")}\n                                </Col>\n                            </Row>\n                        </Form>\n                        <div className=\"bottom-bar\">\n                            <Button onClick={this.onClose} style={{ marginRight: 8 }}>\n                                取消\n                            </Button>\n                            <Button onClick={this.onClose} type=\"primary\">\n                                保存\n                            </Button>\n                        </div>\n                    </Drawer>\n                ):null}\n            </div>\n        );\n    }\n\n    /**\n     * 组件载入后读取人员列表\n     */\n    componentDidMount=async ()=>{\n        // 获取医护人员信息\n        const staffResponse:HttpResponse<Array<ApplyContentDoctorOrNurse>>=\n            await ((new HttpRequest()).get<Array<ApplyContentDoctorOrNurse>>(\n                `webapi/apply/doctorAndNurse?applyNo=${this.props.serialNumber}`\n            ));\n        // 失败跳转500\n        if(!staffResponse.success||!staffResponse.data){\n            this.props.history.push(PageError500);\n            return;\n        }\n\n        // 设置显示\n        this.setState({\n            ...this.state,\n            data:staffResponse.data\n        });\n    }\n\n    /**\n     * 返回指定的图片上传单元\n     */\n    uploadJsxContent=(key:string,label:string,example?:string)=>(\n        <Form.Item\n            label={label} className={`${key}-photos must-upload`}\n            labelCol={{span:24}} wrapperCol={{span:24}}\n            validateStatus={\n                !this.state.hasFileValidateError\n                    ?(this.state.uploadSuccess[key]?\"\":\"error\")\n                    :(this.state.fileList[key].length>0?\"\":\"error\")\n            }\n            help={\n                !this.state.hasFileValidateError\n                    ?(this.state.uploadSuccess[key]?\"支持扩展名：.jpg .png\":\"文件上传失败！\")\n                    :(this.state.fileList[key].length>0?\"支持扩展名：.jpg .png\":\"必须上传此文件！\")\n            }\n        >\n            <Row>\n                <Col span={10}>\n                    <Upload {...this.uploadPhotoConfig}\n                        name={key}\n                        customRequest={(fileObject:object)=>{\n                            this.uploadPhoto(fileObject,key);\n                        }}\n                        onRemove={(file:UploadFile)=>{\n                            this.uploadPhotoRemove(file,key)\n                        }}\n                        onPreview={(file:UploadFile)=>{\n                            this.uploadPhotoPreview(file,key)\n                        }}\n                        fileList={this.state.fileList[key]}\n                        disabled={this.props.disabled}\n                    >\n                        {this.state.uploadLimit[key]>this.state.fileList[key].length\n                        ?(\n                            <div>\n                                <Icon type=\"plus\" />\n                                <div className=\"ant-upload-text\">上传</div>\n                            </div>\n                        )\n                        :null}\n                    </Upload>\n                </Col>\n                {example?(\n                    <Col span={8} offset={1}>\n                        <Button type=\"dashed\" style={{height:102,width:102}}>\n                            <Icon type=\"file-image\" style={{fontSize:32}} />\n                            <br/>\n                            <span>{example}</span><Icon type=\"zoom-in\" />\n                        </Button>\n                    </Col>\n                ):null}\n            </Row>  \n        </Form.Item>\n    );\n\n    /**\n     * 打开抽屉\n     */\n    showDrawer = (index:number) => {\n        // 获取数据\n        const data=(index===-1||!this.state.data\n            ?ApplyContentDoctorOrNurseFactory.create(this.props.serialNumber)\n            :this.state.data[index]);\n\n        // 转换图片列表\n        let {identityFront,identityBack,photo,\n            practice,qualification,title}=this.state.fileList;\n        const identityArray=data.idcardImg.split(\",\");\n        const idFrontString=identityArray[0],\n            idBackString=identityArray.length>1?identityArray[1]:\"\";\n        identityFront.splice(0,identityFront.length);\n        identityFront=ApplyUtils.urlStringToUploadArray(identityFront,idFrontString);\n        identityBack.splice(0,identityBack.length);\n        identityBack=ApplyUtils.urlStringToUploadArray(identityBack,idBackString);\n        photo.splice(0,photo.length);\n        photo=ApplyUtils.urlStringToUploadArray(photo,data.img);\n        practice.splice(0,practice.length);\n        practice=ApplyUtils.urlStringToUploadArray(practice,data.practiceImg);\n        qualification.splice(0,qualification.length);\n        qualification=ApplyUtils.urlStringToUploadArray(qualification,data.qualificationCertImg);\n        title.splice(0,title.length);\n        title=ApplyUtils.urlStringToUploadArray(title,data.titleCertImg);\n\n        // 设置显示\n        this.setState({\n            ...this.state,\n            drawerVisible: true,\n            editingData:data,\n            currentIndex:index,\n            fileList:{\n                identityFront:identityFront,\n                identityBack:identityBack,\n                photo:photo,\n                practice:practice,\n                qualification:qualification,\n                title:title,\n            }\n        });\n    };\n\n    /**\n     * 关闭抽屉\n     */\n    onClose = () => {\n        this.setState({\n            drawerVisible: false,\n        });\n    };\n\n    /**\n     * 上传图片\n     */\n    uploadPhoto=async (fileObject:object,key:string)=>{\n        // 上传文件或图片\n        const option=fileObject as {file:File};\n        const uploadResponse=await (new HttpRequest())\n            .upload<{url:string},{applyNo:string}>\n            (\n                `webapi/comm/uploadFile`,\n                option.file,\n                \"file\",\n                {applyNo:this.props.serialNumber}\n            );\n        const {uploadSuccess}=this.state;\n        uploadSuccess[key]=(uploadResponse.success&&(uploadResponse.data!==null));\n        \n        //上传失败显示\n        if(!uploadSuccess[key]||!uploadResponse.data){\n            this.setState({\n                ...this.state,\n                uploadSuccess:uploadSuccess\n            });\n            return;\n        }\n\n        //上传成功，设置已上传列表\n        const {fileList}=this.state;\n        fileList[key].push({\n            uid:String(fileList[key].length),\n            name:option.file.name,\n            size:0,\n            type:\"\",\n            url:uploadResponse.data.url\n        });\n        this.setState({\n            ...this.state,\n            uploadSuccess:uploadSuccess,\n            fileList:fileList\n        });\n        this.props.onChange();\n    }\n\n    /**\n     * 全屏查看上传的图片\n     */\n    uploadPhotoPreview=(uploadFile:UploadFile,key:string)=>{\n        // 获取全部上传的图片元素\n        const row=document.querySelector<HTMLDivElement>(`.${key}-photos`);\n        if(!row) return;\n        const imgArray=row.querySelectorAll<HTMLImageElement>\n            (\".ant-upload-list-item-image\");\n        const imageList:Array<HTMLImageElement>=[];\n        const {fileList}=this.state;\n\n        const viewImageNameSet=ApplyUtils.uploadArrayToNameSet(fileList[key]);\n        let currentIndex=0;\n        imgArray.forEach((img,index)=>{\n            if(viewImageNameSet.has(img.alt)){\n                imageList.push(img);\n                currentIndex=(img.alt===uploadFile.name?index:currentIndex);\n            }\n        });\n\n        ImageViewer.view(imageList,currentIndex);\n    }\n\n    /**\n     * 删除上传的文件或图片\n     */\n    uploadPhotoRemove=(file:UploadFile,key:string)=>{\n        const {confirm}=Modal;\n        const {fileList}=this.state;\n        confirm({\n            title: '确定要删除当前上传的图片么？',\n            okText: '继续删除',\n            okType: 'danger',\n            cancelText: '取消',\n            onOk:()=>{\n                fileList[key].splice(fileList[key].findIndex(item=>item.uid===file.uid),1);\n                this.setState({\n                    ...this.state,\n                    fileList:fileList\n                });\n            },\n        });\n        this.props.onChange();\n    }\n}\nexport default withRouter(Form.create<StaffDoctorsAndNurseProps>({name:\"doctorsAndNurseForm\"})(StaffDoctorsAndNurse));"]},"metadata":{},"sourceType":"module"}