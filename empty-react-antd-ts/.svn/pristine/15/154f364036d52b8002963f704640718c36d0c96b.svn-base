import React from 'react';
import Container, { ContainerLoading } from '../../components/Container';
import { Breadcrumb, Icon, Row, Col, Descriptions, Statistic, Tabs, Button } from 'antd';
import { ApplyContentOrganization, ApplyContentManager, PageError500, ApplyContentEquipment, ApplyDetailGroup } from '../../app/Model';
import { HttpRequest, PageConfig } from '../../app/Request';
import { RouteComponentProps, withRouter } from 'react-router';
import ApplyDetailInforOrganization from '../../components/ApplyDetailInforOrganization';
import ApplyDetailInforManager from '../../components/ApplyDetailInforManager';
import ApplyDetailInforDoctorAndNurse from '../../components/ApplyDetailInforDoctorAndNurse';
import ApplyDetailInforStaffTech from '../../components/ApplyDetailInforStaffTech';
import ApplyDetailInforStaffOther from '../../components/ApplyDetailInforStaffOther';
import ApplyUtils from '../../utils/ApplyUtils';

/**
 * 机构信息维护首页
 */
class Organization extends React.Component<RouteComponentProps>{
    readonly state:{
        organization?:ApplyContentOrganization;
        equipments?:Array<ApplyContentEquipment>
        legal?:ApplyContentManager;
        princpal?:ApplyContentManager;
        contact?:ApplyContentManager;
        apiUrl:{
            [key:string]:any,
        };
        data:{
            [key:string]:any,
        };
        loading:{
            [key:string]:boolean,
        };
        loadError:{
            [key:string]:boolean,
        };
        page:{
            [key:string]:PageConfig
        }
    }={
        apiUrl:{
            doctors:"web/org/staffList",
            techs:"web/org/technicianList",
            others:"web/org/otherList"
        },
        data:{
            doctors:[],
            techs:[],
            others:[]
        },
        loading:{
            doctors:true,
            techs:true,
            others:true
        },
        loadError:{
            doctors:false,
            techs:false,
            others:false
        },
        page:{
            doctors:{index:1,size:10},
            techs:{index:1,size:10},
            others:{index:1,size:10}
        },
    }

    /**
     * 页面布局
     */
    render(){
        if(!this.state.organization
            ||!this.state.legal
            ||!this.state.princpal
            ||!this.state.contact){
            return (<ContainerLoading />);
        }

        const {TabPane}=Tabs;
        const {organization,legal,princpal,contact}=this.state;

        return (
            <Container needLogin={true} selectKey="organization">
                {/* 标题 */}
                <Breadcrumb className="breadcrumb">
                    <Breadcrumb.Item><Icon type="home"/><span>首页</span></Breadcrumb.Item>
                </Breadcrumb>
                {/* 基本信息 */}
                <Row className="content-container content-container-des" style={{marginTop:0,minHeight:0,marginBottom:0,width:"100%"}}>
                    <Col span={16}>
                        <Descriptions title={organization.name}>
                        <Descriptions.Item label="登记编号" span={3}>
                            {organization.eCertNo}
                            <Button type="link" icon="download" size="small" onClick={this.downloadCert}>下载电子证</Button>
                        </Descriptions.Item>
                            <Descriptions.Item label="证书有效期">{ApplyUtils.displayDate(organization.effictiveStartTime)}</Descriptions.Item>
                            <Descriptions.Item label="下个校验日" span={2}>{ApplyUtils.displayDate(organization.nextValidDate)}</Descriptions.Item>
                            <Descriptions.Item label="联系电话" span={3}>{contact.phone}</Descriptions.Item>
                            <Descriptions.Item span={3} label="机构地址">{organization.address}</Descriptions.Item>
                        </Descriptions>
                    </Col>
                    <Col span={8}>
                        <div className="statistic-group">
                            <Statistic title="医护人员" value={this.state.page.doctors.total} />
                            <Statistic title="医技人员" value={this.state.page.techs.total}/>
                            <Statistic title="其他人员" value={this.state.page.others.total}/>
                        </div>
                    </Col>
                </Row>
                <Row>
                    <Col span={22} offset={1}>
                        <Tabs>
                            <TabPane tab="机构详情" key="organization">
                                <ApplyDetailInforOrganization 
                                    data={this.state.organization}
                                    equipments={this.state.equipments}
                                />
                            </TabPane>
                            <TabPane tab="管理人员" key="manager">
                                <ApplyDetailInforManager 
                                    legal={this.state.legal}
                                    princpal={this.state.princpal}
                                    contact={this.state.contact}
                                />
                            </TabPane>
                            <TabPane tab="医护人员" key="doctorsAndNurse">
                                <ApplyDetailInforDoctorAndNurse 
                                    data={this.state.data.doctors}
                                    page={this.state.page.doctors}
                                    loading={this.state.loading.doctors}
                                    loadedError={this.state.loadError.doctors}
                                    onPageChange={this.onPageChange}
                                />
                            </TabPane>
                            <TabPane tab="医技人员" key="staffTechs">
                                <ApplyDetailInforStaffTech 
                                    data={this.state.data.techs}
                                    page={this.state.page.techs}
                                    loading={this.state.loading.techs}
                                    loadedError={this.state.loadError.techs}
                                    onPageChange={this.onPageChange}
                                />
                            </TabPane>
                            <TabPane tab="其他人员" key="staffOthers">
                                <ApplyDetailInforStaffOther
                                    data={this.state.data.others}
                                    page={this.state.page.others}
                                    loading={this.state.loading.others}
                                    loadedError={this.state.loadError.others}
                                    onPageChange={this.onPageChange}
                                />
                            </TabPane>
                        </Tabs>
                    </Col>
                </Row>
            </Container>
        );
    }

    /**
     * 页面载入后，载入机构信息
     */
    async componentDidMount(){
        // 请求
        const detailResponse=await ((new HttpRequest())
            .get<ApplyDetailGroup>("web/org/orgInfo"));

        // 获取失败，跳转500
        if(!detailResponse.success||!detailResponse.data){
            this.props.history.push(PageError500);
            return;
        }

        // 分解三个管理人员
        let legal,princpal,contact;
        const {managerPerson}=detailResponse.data;
        managerPerson.forEach(person=>{
            switch(person.type){
                // 法人
                case 1:
                    legal=person;
                    break;
                // 负责人
                case 2:
                    princpal=person;
                    break;
                // 联系人
                case 3:
                    contact=person;
                    break;
                default:
            }
        });

        // 设置内容
        this.setState({
            ...this.state,
            organization:detailResponse.data.orgInfo,
            equipments:detailResponse.data.equipment,
            legal:legal,
            princpal:princpal,
            contact:contact,
        });

        // 载入医护人员
        this.loadData("doctors",this.state.page.doctors);
        // 载入医技人员
        this.loadData("techs",this.state.page.techs);
        // 载入其他人员
        this.loadData("others",this.state.page.others);
    }

    /**
     * 换页处理
     */
    onPageChange=(key:string,toPage?:number)=>{
        toPage=toPage||this.state.page[key].index;
        this.loadData(key,{index:toPage,size:this.state.page[key].size});
    }

    /**
     * 载入数据
     */
    loadData=async (key:string,toPage:PageConfig)=>{
        // 设置请求状态
        const {loading,loadError,apiUrl,data,page}=this.state;
        loading[key]=true;
        loadError[key]=false;
        this.setState({...this.state,loading:loading,loadedError:loadError});

        // 发送请求
        const listResponse=await ((new HttpRequest())
            .get<Array<any>>(apiUrl[key],toPage));

        // 错误返回
        if(!listResponse.success||!listResponse.data){
            loading[key]=false;
            loadError[key]=true;
            this.setState({
                ...this.state,
                loading:loading,
                loadError:loadError,
            });
            return;
        }

        // 记录列表
        loading[key]=false;
        loadError[key]=false;
        data[key]=listResponse.data;
        page[key]=listResponse.pageConfig||page[key];
        this.setState({
            ...this.state,
            loading:loading,
            loadError:loadError,
            data:data,
            page:page
        });
    }

    /**
     * 下载电子证
     */
    downloadCert=()=>{
        const {organization}=this.state;
        if(!organization||!organization.eCert) return;
        window.open(organization.eCert);
    }
}
export default withRouter(Organization);