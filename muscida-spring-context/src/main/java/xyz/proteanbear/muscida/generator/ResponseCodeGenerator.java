package xyz.proteanbear.muscida.generator;

import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Properties;

/**
 * 返回状态码生成器
 * 载入response_message属性文件并生成ResponseCode类
 *
 * @author ProteanBear
 * @version 1.0.0,2018/04/16
 * @since 1.0
 */
public class ResponseCodeGenerator
{
    /**
     * Class template content
     */
    private static final String templateClass=
            "package xyz.proteanbear.phecda.mapping;\n\n"+
            "/**\n"+
            " * Response Status Code(generated by code)\n\n"+
            " * @author ProteanBear\n"+
            " * @version 1.0.0,${DATE_CURRENT}\n"+
            " * @since 1.0\n"+
            " */\n"+
            "public class ResponseCode\n";

    /**
     * Property field template content
     */
    private static final String templateField=
            "\n"+
            "    /**\n"+
            "     * ${NAME}:${VALUE}\n"+
            "     */\n"+
            "    public static final String ${NAME}=\"${NAME}\";\n";

    /**
     * Property content
     */
    private Properties properties;

    /**
     * Generate content
     */
    private StringBuilder content=new StringBuilder();

    /**
     * Date formatting
     */
    private SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy/MM/dd");

    /**
     * Constructor
     *
     * @param properties
     */
    public ResponseCodeGenerator(Properties properties)
    {
        this.properties=properties;
    }

    /**
     * @return current object
     */
    public ResponseCodeGenerator generate()
    {
        //cleanup
        content.delete(0,content.length());

        //generate class
        content.append(templateClass.replaceAll(
                "\\$\\{DATE_CURRENT\\}",
                dateFormat.format(new Date())
        ));
        content.append("{\n");

        //Loop to generate static field content
        Object value;
        for(String name : properties.stringPropertyNames())
        {
            value=properties.get(name);
            content.append(
                    templateField
                            .replaceAll("\\$\\{NAME\\}",name)
                            .replaceAll("\\$\\{VALUE\\}",value==null?"":(value+""))
            );
        }

        content.append("}");
        return this;
    }

    /**
     * Save to the specified location
     *
     * @param file the file object for saved
     */
    public void saveTo(File file) throws IOException
    {
        //If the file is exist,delete it
        if(file.exists()) file.delete();
        //create a new file
        file.createNewFile();
        //write into the new file
        byte bytes[]=new byte[512];
        FileOutputStream outputStream=new FileOutputStream(file);
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream,"UTF-8"));
        writer.write(content.toString());
        writer.close();
    }

    /**
     * Main
     *
     * @param args ignore
     */
    public static void main(String[] args)
    {
        System.out.println("Start generating the class 'ResponseCode'!");

        //Get current project location
        String projectPath=System.getProperty("user.dir");
        System.out.println("Get current project path:"+projectPath);

        Properties properties;
        try
        {
            //Read application.properties
            String propertiesFilePath=projectPath
                    +File.separator+"src"
                    +File.separator+"main"
                    +File.separator+"resources"
                    +File.separator+"application.properties";
            properties=new Properties();
            properties.load(new InputStreamReader(
                    new FileInputStream(propertiesFilePath),"UTF-8")
            );
            System.out.println("Get the path of the application property file:"+propertiesFilePath);

            //response_message property file
            propertiesFilePath=projectPath
                    +File.separator+"src"
                    +File.separator+"main"
                    +File.separator+"resources"
                    +File.separator
                    +properties.getProperty("message.response.baseName").replace("classpath:","").replace("classpath*:","")
                    +"_"+Locale.getDefault().getLanguage()
                    +"_"+Locale.getDefault().getCountry()
                    +".properties";
            //Read property file
            properties=new Properties();
            properties.load(new InputStreamReader(
                    new FileInputStream(propertiesFilePath),"UTF-8")
            );
            System.out.println("Get the path of the response_message property file:"+propertiesFilePath);

            //The file path of the generated class
            String classFilePath=projectPath
                    +File.separator+"src"
                    +File.separator+"main"
                    +File.separator+"java"
                    +File.separator+"xyz"
                    +File.separator+"proteanbear"
                    +File.separator+"phecda"
                    +File.separator+"mapping"
                    +File.separator+"ResponseCode"
                    +".java";
            System.out.println("Get the path of the ResponseCode class file:"+classFilePath);
            //Save
            new ResponseCodeGenerator(properties)
                    .generate()
                    .saveTo(new File(classFilePath));
        }
        catch(IOException e)
        {
            e.printStackTrace();
        }

        System.out.println("Generate the ResponseCode class complete!");
    }
}