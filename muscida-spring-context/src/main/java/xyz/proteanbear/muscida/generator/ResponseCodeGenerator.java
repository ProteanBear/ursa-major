package xyz.proteanbear.muscida.generator;

import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;

/**
 * Return status code generator
 * Load the response_message property file and generate the ResponseCode class
 *
 * @author ProteanBear
 * @version 1.0.0,2018/04/16
 * @since 1.0
 */
public class ResponseCodeGenerator implements CodeGenerator
{
    /**
     * Class template content
     */
    private static final String DEFAULT_TEMPLATE_CLASS=
            "package xyz.proteanbear.phecda.mapping;\n\n"+
                    "/**\n"+
                    " * Response Status Code(generated by code)\n\n"+
                    " * @author ProteanBear\n"+
                    " * @version 1.0.0,${DATE_CURRENT}\n"+
                    " * @since 1.0\n"+
                    " */\n"+
                    "public class ResponseCode\n";

    /**
     * Property field template content
     */
    private static final String DEFAULT_TEMPLATE_FIELD=
            "\n"+
                    "    /**\n"+
                    "     * ${NAME}:${VALUE}\n"+
                    "     */\n"+
                    "    public static final String ${NAME}=\"${NAME}\";\n";

    /**
     * Property content
     */
    private Properties properties;

    /**
     * Date formatting
     */
    private SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy/MM/dd");

    /**
     * Template for class
     */
    private String templateClass;

    /**
     * Template for field
     */
    private String templateField;

    /**
     * Constructor
     *
     * @param properties properties setting
     */
    public ResponseCodeGenerator(Properties properties)
    {
        this.properties=properties;
    }

    /**
     * Load the template file
     *
     * @param file template file
     */
    @Override
    public CodeGenerator loadTemplate(File file)
    {
        try
        {
            Map<String,String> templates=CodeGenerator.catchTemplate(file);
            this.templateClass=templates.getOrDefault(CodeGenerator.TEMPLATE_MAIN,DEFAULT_TEMPLATE_CLASS);
            this.templateField=templates.getOrDefault("TEMPLATE_FIELD",DEFAULT_TEMPLATE_FIELD);
        }
        catch(IOException e)
        {
            e.printStackTrace();
            this.templateClass=DEFAULT_TEMPLATE_CLASS;
            this.templateField=DEFAULT_TEMPLATE_FIELD;
        }
        return this;
    }

    /**
     * @return current object
     */
    public String generate()
    {
        //generate class
        String content=templateClass.replaceAll("\\$\\{DATE_CURRENT\\}",dateFormat.format(new Date()));

        //Loop to generate static field content
        StringBuilder contentProperties=new StringBuilder();
        properties.stringPropertyNames().forEach((name) -> {
            Object value=properties.get(name);
            contentProperties.append(
                    templateField
                            .replaceAll("\\$\\{NAME\\}",name)
                            .replaceAll("\\$\\{VALUE\\}",value==null?"":(value+""))
            );
        });

        return content.replaceAll("\\$\\{TEMPLATE_FIELD\\}",contentProperties.toString());
    }

    /**
     * Main
     *
     * @param args ignore
     */
    public static void main(String[] args)
    {
        System.out.println("Start generating the class 'ResponseCode'!");

        //Get current project location
        String projectPath=System.getProperty("user.dir");
        System.out.println("Get current project path:"+projectPath);

        Properties properties;
        try
        {
            //Read application.properties
            String propertiesFilePath=projectPath
                    +File.separator+"src"
                    +File.separator+"main"
                    +File.separator+"resources"
                    +File.separator+"application.properties";
            properties=new Properties();
            properties.load(new InputStreamReader(
                    new FileInputStream(propertiesFilePath),"UTF-8")
            );
            System.out.println("Get the path of the application property file:"+propertiesFilePath);

            //response_message property file
            propertiesFilePath=projectPath
                    +File.separator+"src"
                    +File.separator+"main"
                    +File.separator+"resources"
                    +File.separator
                    +properties.getProperty("message.response.baseName").replace("classpath:","")
                    .replace("classpath*:","")
                    +"_"+Locale.getDefault().getLanguage()
                    +"_"+Locale.getDefault().getCountry()
                    +".properties";
            //Read property file
            properties=new Properties();
            properties.load(new InputStreamReader(
                    new FileInputStream(propertiesFilePath),"UTF-8")
            );
            System.out.println("Get the path of the response_message property file:"+propertiesFilePath);

            //The file path of the generated class
            String classFilePath=projectPath
                    +File.separator+"src"
                    +File.separator+"main"
                    +File.separator+"java"
                    +File.separator+"xyz"
                    +File.separator+"proteanbear"
                    +File.separator+"phecda"
                    +File.separator+"mapping"
                    +File.separator+"ResponseCode"
                    +".java";
            System.out.println("Get the path of the ResponseCode class file:"+classFilePath);
            //The template file
            String templateFile=projectPath
                    +File.separator+"src"
                    +File.separator+"main"
                    +File.separator+"resources"
                    +File.separator+"template"
                    +File.separator+"ResponseCode.txt";
            //Save
            new ResponseCodeGenerator(properties)
                    .loadTemplate(new File(templateFile))
                    .saveTo(new File(classFilePath));
        }
        catch(IOException e)
        {
            e.printStackTrace();
        }

        System.out.println("Generate the ResponseCode class complete!");
    }
}