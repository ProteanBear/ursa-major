# Parameter Validator Error Message
xyz.proteanbear.phecda.validator.NotHtmlText.message=Can not contain HTML special characters

# java.validation
javax.validation.constraints.AssertFalse.message=The value of ${attributeName} must be false
javax.validation.constraints.AssertTrue.message=The value of ${attributeName} must be true
javax.validation.constraints.DecimalMax.message=The value of ${attributeName} must be ${inclusive?' less than or equal to ':' less than '}{value}
javax.validation.constraints.DecimalMin.message=The value of ${attributeName} must be ${inclusive?' greater than or equal to':' greater than'}{value}
javax.validation.constraints.Digits.message=${attributeName} exceeds the limit of the number of digits, requiring a maximum of {integer} digits and containing {fraction} decimal digits
javax.validation.constraints.Email.message=${attributeName} has an incorrect email format
javax.validation.constraints.Future.message=The date of ${attributeName} must be in the future
javax.validation.constraints.Past.message=The date ${attributeName} must be in the past
javax.validation.constraints.FutureOrPresent.message=The date ${attributeName} must be dated today or in the future
javax.validation.constraints.PastOrPresent.message=The date ${attributeName} must be dated or past
javax.validation.constraints.Max.message=The value of ${attributeName} must be less than or equal to {value}
avax.validation.constraints.Min.message=The value of j${attributeName} must be greater than or equal to {value}
javax.validation.constraints.NotBlank.message=${attributeName} cannot be a white space character
javax.validation.constraints.NotEmpty.message=${attributeName} cannot be empty
javax.validation.constraints.NotNull.message=${attributeName} cannot be empty
javax.validation.constraints.Null.message=${attributeName} must be empty
javax.validation.constraints.Pattern.message=${attributeName} doesn't match format
javax.validation.constraints.Negative.message=${attributeName} must have a negative value
javax.validation.constraints.NegativeOrZero.message=The value of ${attributeName} must be negative or 0
javax.validation.constraints.Positive.message=${attributeName} must have a positive value
javax.validation.constraints.PositiveOrZero.message=${attributeName} must have a positive value or 0
javax.validation.constraints.Size.message=${attributeName} must be between {min} and {max}

# hibernate.validator
org.hibernate.validator.constraints.CreditCardNumber.message=The format of ${attributeName} does not match
org.hibernate.validator.constraints.Currency.message=Error in currency unit of ${attributeName}
org.hibernate.validator.constraints.time.DurationMax.message=The specified interval of ${attributeName} must be ${inclusive?' less than or equal to ':' less than '}
org.hibernate.validator.constraints.time.DurationMin.message=The specified interval of ${attributeName} must be ${inclusive?' greater than or equal to ':' greater than '}
org.hibernate.validator.constraints.EAN.message=${attributeName} value is not a valid EAN barcode
org.hibernate.validator.constraints.ISBN.message=value of ${attributeName} is not a valid ISBN barcode
org.hibernate.validator.constraints.Length.message=The length of the character ${attributeName} must be between {min} and {max}
org.hibernate.validator.constraints.LuhnCheck.message=The number of ${attributeName} does not comply with the Luhn checksum algorithm
org.hibernate.validator.constraints.Mod10Check.message=The number of ${attributeName} does not match the Mod10 checksum algorithm
org.hibernate.validator.constraints.Mod11Check.message=The number of ${attributeName} does not match the Mod11 checksum algorithm
org.hibernate.validator.constraints.Range.message=The value of ${attributeName} must be between {min} and {max}
org.hibernate.validator.constraints.URL.message=Invalid link address of ${attributeName}