# 数据库连接池配置：开发环境
# 初始化连接大小
pool.initialSize=3
# 连接池最大使用连接数量
pool.maxActive=20
# 连接池最小空闲
pool.minIdle=5

# 获取连接最大等待时间
pool.maxWait=10000

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
pool.timeBetweenEvictionRunsMillis=30000
# 配置一个连接在池中最小生存的时间，单位是毫秒
pool.minEvictableIdleTimeMillis=30000

# 验证数据库连接有效性，要求查询语句
pool.validationQuery=SELECT 1
# 申请连接时执行validationQuery检测连接是否有效，配置true会降低性能。
pool.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，配置true会降低性能。
pool.testOnReturn=false
# 建议配置为true，不影响性能，并且保证安全性。
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
pool.testWhileIdle=true

# 是否缓存preparedStatement，也就是PSCache。
# PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
pool.poolPreparedStatements=false
# 缓存的数量
pool.maxPoolPreparedStatementPerConnectionSize=20

# 对于长时间不使用的连接强制关闭
pool.removeAbandoned=true
# 关闭超过设置时间的空闲连接，单位为秒
pool.removeAbandonedTimeout=60
# 关闭连接时输出错误日志
pool.logAbandoned=true

# 统计监控
# 是否合并同类的未参数化的SQL
pool.mergeSql=true
# 缓慢SQL的标准
pool.slowSqlMillis=10
# 通过日志输出执行慢的SQL
pool.logSlowSql=true
# 是否合并多个DruidDataSource的监控数据
pool.useGlobalDataSourceStat=true