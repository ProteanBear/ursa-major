# Redis服务配置
# 指定Redis模式，可设置为simple(单机)/sentinel(主从)/cluster(集群)
redis.server.mode=simple
# 连接超时时间，单位为毫秒
redis.server.connectTimeout=3000
# 读取超时时间，单位为毫秒
redis.server.readTimeout=10000
# 服务器地址和端口，集群模式使用逗号分隔多个server
# mode设置为simple，则即使设置多个server，也会只取第一个
redis.server.address=localhost:6379
# 访问密码
redis.server.password=
# 是否使用连接池
redis.server.isUsePool=true
# 是否使用SSL连接
redis.server.isUseSSL=false
# 主备模式下指定
# 这个值要和Sentinel中指定的master的值一致，不然启动时找不到Sentinel会报错的
redis.server.masterName=master

# 是否开启事务处理
redis.execute.enableTransactionSupport=true

# 连接池配置
# 最大连接数：能够同时建立的“最大链接个数”
redis.pool.maxTotal=8
# 最大空闲数：空闲链接数大于maxIdle时，将进行回收
redis.pool.maxIdle=8
# 最小空闲数：低于minIdle时，将创建新的链接
redis.pool.minIdle=0
# 获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常,小于零:阻塞不确定的时间,默认-1
redis.pool.maxWaitMillis=-1
# 逐出连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.pool.minEvictableIdleTimeMillis=1800000
# 每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
redis.pool.numTestsPerEvictionRun=3
# 对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)
redis.pool.softMinEvictableIdleTimeMillis=1800000
# 在创建的时候检查有效性
redis.pool.testOnCreate=false
# 在获取连接的时候检查有效性
redis.pool.testOnBorrow=false
# 在返回连接的时候检查有效性
redis.pool.testOnReturn=false
# 在空闲的时候检查有效性
redis.pool.testWhileIdle=true
# 逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.pool.timeBetweenEvictionRunsMillis=-1

# 以下不建议修改
# 连接耗尽时是否阻塞, false报异常,true阻塞直到超时, 默认true
redis.pool.blockWhenExhausted=true
# 设置的逐出策略类名, 默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数)
redis.pool.evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy
# 是否启用pool的jmx管理功能, 默认true
redis.pool.jmxEnabled=true
redis.pool.jmxNamePrefix=pool
# 是否启用后进先出, 默认true
redis.pool.lifo=true

# 缓存配置
# 是否开启缓存
redis.cache.enable=true
# 缓存超时时间，单位为分钟，0为不超时
redis.cache.ttl=0
# 是否保存空（null）内容
redis.cache.cacheNullValues=true
# 是否使用键名前缀
redis.cache.usePrefix=true
# 指定使用的键名前缀
redis.cache.keyPrefix=phecda_mvn_cache_

# 订阅消息设置
# 是否开启消息订阅
redis.subscribe.enable=true
# 订阅的频道名称前缀
# 统一使用模式订阅，使用*作为通配符；这里不需要使用*，创建时会自动添加
# 发送时使用此前缀+具体子频道名称
redis.subscribe.patternPrefix=phecda_mvn_receiver: