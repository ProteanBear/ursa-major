<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 自定义属性 -->
    <properties>
        <!-- jdk版本 -->
        <version-jdk>1.8</version-jdk>
        <!-- jar编译器 -->
        <version-maven-complier>3.7.0</version-maven-complier>
        <!-- war打包 -->
        <version-maven-war>3.2.0</version-maven-war>
        <!-- 工具执行 -->
        <version-maven-exec>1.6.0</version-maven-exec>

        <!-- Muscida -->
        <version-muscida>1.0.0-SNAPSHOT</version-muscida>

        <!-- Spring -->
        <version-spring>5.0.5.RELEASE</version-spring>
        <!-- Aspectj -->
        <version-aspectj>1.9.1</version-aspectj>
        <!-- Jackson -->
        <version-jackson>2.9.5</version-jackson>
        <!-- validator -->
        <version-validator>6.0.9.Final</version-validator>
        <!-- MyBatis -->
        <version-mybatis>3.4.6</version-mybatis>
        <version-mybatis-spring>1.3.2</version-mybatis-spring>
        <!-- Redis -->
        <version-spring-redis>2.0.6.RELEASE</version-spring-redis>
        <version-jedis>2.9.0</version-jedis>
        <!-- data -->
        <!-- 使用的数据库 -->
        <data-group-id>mysql</data-group-id>
        <data-artifact-id>mysql-connector-java</data-artifact-id>
        <version-driver>8.0.11</version-driver>
        <version-pool>1.1.9</version-pool>
        <!-- log -->
        <version-log>1.2.3</version-log>

        <!-- servlet -->
        <version-servlet>4.0.0</version-servlet>

        <!-- junit -->
        <version-junit>4.12</version-junit>

        <!-- 项目信息:适用于web.xml -->
        <!-- 显示名称 -->
        <project-display-name>ursa-major:phecda-maven-ssm-enterprise</project-display-name>
        <!-- 网站描述 -->
        <project-description>Phecda Maven SSM Enterprise Project</project-description>
        <!-- 小图标地址 -->
        <project-icon-small></project-icon-small>
        <!-- 大图标地址 -->
        <project-icon-large></project-icon-large>
        <!-- 欢迎页面 -->
        <project-page-welcome>index.html</project-page-welcome>
        <!-- 错误页面 -->
        <project-page-404>error404.html</project-page-404>
        <project-page-405>error405.html</project-page-405>
        <project-page-500>error500.html</project-page-500>
        <!-- 跨域设置:为空即为不支持跨域 -->
        <!-- 允许访问的客户端域名，例如：http://web.xxx.com若为*，则表示从任意域都能访问，即不做任何限制 -->
        <project-allow-origin></project-allow-origin>
        <!-- 允许访问的方法名，多个方法名用逗号分割，例如：GET,POST,PUT,DELETE,OPTIONS -->
        <project-allow-methods></project-allow-methods>
        <!-- 是否允许请求带有验证信息，若要获取客户端域下的cookie时，需要将其设置为true -->
        <project-allow-credentials></project-allow-credentials>
        <!-- 允许服务端访问的客户端请求头，多个请求头用逗号分割，例如：Content-Type -->
        <project-allow-headers>Content-Type,Token</project-allow-headers>
        <!-- 允许客户端访问的服务端响应头，多个响应头用逗号分割 -->
        <project-expose-headers></project-expose-headers>

        <!-- 项目信息:适用于Spring配置 -->
        <!-- 基础包名 -->
        <project-base-package>xyz.proteanbear</project-base-package>
        <project-url-pattern>/api/v${version}/</project-url-pattern>
    </properties>

    <!-- 项目信息 -->
    <groupId>xyz.proteanbear</groupId>
    <artifactId>phecda-maven-ssm-enterprise</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <!-- Web信息 -->
    <name>Phecda-Maven-SSM-Enterprise</name>
    <url>http://www.example.com</url>

    <!-- 依赖仓库 -->
    <repositories>
        <!-- Maven中心仓库 -->
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!-- 依赖库 -->
    <dependencies>
        <!-- Compile -->
        <!-- Spring and SpringMVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${version-spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${version-spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${version-spring}</version>
        </dependency>
        <!-- aop -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${version-spring}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${version-aspectj}</version>
        </dependency>
        <!-- Jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${version-jackson}</version>
        </dependency>
        <!-- validator -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${version-validator}</version>
        </dependency>
        <!-- MyBatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${version-mybatis}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${version-mybatis-spring}</version>
        </dependency>
        <dependency>
            <groupId>xyz.proteanbear</groupId>
            <artifactId>muscida-spring-mybatis</artifactId>
            <version>${version-muscida}</version>
        </dependency>
        <!-- Redis -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>${version-spring-redis}</version>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${version-jedis}</version>
        </dependency>
        <dependency>
            <groupId>xyz.proteanbear</groupId>
            <artifactId>muscida-spring-redis</artifactId>
            <version>${version-muscida}</version>
        </dependency>
        <!-- Database driver -->
        <dependency>
            <groupId>${data-group-id}</groupId>
            <artifactId>${data-artifact-id}</artifactId>
            <version>${version-driver}</version>
        </dependency>
        <!-- Connector pool -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${version-pool}</version>
        </dependency>
        <!-- log -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${version-log}</version>
        </dependency>

        <!-- Provided -->
        <!-- Servlet Api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${version-servlet}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test -->
        <!-- junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version-junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- Profile配置 -->
    <profiles>
        <!-- 环境变量：develop，默认 -->
        <profile>
            <id>envDevelop</id>
            <properties>
                <environment>develop</environment>
            </properties>
            <activation><activeByDefault>true</activeByDefault></activation>
        </profile>
        <!-- 环境变量：test -->
        <profile>
            <id>envTest</id>
            <properties>
                <environment>test</environment>
            </properties>
        </profile>
        <!-- 环境变量：product -->
        <profile>
            <id>envProduct</id>
            <properties>
                <environment>product</environment>
            </properties>
        </profile>
        <!-- 代码执行 -->
        <!-- ResponseCode：生成器，便于开发调用返回的错误状态值 -->
        <!-- 命令：mvn test -P response-code -->
        <profile>
            <id>response-code</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${version-maven-exec}</version>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <goals><goal>java</goal></goals>
                                <configuration>
                                    <mainClass>xyz.proteanbear.muscida.generator.ResponseCodeGenerator</mainClass>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- 构建 -->
    <build>
        <!-- 文件名 -->
        <finalName>${artifactId}-${version}</finalName>
        <!-- 存放目录 -->
        <directory>${basedir}/target</directory>
        <!-- 插件 -->
        <plugins>
            <!-- 编译器：UTF-8编码、libs外部jar库 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version-maven-complier}</version>
                <configuration>
                    <source>${version-jdk}</source>
                    <target>${version-jdk}</target>
                    <encoding>UTF-8</encoding>
                    <compilerArguments>
                        <extdirs>libs</extdirs>
                    </compilerArguments>
                </configuration>
            </plugin>
            <!-- 打包：新增过滤web资源配置 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version-maven-war}</version>
                <configuration>
                    <warName>${artifactId}-${version}</warName>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                        </resource>
                        <resource>
                            <directory>src/main/resources</directory>
                            <targetPath>WEB-INF/classes</targetPath>
                            <filtering>true</filtering>
                        </resource>
                        <resource>
                            <directory>src/main/resources-${environment}</directory>
                            <targetPath>WEB-INF/classes</targetPath>
                            <filtering>true</filtering>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
        <!-- 代码内部资源文件：xml -->
        <resources>
            <!-- 代码中的属性和配置文件 -->
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <!-- 配置资源文件:公共 -->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.yaml</include>
                </includes>
                <excludes>
                    <exclude>**/*.txt</exclude>
                </excludes>
                <filtering>true</filtering>
            </resource>
            <!-- 配置资源文件:当前环境 -->
            <resource>
                <directory>src/main/resources-${environment}</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.yaml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <!-- webapp中使用pom.xml中的属性值 -->
            <resource>
                <directory>src/main/webapp</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*</exclude>
                </excludes>
            </resource>
        </resources>
    </build>
</project>
